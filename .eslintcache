[{"D:\\Dev\\covinsights\\src\\reportWebVitals.js":"1","D:\\Dev\\covinsights\\src\\App.js":"2","D:\\Dev\\covinsights\\src\\pages\\RiskForm.js":"3","D:\\Dev\\covinsights\\src\\pages\\RiskCalculator.js":"4","D:\\Dev\\covinsights\\src\\index.js":"5","D:\\Dev\\covinsights\\src\\components\\Navbar.js":"6","D:\\Dev\\covinsights\\src\\css\\CardWrapper.js":"7","D:\\Dev\\covinsights\\src\\css\\Theme.js":"8","D:\\Dev\\covinsights\\src\\css\\ContactFormWrapper.js":"9","D:\\Dev\\covinsights\\src\\css\\GlobalStyle.js":"10"},{"size":362,"mtime":1606158119788,"results":"11","hashOfConfig":"12"},{"size":528,"mtime":1606158119788,"results":"13","hashOfConfig":"12"},{"size":2290,"mtime":1606162182731,"results":"14","hashOfConfig":"12"},{"size":2912,"mtime":1606162408367,"results":"15","hashOfConfig":"12"},{"size":573,"mtime":1606163401188,"results":"16","hashOfConfig":"12"},{"size":598,"mtime":1606164092895,"results":"17","hashOfConfig":"12"},{"size":1729,"mtime":1606076399209,"results":"18","hashOfConfig":"12"},{"size":345,"mtime":1606076399382,"results":"19","hashOfConfig":"12"},{"size":785,"mtime":1606076399231,"results":"20","hashOfConfig":"12"},{"size":1901,"mtime":1606076399279,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18klzf",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\covinsights\\src\\reportWebVitals.js",[],"D:\\Dev\\covinsights\\src\\App.js",[],"D:\\Dev\\covinsights\\src\\pages\\RiskForm.js",["46","47"],"import React, { Component } from \"react\"\r\nimport Switch from \"@material-ui/core/Switch\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport { IconButton, Button } from \"@material-ui/core\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nconst defaultProps = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"20rem\", height: \"10rem\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  p: \"1rem\",\r\n}\r\n\r\nclass RiskForm extends Component {\r\n  state = {\r\n    id: this.props.id,\r\n    name: this.props.name,\r\n    showForm: this.props.showForm,\r\n    wearMask: this.props.wearMask,\r\n    nbPeople: this.props.nbPeople,\r\n    maskProportion: this.props.maskProportion,\r\n    outdoors: this.props.outdoors,\r\n    talking: this.props.talking,\r\n    distance: this.props.distance,\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.checked })\r\n  }\r\n\r\n  showForm = () => {\r\n    return (\r\n      <div>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            WearMask : {this.state.wearMask === true ? \"True\" : \"False\"}\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton aria-label=\"delete\" onClick={() => this.setState({ showForm: false })}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showCreator = () => {\r\n    return (\r\n      <div>\r\n        <Switch\r\n          checked={this.state.wearMask}\r\n          onChange={this.handleChange}\r\n          name=\"wearMask\"\r\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n        />\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => this.setState({ showForm: true })}\r\n        >\r\n          {\" \"}\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Activity {this.state.id}</h1>\r\n        {this.state.showForm ? this.showForm() : this.showCreator()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nRiskForm.defaultProps = {\r\n  showForm: false,\r\n  wearMask: false,\r\n  nbPeople: 0,\r\n  maskProportion: 0,\r\n  outdoors: false,\r\n  talking: \"normal\",\r\n  distance: \"normal\",\r\n}\r\nexport default RiskForm\r\n","D:\\Dev\\covinsights\\src\\pages\\RiskCalculator.js",["48"],"import React, { Component } from \"react\"\r\nimport RiskForm from \"./RiskForm.js\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport ClearIcon from \"@material-ui/icons/Clear\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport { IconButton, Button } from \"@material-ui/core\"\r\n\r\n/*\r\n***** TODO *****\r\nAjouter des boutons avec activitÃ©s toutes faites, permettant de les ajouter en cliquant dessus.\r\n\r\n***** END TODO *****\r\n*/\r\n\r\nconst defaultBoxProps = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"20rem\", height: \"10rem\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  p: \"1rem\",\r\n}\r\n\r\nclass RiskCalculator extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {activities: [], nextId:0,}\r\n    this.defaultActivityArgs = {\r\n      wearMask: true,\r\n      nbPeople: 0,\r\n      maskProportion: 0,\r\n      outdoors: false,\r\n      talking: \"normal\",\r\n      distance: \"normal\",\r\n    }\r\n  }\r\n\r\n  addActivity = (args = this.defaultActivityArgs) => {\r\n    console.log(\"bonjour\");\r\n    const myId = [this.state.nextId]\r\n    const widget = (\r\n      <Grid item xs={12}>\r\n        <Box borderRadius={16} {...defaultBoxProps}>\r\n          <div>\r\n            <IconButton aria-label=\"delete\" onClick={() => this.clear(myId[0])}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n          <RiskForm id={myId} {...args} />\r\n        </Box>\r\n      </Grid>\r\n    )\r\n    this.setState({ nextId: this.state.nextId + 1 })\r\n    var widgets = this.state.activities.slice()\r\n    widgets.push(widget)\r\n    this.setState({ activities: widgets })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.addActivity();\r\n  }\r\n\r\n  clearAll = () => {\r\n    this.setState({ nextId: 0, activities: [] })\r\n  }\r\n\r\n  clear = id => {\r\n    var widgets = this.state.activities.slice()\r\n    widgets[id] = <div />\r\n    this.setState({ activities: widgets })\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <div>\r\n        <Grid container spacing={2}>\r\n          {this.state.activities}\r\n        </Grid>\r\n        <Box px=\"2rem\" pt=\"1rem\" justify=\"center\" m=\"auto\">\r\n          <Grid container spacing={1}>\r\n            <Grid item>\r\n              <Fab\r\n                onClick={this.addActivity}\r\n                color=\"primary\"\r\n                variant=\"extended\"\r\n              >\r\n                <AddIcon />\r\n                <Box p=\"0.5rem\">Add activity</Box>\r\n              </Fab>\r\n            </Grid>\r\n            <Grid item>\r\n              <Fab onClick={this.clearAll} color=\"secondary\" variant=\"extended\">\r\n                <ClearIcon />\r\n                <Box p=\"0.5rem\">Reset</Box>\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RiskCalculator\r\n","D:\\Dev\\covinsights\\src\\index.js",["49"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RiskCalculator from './pages/RiskCalculator.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n    <Navbar />\n    <RiskCalculator /></div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","D:\\Dev\\covinsights\\src\\components\\Navbar.js",[],"D:\\Dev\\covinsights\\src\\css\\CardWrapper.js",[],["50","51"],"D:\\Dev\\covinsights\\src\\css\\Theme.js",["52"],"D:\\Dev\\covinsights\\src\\css\\ContactFormWrapper.js",[],"D:\\Dev\\covinsights\\src\\css\\GlobalStyle.js",[],{"ruleId":"53","severity":1,"message":"54","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":11},{"ruleId":"53","severity":1,"message":"57","line":8,"column":7,"nodeType":"55","messageId":"56","endLine":8,"endColumn":19},{"ruleId":"53","severity":1,"message":"58","line":9,"column":22,"nodeType":"55","messageId":"56","endLine":9,"endColumn":28},{"ruleId":"59","severity":2,"message":"60","line":10,"column":6,"nodeType":"61","endLine":10,"endColumn":12},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":1,"nodeType":"68","endLine":13,"endColumn":2},"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'defaultProps' is assigned a value but never used.","'Button' is defined but never used.","react/jsx-no-undef","'Navbar' is not defined.","JSXIdentifier","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]
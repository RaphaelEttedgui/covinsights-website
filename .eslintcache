[{"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskCalculator.js":"1","D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\Gatherer.js":"2","D:\\Dev\\covinsights\\src\\components\\Navbar.js":"3","D:\\Dev\\covinsights\\src\\components\\Calculator\\MyMath.js":"4","D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\PersonCard.js":"5","D:\\Dev\\covinsights\\src\\reportWebVitals.js":"6","D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskForm.js":"7","D:\\Dev\\covinsights\\src\\css\\GlobalStyle.js":"8","D:\\Dev\\covinsights\\src\\index.js":"9","D:\\Dev\\covinsights\\src\\pages\\Error.js":"10","D:\\Dev\\covinsights\\src\\pages\\home.js":"11","D:\\Dev\\covinsights\\src\\pages\\calculator.js":"12","D:\\Dev\\covinsights\\src\\components\\Calculator\\Evolution.js":"13","D:\\Dev\\covinsights\\src\\pages\\familyGathering.js":"14","D:\\Dev\\covinsights\\src\\css\\ContactFormWrapper.js":"15","D:\\Dev\\covinsights\\src\\components\\Layout.js":"16","D:\\Dev\\covinsights\\src\\css\\Theme.js":"17","D:\\Dev\\covinsights\\src\\components\\constants\\activities.js":"18","D:\\Dev\\covinsights\\src\\css\\CardWrapper.js":"19","D:\\Dev\\covinsights\\src\\css\\BannerWrapper.js":"20","D:\\Dev\\covinsights\\src\\css\\PageContainerWrapper.js":"21","D:\\Dev\\covinsights\\src\\css\\PortfolioItemWrapper.js":"22","D:\\Dev\\covinsights\\src\\css\\FooterWrapper.js":"23","D:\\Dev\\covinsights\\src\\components\\Calculator\\NewMath.js":"24","D:\\Dev\\covinsights\\src\\css\\NavbarWrapper.js":"25","D:\\Dev\\covinsights\\src\\components\\constants\\profiles.js":"26","D:\\Dev\\covinsights\\src\\pages\\insights.js":"27","D:\\Dev\\covinsights\\src\\components\\Insights\\ComparisonRisks.js":"28","D:\\Dev\\covinsights\\src\\components\\Body.js":"29"},{"size":9131,"mtime":1606831418502,"results":"30","hashOfConfig":"31"},{"size":11312,"mtime":1606834368278,"results":"32","hashOfConfig":"31"},{"size":3399,"mtime":1606819160501,"results":"33","hashOfConfig":"31"},{"size":13387,"mtime":1606737295896,"results":"34","hashOfConfig":"31"},{"size":5735,"mtime":1606815893517,"results":"35","hashOfConfig":"31"},{"size":362,"mtime":1606158119788,"results":"36","hashOfConfig":"31"},{"size":11666,"mtime":1606760076543,"results":"37","hashOfConfig":"31"},{"size":5798,"mtime":1606832650915,"results":"38","hashOfConfig":"31"},{"size":577,"mtime":1606831022344,"results":"39","hashOfConfig":"31"},{"size":331,"mtime":1606586654735,"results":"40","hashOfConfig":"31"},{"size":573,"mtime":1606586634096,"results":"41","hashOfConfig":"31"},{"size":690,"mtime":1606585516144,"results":"42","hashOfConfig":"31"},{"size":4348,"mtime":1606761690039,"results":"43","hashOfConfig":"31"},{"size":788,"mtime":1606586587955,"results":"44","hashOfConfig":"31"},{"size":785,"mtime":1606076399231,"results":"45","hashOfConfig":"31"},{"size":411,"mtime":1606221119759,"results":"46","hashOfConfig":"31"},{"size":345,"mtime":1606076399382,"results":"47","hashOfConfig":"31"},{"size":5236,"mtime":1606821389273,"results":"48","hashOfConfig":"31"},{"size":1729,"mtime":1606076399209,"results":"49","hashOfConfig":"31"},{"size":745,"mtime":1606076399185,"results":"50","hashOfConfig":"31"},{"size":1375,"mtime":1606076399346,"results":"51","hashOfConfig":"31"},{"size":1368,"mtime":1606076399371,"results":"52","hashOfConfig":"31"},{"size":1158,"mtime":1606076399253,"results":"53","hashOfConfig":"31"},{"size":12501,"mtime":1606821513455,"results":"54","hashOfConfig":"31"},{"size":2098,"mtime":1606221424053,"results":"55","hashOfConfig":"31"},{"size":645,"mtime":1606762185182,"results":"56","hashOfConfig":"31"},{"size":610,"mtime":1606833473010,"results":"57","hashOfConfig":"31"},{"size":4215,"mtime":1606832184475,"results":"58","hashOfConfig":"31"},{"size":597,"mtime":1606388632737,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"qm2kwn",{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"63"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"63"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskCalculator.js",["137","138"],"import React, { Component } from \"react\"\r\nimport RiskForm from \"./RiskForm.js\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Chip from '@material-ui/core/Chip';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { IconButton, Button } from \"@material-ui/core\"\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport list_activities from '../constants/activities.js';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport { Person } from \"./NewMath.js\"\r\nimport { NavLink } from 'react-router-dom';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport Evolution from './Evolution.js';\r\nimport * as Scroll from 'react-scroll';\r\n\r\n/*\r\n***** TODO *****\r\nFaire que le globalRisk soit envoyé non pas au calcul, mais quand on appuie\r\nsur un bouton \"what does it mean for a family reunion\"\r\n(qui link du même coup au family reunion)\r\n\r\n***** END TODO *****\r\n*/\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n});\r\n\r\nclass RiskCalculator extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {blockActivities: [], activities: {}, nextId:0, risk:0, toggleResult:false, person: new Person(),\r\n          evolution:()=><Evolution risk={0}/>, alpha:0.2, gamma:0.33}\r\n    this.defaultActivityArgs = {\r\n      name:\"Activité\",\r\n      wearMask: false,\r\n      duration:60,\r\n      nbPeople: 1,\r\n      nbMasked: 0,\r\n      location:\"indoors\",\r\n      talking: \"normal\",\r\n      distance: \"normal\",\r\n      riskProfile: \"normal\",\r\n      showForm:false,\r\n    }\r\n    this.refResult = React.createRef();\r\n  }\r\n\r\n  updateRisk = (id, acti) => {\r\n    var tabActis = this.state.activities;\r\n    tabActis[id] =acti;\r\n    this.setState({activities:tabActis});\r\n  }\r\n\r\n  getRisk = () => {\r\n    // Updates the risk, and resets and updates the Person\r\n    var p = this.state.person;\r\n    p.clearActivityList();\r\n    var result = 0;\r\n    var mySum=0;\r\n    for (var key in this.state.activities)\r\n    {\r\n      p.addActivity(this.state.activities[key]);\r\n    }\r\n    result = p.getRisk(); // The new risk\r\n\r\n    this.setState({risk:result, person:p, evolution:() => {return (<Evolution riskList={p.activityList} alpha={this.state.alpha} gamma={this.state.gamma} /> )}});\r\n    this.setState({toggleResult:true});\r\n    // Updating the global value of the risk in Navbar\r\n    // this.props.changeGlobalRisk(result);\r\n  }\r\n\r\n  toggleResult = () => {\r\n    this.setState({toggleResult:true});\r\n  }\r\n\r\n  toggleOffResult = () => {\r\n    this.setState({toggleResult:false});\r\n  }\r\n  \r\n  reset = (event) => {\r\n    this.setState({alpha:0.2, gamma:1/3});\r\n  }\r\n\r\n  // Affiche le résultat (appelé sur clic de calculer mon risque)\r\n  // Contient le lien vers le simulateur et lui transmet le risque.\r\n  showResult = () => {\r\n    this.refResult.current.scrollIntoView({ behavior: \"smooth\" });\r\n    const riskWeek = Math.round((this.state.risk * 10000 + Number.EPSILON)) / 100;\r\n    var riskYear = 1 - Math.pow((1-this.state.risk), 52);\r\n    riskYear = Math.round((riskYear * 10000 + Number.EPSILON)) / 100;\r\n    return (\r\n      <div id=\"calculator_result\">\r\n      <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n        Vous avez {riskWeek} % de chance d'attraper le covid\r\n        sur une semaine, pour une prévalence de {this.state.person.universe.prevalence}. Cela donne {riskYear} % sur un an.\r\n      </Box>\r\n      <div id=\"button_to_family\">\r\n      <NavLink to=\"/familyGathering/\">\r\n      <Fab\r\n      onClick={() => {this.props.changeGlobalRisk(this.state.risk);}}\r\n      variant=\"extended\"\r\n    >\r\n      <GroupAddIcon />\r\n      <Box p=\"0.5rem\">Importer dans le simulateur de réunion familiale</Box>\r\n    </Fab>\r\n    </NavLink>\r\n    </div>\r\n    <div id=\"text_graph_result\">\r\n    Evolution de l'épidémie sur un mois si tout le monde a le même profil de risque (chiffres en milliers) :\r\n    </div>\r\n    {/* On suppose que les activités correspondent environ à la durée d'incubation (1 semaine en l'occurence) */}\r\n    <div id='graph_result'>{this.state.evolution()}</div>\r\n  </div>\r\n    )\r\n  }\r\n\r\n  addActivity = (args) => {\r\n    const myId = [this.state.nextId]\r\n    const widget = (\r\n      <Grid item className=\"activity_list\">\r\n          <RiskForm id={myId} updateRisk={this.updateRisk} edit={this.toggleOffResult} {...args}>\r\n              <div className=\"delete_button\">\r\n              <Tooltip title=\"Supprimer\">\r\n              <IconButton aria-label=\"delete\" size=\"small\" onClick={() => this.clear(myId[0])}>\r\n              <DeleteIcon />\r\n              </IconButton>\r\n              </Tooltip>\r\n              </div>\r\n          </RiskForm>\r\n      </Grid>\r\n    )\r\n    this.setState({ nextId: this.state.nextId + 1 })\r\n    var widgets = this.state.blockActivities.slice()\r\n    widgets.push(widget)\r\n    this.setState({ blockActivities: widgets })\r\n  }\r\n\r\n  // Premade activities are already filled.\r\n  addPremadeActivity = (args) => {\r\n    const myId = [this.state.nextId]\r\n    const widget = (\r\n      <Grid item className=\"activity_list\">\r\n          <RiskForm id={myId} showForm={true} updateRisk={this.updateRisk} edit={this.toggleOffResult} {...args}>\r\n              <div className=\"delete_button\">\r\n              <Tooltip title=\"Supprimer\">\r\n              <IconButton z-index={5000} aria-label=\"delete\" size=\"small\" onClick={() => {this.clear(myId[0]); this.toggleOffResult()}}>\r\n              <DeleteIcon />\r\n              </IconButton>\r\n              </Tooltip>\r\n              </div>\r\n          </RiskForm>\r\n      </Grid>\r\n    )\r\n    this.setState({ nextId: this.state.nextId + 1 })\r\n    var widgets = this.state.blockActivities.slice()\r\n    widgets.push(widget)\r\n    this.setState({ blockActivities: widgets })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    //this.addActivity(this.defaultActivityArgs);\r\n  }\r\n\r\n  clearAll = () => {\r\n    this.setState({ nextId: 0, blockActivities: [], activities: {}, risk:0, toggleResult:false});\r\n    var p = this.state.person;\r\n    p.clearActivityList();\r\n    this.setState({person:p});\r\n  }\r\n\r\n  clear = id => {\r\n    var widgets = this.state.blockActivities.slice();\r\n    var myActis = this.state.activities;\r\n    widgets[id] = <div />\r\n    delete myActis[id];\r\n    this.setState({ blockActivities: widgets, activities:myActis})\r\n  }\r\n\r\n  generatePremadeCards = () => {\r\n    const { classes } = this.props;\r\n    // sort premade cards\r\n    list_activities.sort((a, b) => (a.name > b.name) ? 1 : -1);\r\n\r\n    return (\r\n      <div id=\"premade_cards\" className={classes.root}>\r\n          {list_activities.map((item, index) => {\r\n            return (\r\n                  <Chip icon={<FaceIcon />} label={item.name} clickable onClick={() => {this.addPremadeActivity(item); this.toggleOffResult()}} />\r\n            )\r\n          })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"risk_calculator\">\r\n        <Grid container spacing={1} justify=\"center\" alignitems=\"center\">\r\n          {this.state.blockActivities}\r\n        </Grid>\r\n        <div className=\"addActivity_buttons\">\r\n        <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n          <Grid container spacing={1}   alignItems=\"center\" justify=\"center\">\r\n            <Grid item>\r\n              <Fab\r\n                onClick={() => {this.addActivity(this.defaultActivityArgs); this.toggleOffResult();}}\r\n                color=\"primary\"\r\n                variant=\"extended\"\r\n              >\r\n                <AddIcon />\r\n                <Box p=\"0.5rem\">Nouvelle activité</Box>\r\n              </Fab>\r\n            </Grid>\r\n            <Grid item>\r\n              <Fab onClick={() => {this.clearAll(); this.toggleOffResult();}} color=\"secondary\" variant=\"extended\">\r\n                <CachedIcon />\r\n                <Box p=\"0.5rem\">Reset</Box>\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        </div>\r\n        <div className=\"addActivity_buttons\">\r\n        <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n          <Grid container spacing={1}   alignItems=\"center\" justify=\"center\">\r\n            <Grid item>\r\n              <Fab\r\n                onClick={() => {this.getRisk(); this.toggleResult();}}\r\n                variant=\"extended\"\r\n              >\r\n                <TouchAppIcon />\r\n                <Box p=\"0.5rem\">Calculer mon risque</Box>\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        </div>\r\n        <div id=\"premade_activities\">\r\n            {this.generatePremadeCards()}\r\n        </div>\r\n\r\n        <div id=\"calculator-result\" ref={this.refResult}>\r\n        {this.state.toggleResult && this.showResult()}\r\n        </div>\r\n        {this.state.toggleResult && Scroll.animateScroll.scrollToBottom({offset:100})}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RiskCalculator);\r\n",["139","140"],"D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\Gatherer.js",["141","142","143","144"],"D:\\Dev\\covinsights\\src\\components\\Navbar.js",[],"D:\\Dev\\covinsights\\src\\components\\Calculator\\MyMath.js",["145"],"class Interaction{\r\n\tconstructor(name){\r\n\t\tthis.name = name;\r\n\t}\r\n\t\r\n\tgetRisk(){\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\nclass InteractionOne extends Interaction{\r\n\tconstructor(name=\"an activity\", duration=60, maskA=false, maskB=false, talking=\"normal\", outdoors=false, distance=\"normal\"){\r\n\t\t/* A one on one interaction. Options are :\r\n\t\ttalking = \"normal\", \"loud\" (x3), \"quiet\" (/3)\r\n\t\toutdoors (/20)\r\n\t\tdistance = \"normal\", \"close\" (x2), \"long\" (/2) */\r\n\t\tsuper(name);\r\n\t\tthis.duration=duration;\r\n\t\tthis.maskA=maskA;\r\n\t\tthis.maskB=maskB;\r\n\t\tthis.talking = talking;\r\n\t\tthis.outdoors=outdoors;\r\n\t\tthis.distance=distance;\r\n\t\tthis.hours = Math.floor(duration/60);\r\n\t\tthis.minutes = duration % 60;\r\n\t}\r\n\t\r\n\tsetMask(maskA,maskB){\r\n\t\tthis.maskA = maskA;\r\n\t\tthis.maskB = maskB;\r\n\t}\r\n\t\r\n\t// Returns the risk of contamination if the other has the disease.\r\n\tgetActivityRisk(){\r\n\t\tvar risk = 0.06\r\n\t\tif (this.maskA){\r\n\t\t\trisk = risk / 2;\r\n\t\t}\r\n\t\tif (this.maskB){\r\n\t\t\trisk = risk / 4;\r\n\t\t}\r\n\t\tif (this.outdoors){\r\n\t\t\trisk = risk / 20;\r\n\t\t}\r\n\t\tif (this.talking === \"loud\"){\r\n\t\t\trisk = risk * 5;\r\n\t\t}\r\n\t\tif (this.talking === \"quiet\"){\r\n\t\t\trisk = risk / 5;\r\n\t\t}\r\n\t\tif (this.distance ===\"close\"){\r\n\t\t\trisk = risk * 2;\r\n\t\t}\r\n\t\tif (this.distance === \"long\"){\r\n\t\t\trisk = risk /2;\r\n\t\t}\r\n\t\tif (this.distance === \"veryLong\"){\r\n\t\t\trisk = risk /4;\r\n\t\t}\r\n\t\tvar finalRisk = 0\r\n\t\t// Adapting the risk to the duration. 6% chance of contamination per hour.\r\n\t\tvar i;\r\n\t\tfor (i=0; i< this.hours; i++){\r\n\t\t\tfinalRisk = finalRisk + (1-finalRisk)*risk;\r\n\t\t}\r\n\t\tfinalRisk = finalRisk + (1-finalRisk)*risk*this.minutes/60;\r\n\t\treturn finalRisk;\r\n\t}\r\n}\r\n\r\nclass InteractionCrowd extends Interaction{\r\n\tconstructor(name=\"an activity\", duration=60, nb_people=1, mask=false, maskProportion=0., talking=\"normal\", outdoors=false, distance=\"normal\"){\r\n\t\tsuper(name);\r\n\t\tthis.duration=duration;\r\n\t\tthis.nb_people = nb_people;\r\n\t\tthis.mask = mask;\r\n\t\tthis.maskProportion = maskProportion;\r\n\t\tthis.talking = talking;\r\n\t\tthis.outdoors=outdoors;\r\n\t\tthis.distance=distance;\r\n\t\tthis.hours = Math.floor(duration/60);\r\n\t\tthis.minutes = duration % 60;\r\n\t}\r\n\t\r\n\tgetActivityRisk(){\r\n\t\tvar risk = 0.06\r\n\t\tif (this.mask){\r\n\t\t\trisk = risk / 2;\r\n\t\t}\r\n\t\trisk = risk * (1 - 0.75 * this.maskProportion);\r\n\t\tif (this.outdoors){\r\n\t\t\trisk = risk / 20;\r\n\t\t}\r\n\t\tif (this.talking === \"loud\"){\r\n\t\t\trisk = risk * 5;\r\n\t\t}\r\n\t\tif (this.talking === \"quiet\"){\r\n\t\t\trisk = risk / 5;\r\n\t\t}\r\n\t\tif (this.distance ===\"close\"){\r\n\t\t\trisk = risk * 2;\r\n\t\t}\r\n\t\tif (this.distance === \"long\"){\r\n\t\t\trisk = risk /2;\r\n\t\t}\r\n\t\tif (this.distance === \"veryLong\"){\r\n\t\t\trisk = risk /4;\r\n\t\t}\r\n\t\tvar finalRisk = 0;\r\n\t\tvar totalRisk = 0;\r\n\t\t// Adapting the risk to the duration. 6% chance of contamination per hour.\r\n\t\tvar i;\r\n\t\tvar j;\r\n\t\tfor (i=0; i< this.hours; i++){\r\n\t\t\ttotalRisk = totalRisk + (1-totalRisk)*risk;\r\n\t\t}\r\n\t\ttotalRisk = totalRisk + (1-totalRisk)*risk*this.minutes/60;\r\n\t\t// Hardcap à 0.5 pour chaque activité individuelle.\r\n\t\tif(totalRisk>0.5){\r\n\t\t\ttotalRisk=0.5;\r\n\t\t}\r\n\t\tfor(j=0; j<this.nb_people; j++){\r\n\t\t\tfinalRisk = finalRisk + (1-finalRisk)*totalRisk;\r\n\t\t}\r\n\t\treturn finalRisk;\r\n\t}\r\n}\r\n\r\nclass Universe{\r\n\t/*\r\n\tThe universe class contains the prevalence at time, as well as the\r\n\tprobabilities of changing state. There should be a common universe to\r\n\tall persons and activities in an experiment, for easy update.\r\n\t*/\r\n\tconstructor(prevalence){\r\n\t\tthis.prevalence = prevalence;\r\n\t}\r\n\t\r\n\tsetPrevalence(prevalence){\r\n\t\tthis.prevalence = prevalence;\r\n\t}\r\n\t/*\r\n\t- Probability of being hospitalized if infected;\r\n\t- Probability of needing ICU if hospitalized;\r\n\t- Probability of dying if hospitalized.\r\n\tAll the numbers come from the paper of Institut Pasteur :\r\n\t\"Estimating the burden of SARS-CoV-2 in France\"\r\n\thttps://hal-pasteur.archives-ouvertes.fr/pasteur-02548181/document\r\n\t*/\r\n\tageFactors(age=\"20\", gender=\"ND\"){\r\n\t\tvar hospAgeFactor, reaAgeFactor, deathAgeFactor;\r\n\t\tif(gender===\"M\"){\r\n\t\t\tif (age < 20){\r\n\t\t\t\thospAgeFactor = 0.1;\r\n\t\t\t\treaAgeFactor = 17.5;\r\n\t\t\t\tdeathAgeFactor = 1.2;\r\n\t\t\t}\r\n\t\t\telse if (age < 30){\r\n\t\t\t\thospAgeFactor = 0.6;\r\n\t\t\t\treaAgeFactor = 12.2;\r\n\t\t\t\tdeathAgeFactor = 1.3;\r\n\t\t\t}\r\n\t\t\telse if (age < 40){\r\n\t\t\t\thospAgeFactor = 1.2;\r\n\t\t\t\treaAgeFactor = 17.2;\r\n\t\t\t\tdeathAgeFactor = 2.5;\r\n\t\t\t}\r\n\t\t\telse if (age < 50){\r\n\t\t\t\thospAgeFactor = 1.6;\r\n\t\t\t\treaAgeFactor = 24.3;\r\n\t\t\t\tdeathAgeFactor = 3.9;\r\n\t\t\t}\r\n\t\t\telse if (age < 60){\r\n\t\t\t\thospAgeFactor = 3.2;\r\n\t\t\t\treaAgeFactor = 31.7;\r\n\t\t\t\tdeathAgeFactor = 7.5;\r\n\t\t\t}\r\n\t\t\telse if (age < 70){\r\n\t\t\t\thospAgeFactor = 7.0;\r\n\t\t\t\treaAgeFactor = 36.4;\r\n\t\t\t\tdeathAgeFactor = 14.2;\r\n\t\t\t}\r\n\t\t\telse if (age < 80){\r\n\t\t\t\thospAgeFactor = 11.4;\r\n\t\t\t\treaAgeFactor = 29.0;\r\n\t\t\t\tdeathAgeFactor = 25.3;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\thospAgeFactor = 31.4;\r\n\t\t\t\treaAgeFactor = 5.7;\r\n\t\t\t\tdeathAgeFactor = 42.0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(gender===\"F\"){\r\n\t\t\tif (age<20){\r\n\t\t\t\thospAgeFactor = 0.09;\r\n\t\t\t\treaAgeFactor = 8.5;\r\n\t\t\t\tdeathAgeFactor = 0.;\r\n\t\t\t}\r\n\t\t\telse if (age<30){\r\n\t\t\t\thospAgeFactor = 0.5;\r\n\t\t\t\treaAgeFactor = 6.8;\r\n\t\t\t\tdeathAgeFactor = 1.4;\r\n\t\t\t}\r\n\t\t\telse if (age<40){\r\n\t\t\t\thospAgeFactor = 0.9;\r\n\t\t\t\treaAgeFactor = 10.4;\r\n\t\t\t\tdeathAgeFactor = 1.6;\r\n\t\t\t}\r\n\t\t\telse if (age<50){\r\n\t\t\t\thospAgeFactor = 1.3;\r\n\t\t\t\treaAgeFactor = 14.3;\r\n\t\t\t\tdeathAgeFactor = 3.2;\r\n\t\t\t}\r\n\t\t\telse if (age<60){\r\n\t\t\t\thospAgeFactor = 2.5;\r\n\t\t\t\treaAgeFactor = 19.0;\r\n\t\t\t\tdeathAgeFactor = 6.4;\r\n\t\t\t}\r\n\t\t\telse if (age<70){\r\n\t\t\t\thospAgeFactor = 5.3;\r\n\t\t\t\treaAgeFactor = 21.6;\r\n\t\t\t\tdeathAgeFactor = 12.0;\r\n\t\t\t}\r\n\t\t\telse if (age<80){\r\n\t\t\t\thospAgeFactor = 8.0;\r\n\t\t\t\treaAgeFactor = 17.0;\r\n\t\t\t\tdeathAgeFactor = 20.7;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\thospAgeFactor = 15.9;\r\n\t\t\t\treaAgeFactor = 3.4;\r\n\t\t\t\tdeathAgeFactor = 34.0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// si gender non défini on met la moyenne\r\n\t\telse{\r\n\t\t\tif (age<20){\r\n\t\t\t\thospAgeFactor = 0.1;\r\n\t\t\t\treaAgeFactor = 13.5;\r\n\t\t\t\tdeathAgeFactor = 0.6;\r\n\t\t\t}\r\n\t\t\telse if (age<30){\r\n\t\t\t\thospAgeFactor = 0.5;\r\n\t\t\t\treaAgeFactor = 9.8;\r\n\t\t\t\tdeathAgeFactor = 1.4;\r\n\t\t\t}\r\n\t\t\telse if (age<40){\r\n\t\t\t\thospAgeFactor = 1.0;\r\n\t\t\t\treaAgeFactor = 14.1;\r\n\t\t\t\tdeathAgeFactor = 2.1;\r\n\t\t\t}\r\n\t\t\telse if (age<50){\r\n\t\t\t\thospAgeFactor = 1.5;\r\n\t\t\t\treaAgeFactor = 19.8;\r\n\t\t\t\tdeathAgeFactor = 3.6;\r\n\t\t\t}\r\n\t\t\telse if (age<60){\r\n\t\t\t\thospAgeFactor = 2.8;\r\n\t\t\t\treaAgeFactor = 25.9;\r\n\t\t\t\tdeathAgeFactor = 7.0;\r\n\t\t\t}\r\n\t\t\telse if (age<70){\r\n\t\t\t\thospAgeFactor = 6.1;\r\n\t\t\t\treaAgeFactor = 29.7;\r\n\t\t\t\tdeathAgeFactor = 13.2;\r\n\t\t\t}\r\n\t\t\telse if (age<80){\r\n\t\t\t\thospAgeFactor = 9.6;\r\n\t\t\t\treaAgeFactor = 23.5;\r\n\t\t\t\tdeathAgeFactor = 23.2;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\thospAgeFactor = 21.7;\r\n\t\t\t\treaAgeFactor = 4.6;\r\n\t\t\t\tdeathAgeFactor = 38.4;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [hospAgeFactor/100, reaAgeFactor/100, deathAgeFactor/100];\t\r\n\t}\r\n}\r\n\r\nclass BasicUniverse extends Universe{\r\n\tconstructor(){\r\n\t\tsuper(0.010); // Prevalence in early November in France.\r\n\t}\r\n}\r\n\r\nclass RiskProfile{\r\n\tconstructor(type=\"basic\"){\r\n\t\tthis.type = type;\r\n\t}\r\n\t\r\n\tgetProfileRisk(){\r\n\t\treturn 1.0;\r\n\t}\r\n}\r\n\r\nclass NonWorkerRiskProfile extends RiskProfile{\r\n\tconstructor(){\r\n\t\tsuper(\"nonWorker\");\r\n\t}\r\n\tgetProfileRisk(){\r\n\t\treturn 1.0 / 3.0;\r\n\t}\r\n}\r\n\r\nclass WorkerRiskProfile extends RiskProfile{\r\n\tconstructor(){\r\n\t\tsuper(\"worker\");\r\n\t}\r\n\tgetProfileRisk(){\r\n\t\treturn 3.0;\r\n\t}\r\n}\r\n\r\nclass Activity{\r\n\t/* An activity is an interaction plus a risk profile.\r\n\tWe can access the total risk or just the one related to the interaction. */\r\n\tconstructor(interaction, riskProfile=new RiskProfile(), universe = new BasicUniverse()){\r\n\t\tthis.interaction = interaction;\r\n\t\tthis.riskProfile = riskProfile;\r\n\t\tthis.universe = universe;\r\n\t}\r\n\t\r\n\tgetRisk(){\r\n\t\treturn this.interaction.getActivityRisk() * this.riskProfile.getProfileRisk() * this.universe.prevalence;\r\n\t}\r\n\t\r\n\tgetActivityRisk(){\r\n\t\treturn this.interaction.getActivityRisk() * this.riskProfile.getProfileRisk();\r\n\t}\r\n}\r\n\r\nclass Person extends RiskProfile{\r\n\tconstructor(name, age, gender=\"ND\", activity_list=[], universe = new BasicUniverse()){\r\n\t\tsuper(universe);\r\n\t\tthis.name = name;\r\n\t\tthis.age = age;\r\n\t\tthis.gender = gender;\r\n\t\tthis.activityList = activity_list;\r\n\t\tthis.universe = universe;\r\n\t\tthis.ageFactors = this.universe.ageFactors(this.age, this.gender);\r\n\t}\r\n\t\r\n\taddActivity(activity){\r\n\t\tthis.activityList.push(activity);\r\n\t}\r\n\t\r\n\taddInteraction(interaction){\r\n\t\tthis.activityList.append(Activity(interaction));\r\n\t}\r\n\t\r\n\tclearActivityList(){\r\n\t\t// Javascript has a garbage collector so no need to care about memory release.\r\n\t\tthis.activityList = [];\r\n\t}\r\n\t\r\n\tgetRisk(){\r\n\t\t// Returns the probability of having the disease\r\n\t\tvar risk=0;\r\n\t\tif(this.activityList === undefined || this.activityList.length === 0)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar i=0;\r\n\t\tfor(i=0; i<this.activityList.length; i++)\r\n\t\t{\r\n\t\t\trisk = risk + (1-risk)*this.activityList[i].getRisk();\r\n\t\t}\r\n\t\treturn risk*this.universe.prevalence;\r\n\t}\r\n\t\r\n\tgetProfileRisk(){\r\n\t\t// Returns how many time the person is more risky than the average.\r\n\t\t// Multiply par the universe prevalence to get the risk.\r\n\t\tvar risk=0;\r\n\t\tif(this.activityList === undefined || this.activityList.length === 0)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar i=0;\r\n\t\tfor(i=0; i<this.activityList.length; i++)\r\n\t\t{\r\n\t\t\trisk = risk + (1-risk)*this.activityList[i].getActivityRisk();\r\n\t\t}\r\n\t\treturn risk;\r\n\t}\r\n\t\r\n\tcomputeAgeDangerProfile(){\r\n\t\t// Probability of catching the disease, being hospitalized, ICU, death.\r\n\t\tvar risk = this.getRisk();\r\n\t\tvar riskHosp = risk * this.ageFactors[0];\r\n\t\tvar riskRea = riskHosp * this.ageFactors[1];\r\n\t\tvar riskDeath = riskHosp * this.ageFactors[2];\r\n\t\treturn [risk, riskHosp, riskRea, riskDeath];\r\n\t}\r\n}\r\n\r\nclass PersonWithRisk extends Person{\r\n\tconstructor(name, age=20, gender=\"ND\", risk=0, universe=new BasicUniverse())\r\n\t{\r\n\t\tsuper(name, age, gender, [], universe);\r\n\t\tthis.risk=risk;\r\n\t}\r\n\r\n\tgetRisk(){\r\n\t\treturn this.risk * this.universe.prevalence;\r\n\t}\r\n}\r\n\r\n// Recreating the defaultdict from python.\r\nclass DefaultDict {\r\n  constructor(defaultVal) {\r\n    return new Proxy({}, {\r\n      get: (target, name) => name in target ? target[name] : defaultVal\r\n    })\r\n  }\r\n}\r\n\r\nclass GroupReunion{\r\n\t/*\r\n\tSimulating a family gathering. The mask policy can be \"none\", \"all\", or \"under50\".\r\n\tIn the latter, only the people younger than 50 wear a mask.\r\n\tOutput : the probability that at least one person is sick, hospitalized or dies,\r\n\tas well as the average number of hospitalizations, ICU or death.\r\n\tFinally, we estimate the number of family gatherings and compute the\r\n\tcount for the whole country, as the \"cost\" of christmas.\r\n\t*/\r\n\tconstructor(duration=60, maskPolicy=\"none\", distance=\"normal\", outdoors=false, talking=\"normal\", personList=[]){\r\n\t\tthis.duration = duration;\r\n\t\tthis.maskPolicy = maskPolicy;\r\n\t\tthis.distance = distance;\r\n\t\tthis.outdoors = outdoors;\r\n\t\tthis.talking = talking;\r\n\t\tthis.personList = personList;\r\n\t\tthis.generateMasked();\r\n\t\t// We use a one-on-one interaction to compute the various risks.\r\n\t\tthis.interaction = new InteractionOne(\"meeting\", this.duration, false, false, this.talking, this.outdoors, this.distance);\r\n\t\t// *** TODO *** Ajouter le calcul du profil de risque.\r\n\t}\r\n\t\r\n\tgenerateMasked(){\r\n\t\t// Compute who wears a mask according to the mask policy.\r\n\t\tthis.masked = new DefaultDict(false);\r\n\t\tif(this.maskPolicy===\"all\"){\r\n\t\t\tthis.masked = new DefaultDict(true);\r\n\t\t}\r\n\t\telse if(this.maskPolicy===\"under50\"){\r\n\t\t\tvar i = 0;\r\n\t\t\tfor(i=0; i<this.personList.length;i++){\r\n\t\t\t\tif(this.personList[i].age < 50){\r\n\t\t\t\t\tthis.masked[i] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\taddPerson(p){\r\n\t\tthis.personList.push(p);\r\n\t}\r\n\t\r\n\tupdate(){\r\n\t\tthis.generateMasked();\r\n\t\t// *** TODO *** Ajouter le calcul de this.riskProfile\r\n\t}\r\n\t\r\n\tcomputeRiskProfile(){\r\n\t\t/*\r\n\t\tFormulas :\r\n\t\t- Mean number of people hospitalized : sum(p_hosp)\r\n\t\t- Probability that at least one person is hospitalized : 1 - prod(1-p_hosp)\r\n\t\t*/\r\n\t\tvar risk = 1.0;\r\n\t\tvar hospRisk = 1.0;\r\n\t\tvar reaRisk = 1.0;\r\n\t\tvar deathRisk = 1.0;\r\n\t\tvar moyenneHosp = 0.0;\r\n\t\tvar moyenneRea = 0.0;\r\n\t\tvar moyenneDeaths = 0.0;\r\n\t\tvar i;\r\n\t\tfor(i=0; i<this.personList.length;i++){\r\n\t\t\tvar myRisk = this.personList[i].get_risk();\r\n\t\t\t// We update the probability that no-one has the disease\r\n\t\t\trisk = risk * (1-myRisk);\r\n\t\t\tvar j;\r\n\t\t\tfor(j=0; j<this.personList.length; j++){\r\n\t\t\t\tthis.interaction.setMask(this.masked[i], this.masked[j]);\r\n\t\t\t\t// Updating the risk for person i by taking into account the possible\r\n\t\t\t\t// contamination by person j.\r\n\t\t\t\tmyRisk = myRisk + (1-myRisk)*this.interaction.getActivityRisk()*this.personList[j].getRisk();\r\n\t\t\t}\r\n\t\t\tvar hospProba = this.personList[i].ageFactors[0];\r\n\t\t\tvar reaProba = this.personList[i].ageFactors[1];\r\n\t\t\tvar deathProba = this.personList[i].ageFactors[2];\r\n\t\t\t// Updating the proba that no-one gets hospitalized\r\n\t\t\thospRisk = hospRisk * (1 - myRisk*hospProba);\r\n\t\t\treaRisk = reaRisk * (1 - myRisk*hospProba*reaProba)\r\n\t\t\tdeathRisk = deathRisk  *(1 - myRisk*hospProba*deathProba)\r\n\t\t\t// Updating the average number of hospitalizations\r\n\t\t\tmoyenneHosp = moyenneHosp + myRisk*hospProba\r\n\t\t\tmoyenneRea = moyenneRea + myRisk*hospProba*reaProba\r\n\t\t\tmoyenneDeaths = moyenneDeaths + myRisk*hospProba*deathProba\r\n\t\t}\r\n\t\trisk = 1-risk;\r\n\t\thospRisk = 1-hospRisk;\r\n\t\treaRisk = 1-reaRisk;\r\n\t\tdeathRisk = 1-deathRisk;\r\n\t\treturn [risk, hospRisk, reaRisk, deathRisk, moyenneHosp, moyenneRea, moyenneDeaths];\r\n\t}\r\n}\r\n\r\nexport {Interaction, InteractionCrowd, InteractionOne, BasicUniverse, Activity, Person, Universe, GroupReunion, RiskProfile, NonWorkerRiskProfile, WorkerRiskProfile};","D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\PersonCard.js",["146","147","148","149","150","151","152","153"],"import React, { Children, Component } from \"react\"\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from \"@material-ui/core/Box\"\r\nimport { IconButton, Button } from \"@material-ui/core\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport {InteractionCrowd, Activity, BasicUniverse, RiskProfile, WorkerRiskProfile, NonWorkerRiskProfile} from '../Calculator/MyMath.js';\r\n\r\nconst propsForForm = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"18rem\", height: \"13rem\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  pl: \"1rem\",\r\n  pr: \"2rem\",\r\n  pt: \"0rem\",\r\n}\r\n\r\nconst propsForDisplay = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"14rem\", height: \"5rem\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  px: \"1rem\",\r\n}\r\n\r\nclass PersonCard extends Component {\r\n  state = {\r\n    showForm: this.props.showForm,\r\n    id: this.props.id,\r\n    name: this.props.name,\r\n    gender: this.props.gender,\r\n    age: this.props.age,\r\n    risk : this.props.risk,\r\n    activityRisk : 0,\r\n    universe: new BasicUniverse(),\r\n  }\r\n\r\n  handleNameField = (e) => {\r\n    this.setState({name: e.target.value});\r\n  }\r\n\r\n  handleGender = (e) => {\r\n      this.setState({gender:e.target.value});\r\n  }\r\n\r\n  handleAge = (e) => {\r\n      this.setState({age:Number(e.target.value)});\r\n  }\r\n\r\n  handleRisk = (e) => {\r\n      this.setState({risk:Number(e.target.value)});\r\n  }\r\n\r\n  showForm = () => {\r\n    return (\r\n        <Box borderRadius={16} {...propsForDisplay}>\r\n            <Tooltip title=\"Modifier\">\r\n            <IconButton className=\"person_edit_button\" aria-label=\"modify\" size=\"small\" onClick={() => this.setState({ showForm: false })}>\r\n            <EditIcon />\r\n            </IconButton>\r\n            </Tooltip>\r\n            <div className=\"person_delete_button_show\">\r\n                <Tooltip title=\"Supprimer\">\r\n                <IconButton z-index={5000} aria-label=\"delete\" size=\"small\" onClick={() => this.props.delete(this.state.id)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n            <div className=\"show_name_person\">\r\n                    <span className=\"person_name_inner\">\r\n                    {this.state.name}.\r\n                    </span>\r\n            </div>\r\n        </Box>\r\n    )\r\n  }\r\n\r\n  showCreator = () => {\r\n    return (\r\n        <Box borderRadius={16} {...propsForForm}>\r\n        <div className=\"person_delete_button_creator\">\r\n                <Tooltip title=\"Supprimer\">\r\n                <IconButton z-index={5000} aria-label=\"delete\" size=\"small\" onClick={() => this.props.delete(this.state.id)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n        </div>\r\n        <Grid container spacing={1} justify=\"center\" className=\"form_activity_grid\">\r\n                <Grid item className=\"grid_name_activity\">\r\n                  <TextField id=\"outlined-basic\" size=\"small\" style={{width: 180}} label=\"Nom\" variant=\"outlined\" defaultValue={this.state.name} onChange={this.handleNameField} />\r\n                </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} justify=\"center\" className=\"form_inner_grid\">\r\n                <Grid item>\r\n                          <TextField id=\"outlined-basic\" style={{width: 70}} type=\"number\" InputLabelProps={{shrink: true,}} label=\"Age\" variant=\"outlined\" defaultValue={this.state.age} onChange={this.handleAge} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControl variant=\"outlined\">\r\n                        <InputLabel id=\"sexe-label\" left='5px'>Sexe</InputLabel>\r\n                        <Select\r\n                        native \r\n                        labelId=\"sexe-label\"\r\n                        label=\"Sexe\"\r\n                        variant=\"outlined\"\r\n                        id=\"demo-simple-select\"\r\n                        value={this.state.gender}\r\n                        onChange={this.handleGender}\r\n                        >\r\n                        <option value=\"F\">F</option>\r\n                        <option value=\"M\">M</option>\r\n                        <option value=\"ND\">ND</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                          <TextField id=\"outlined-basic\" style={{width: 70}} type=\"number\" label=\"Risque(%)\" variant=\"outlined\" defaultValue={this.state.risk} onChange={this.handleRisk} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={() => {this.setState({ showForm: true });\r\n                        this.props.updatePerson(this.state.id, this.state.age, this.state.gender, this.state.risk)}}\r\n                    >\r\n                        {\" \"}\r\n                        Submit\r\n                    </Button>\r\n                </Grid>\r\n        </Grid>\r\n  </Box>\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"personCard_container\">\r\n          {this.state.showForm ? this.showForm() : this.showCreator()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default PersonCard;\r\n","D:\\Dev\\covinsights\\src\\reportWebVitals.js",[],["154","155"],"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskForm.js",["156"],"import React, { Children, Component } from \"react\"\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from \"@material-ui/core/Box\"\r\nimport { IconButton, Button } from \"@material-ui/core\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {CustomActivity, BasicUniverse, RiskProfile, WorkerRiskProfile, NonWorkerRiskProfile} from './NewMath.js';\r\n\r\nconst styles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 80,\r\n  },\r\n    root: {\r\n    display: 'flex',\r\n    pt: \"3rem\",\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n});\r\n\r\nconst propsForForm = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"17rem\", height: \"35rem\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  px: \"1rem\",\r\n  pt: \"2rem\",\r\n}\r\n\r\nconst propsForDisplay = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"16rem\", height: \"5rem\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  px: \"1rem\",\r\n  position:\"relative\",\r\n  bottom:\"2rem\"\r\n}\r\n\r\nclass RiskForm extends Component {\r\n  state = {\r\n    showForm: this.props.showForm,\r\n    id: this.props.id,\r\n    name: this.props.name,\r\n    duration: this.props.duration,\r\n    wearMask: this.props.wearMask,\r\n    nbPeople: this.props.nbPeople,\r\n    nbMasked:this.props.nbMasked,\r\n    location:this.props.location,\r\n    talking: this.props.talking,\r\n    distance: this.props.distance,\r\n    riskProfile: this.props.riskProfile,\r\n    heures:Math.floor(this.props.duration/60),\r\n    minutes:this.props.duration % 60,\r\n    activity:{},\r\n    universe: new BasicUniverse(),\r\n  }\r\n\r\n  setActivityRisk = () => {\r\n    // setting the duration.\r\n    var newDuration = 60*this.state.heures + this.state.minutes;\r\n    this.setState({duration:newDuration})\r\n    var maskProportion = 0;\r\n    if(this.state.nbMasked === 0)\r\n    {\r\n      maskProportion = 0;\r\n    }\r\n    else{\r\n      maskProportion = this.state.nbPeople / this.state.nbMasked;\r\n    }\r\n    var profile = new RiskProfile();\r\n    // Note that the cap at 50% is before applying the profile.\r\n    // The risk profile represents a variation in the prevalence, not the\r\n    // activity itself.\r\n    if(this.state.riskProfile === \"worker\")\r\n    {\r\n      profile = new WorkerRiskProfile();\r\n    }\r\n   if(this.state.riskProfile === \"nonWorker\")\r\n    {\r\n      profile = new NonWorkerRiskProfile();\r\n    }\r\n    var myActivity = new CustomActivity(this.state.name, newDuration, this.state.nbPeople,\r\n        this.state.wearMask, maskProportion, this.state.talking, this.state.location, this.state.distance, profile);\r\n    this.setState({activity:myActivity});\r\n    this.props.updateRisk(this.props.id[0], myActivity);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setActivityRisk();\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.checked })\r\n  }\r\n\r\n  handleNameField = (e) => {\r\n    this.setState({\r\n      name: e.target.value\r\n  });\r\n  }\r\n\r\n  handleNbPeople = (event) => {\r\n    this.setState({nbPeople:Number(event.target.value)});\r\n  };\r\n\r\n  handleNbMasked = (event) => {\r\n    this.setState({nbMasked:Number(event.target.value)});\r\n  };\r\n\r\n  handleHours = (event) => {\r\n    this.setState({heures:Number(event.target.value)})\r\n  }\r\n\r\n  handleMinutes = (event) => {\r\n    this.setState({minutes:Number(event.target.value)});\r\n  }\r\n\r\n  handleTalking = (event) => {\r\n    this.setState({talking:event.target.value});\r\n  };\r\n\r\n  handleDistance = (event) => {\r\n    this.setState({distance:event.target.value});\r\n  };\r\n\r\n  handleRiskProfile = (event) => {\r\n    this.setState({riskProfile:event.target.value});\r\n  };\r\n\r\n  handleLocation = (event) => {\r\n    this.setState({location: event.target.value});\r\n  }\r\n\r\n  generateNbPeople1 = (i) => {\r\n    return (\r\n    <option value={i}>{i}</option>\r\n    );\r\n  }\r\n\r\n  generateNbPeople = () => {\r\n    const numbers = [0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n    return numbers.map((number) => this.generateNbPeople1(number));\r\n  }\r\n\r\n  showForm = () => {\r\n    return (\r\n      <div className=\"risk_form\">\r\n      <Tooltip title=\"Modifier\">\r\n      <IconButton className=\"edit_button\" aria-label=\"delete\" size=\"small\" onClick={() => {this.setState({ showForm: false }); this.props.edit()}}>\r\n        <EditIcon />\r\n      </IconButton>\r\n      </Tooltip>\r\n      <Box borderRadius={16} {...propsForDisplay}>\r\n          {this.props.children}\r\n          <div className=\"show_activity\">\r\n            {this.state.name}. {/*Risque : {this.state.risk} */}\r\n          </div>\r\n      </Box>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showCreator = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"risk_form_creator\">\r\n      <Box borderRadius={16} {...propsForForm}>\r\n            <Grid container spacing={1} justify=\"center\" className=\"form_activity_grid\">\r\n                  <Grid item className=\"grid_name_activity\">\r\n                      <TextField id=\"outlined-basic\" size=\"small\" style={{width: 180}} label=\"Nom de l'activité\" variant=\"outlined\" defaultValue={this.state.name} onChange={this.handleNameField} />\r\n                  </Grid>\r\n                  <Grid container spacing={1} justify=\"center\" className=\"form_inner_grid\">\r\n                      <Grid item>\r\n                          <TextField id=\"outlined-basic\" style={{width: 90}} type=\"number\" InputLabelProps={{shrink: true,}} label=\"heures\" variant=\"outlined\" defaultValue={this.state.heures} onChange={this.handleHours} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                          <TextField id=\"outlined-basic\" style={{width: 90}} type=\"number\" InputLabelProps={{shrink: true,}} label=\"minutes\" variant=\"outlined\" defaultValue={this.state.minutes} onChange={this.handleMinutes} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"demo-simple-select-label\">Endroit</InputLabel>\r\n                          <Select\r\n                            native \r\n                            id=\"demo-simple-select\"\r\n                            value={this.state.location}\r\n                            onChange={this.handleLocation}\r\n                            label=\"Endroit\"\r\n                          >\r\n                            <option value=\"indoors\">Intérieur</option>\r\n                            <option value=\"outdoors\">Extérieur</option>\r\n                            <option value=\"train\">Train avec filtration de l'air</option>\r\n                            <option value=\"car\">Voiture en déplacement fenêtres ouvertes</option>\r\n                            <option value=\"plane\">Avion</option>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormControlLabel\r\n                          control={<Checkbox color=\"primary\" checked={this.state.wearMask}\r\n                            onChange={this.handleChange}\r\n                            name=\"wearMask\"\r\n                            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                          />} label=\"Portez-vous un masque ?\" />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField id=\"outlined-basic\" style={{width: 90}} type=\"number\" InputLabelProps={{shrink: true,}} label=\"Nb people\" variant=\"outlined\" defaultValue={this.state.nbPeople} onChange={this.handleNbPeople} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField id=\"outlined-basic\" style={{width: 90}} type=\"number\" InputLabelProps={{shrink: true,}} label=\"Masks\" variant=\"outlined\" defaultValue={this.state.nbMasked} onChange={this.handleNbMasked} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"demo-simple-select-label\">Conversation</InputLabel>\r\n                          <Select\r\n                            native \r\n                            id=\"demo-simple-select\"\r\n                            value={this.state.talking}\r\n                            onChange={this.handleTalking}\r\n                            label=\"Nb people\"\r\n                          >\r\n                            <option value=\"normal\">Normale</option>\r\n                            <option value=\"quiet\">Sans parler</option>\r\n                            <option value=\"loud\">Forte</option>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"demo-simple-select-label\">Distance</InputLabel>\r\n                          <Select\r\n                            native \r\n                            style={{width: 90}}\r\n                            id=\"demo-simple-select\"\r\n                            value={this.state.distance}\r\n                            onChange={this.handleDistance}\r\n                            label=\"Nb people\"\r\n                          >\r\n                            <option value=\"normal\">Normale (1m)</option>\r\n                            <option value=\"close\">Proche (&le;30cm)</option>\r\n                            <option value=\"long\">Longue (2m)</option>\r\n                            <option value=\"veryLong\">Très longue (&ge;3m)</option>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"demo-simple-select-label\">Risk profile</InputLabel>\r\n                          <Select\r\n                            native \r\n                            id=\"demo-simple-select\"\r\n                            value={this.state.riskProfile}\r\n                            onChange={this.handleRiskProfile}\r\n                          >\r\n                            <option value=\"average\">Standard</option>\r\n                            <option value=\"worker\">Travailleur de première ligne</option>\r\n                            <option value=\"nonWorker\">Télétravaille</option>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                  </Grid>\r\n            </Grid>\r\n            <br/>\r\n            <div className={classes.root}>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => {this.setState({ showForm: true }); this.setActivityRisk()}}\r\n              >\r\n                {\" \"}\r\n                Submit\r\n              </Button>\r\n            </div>\r\n      </Box>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"riskForm_container\">\r\n          {this.state.showForm ? this.showForm() : this.showCreator()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RiskForm);\r\n","D:\\Dev\\covinsights\\src\\css\\GlobalStyle.js",[],"D:\\Dev\\covinsights\\src\\index.js",[],"D:\\Dev\\covinsights\\src\\pages\\Error.js",[],["157","158"],"D:\\Dev\\covinsights\\src\\pages\\home.js",[],["159","160"],"D:\\Dev\\covinsights\\src\\pages\\calculator.js",[],["161","162"],"D:\\Dev\\covinsights\\src\\components\\Calculator\\Evolution.js",[],"D:\\Dev\\covinsights\\src\\pages\\familyGathering.js",["163"],"import React, {Component} from \"react\";\r\nimport Gathering from \"../components/FamilyGathering/Gatherer.js\";\r\nimport { Helmet } from 'react-helmet'\r\n\r\nclass FamilyGathering extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n            <Helmet>\r\n                <title>\r\n                Réunion familiale.\r\n                </title>\r\n            </Helmet>                    \r\n            <div className=\"family_presentation\">\r\n                <h2>\r\n                 Bienvenue dans le simulateur de réunion familiale !\r\n                </h2>\r\n            </div>\r\n            <Gathering globalRisk={this.props.globalRisk} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FamilyGathering;",["164","165"],"D:\\Dev\\covinsights\\src\\css\\ContactFormWrapper.js",[],"D:\\Dev\\covinsights\\src\\components\\Layout.js",["166"],"import React from \"react\"\r\nimport { ThemeProvider } from \"styled-components\"\r\nimport { Theme, GlobalStyle } from \"../css\"\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <main>\r\n      <ThemeProvider theme={Theme}>\r\n        <GlobalStyle />\r\n        {children}\r\n        {/* <Footer /> */}\r\n      </ThemeProvider>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n",["167","168"],"D:\\Dev\\covinsights\\src\\css\\Theme.js",["169"],"export default {\n  primaryColor: \"#155875\",\n  mainBlack: \"#222\",\n  mainWhite: \"#fff\",\n  offWhite: \"#f7f7f7\",\n  mainGrey: \"#ececec\",\n  darkGrey: \"#afafaf\",\n  ecoGreen: \"#3ead5a\",\n  mainTransition: \"all 0.3s linear\",\n  mainSpacing: \"4px\",\n  lightShadow: \"2px 5px 3px 0px rgba(0, 0, 0, 0.5)\",\n  darkShadow: \"4px 10px 5px 0px rgba(0, 0, 0, 0.5)\",\n}\n","D:\\Dev\\covinsights\\src\\components\\constants\\activities.js",["170"],"export default [\r\n    {\r\n      name: \"Repas à 2 en intérieur\",\r\n      wearMask: false,\r\n      duration:90,\r\n      nbPeople: 1,\r\n      nbMasked: 0,\r\n      location: \"indoors\",\r\n      talking: \"normal\",\r\n      distance: \"normal\",\r\n      riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name: \"Coup d'un soir\",\r\n        wearMask:false,\r\n        duration:300,\r\n        nbPeople:1,\r\n        nbMasked:0,\r\n        outdoors:false,\r\n        talking:\"normal\",\r\n        distance:\"close\",\r\n        riskProfile:\"worker\",\r\n    },\r\n    {\r\n        name: \"Cours de danse (partenaire fixe)\",\r\n        wearMask: true,\r\n        duration:60,\r\n        nbPeople: 20,\r\n        nbMasked: 20,\r\n        location: \"indoors\",\r\n        talking: \"normal\",\r\n        distance: \"normal\",\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name: \"Concert (gradins, avec masque)\",\r\n        wearMask: true,\r\n        duration:120,\r\n        nbPeople: 10,\r\n        nbMasked: 10,\r\n        location: \"indoors\",\r\n        talking: \"loud\",\r\n        distance: \"normal\",\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Concert (fosse, avec masque)\",\r\n        wearMask: true,\r\n        duration: 120,\r\n        nbPeople: 100,\r\n        nbMasked: 100,\r\n        location: \"indoors\",\r\n        talking: \"loud\",\r\n        distance: \"normal\",\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Ecole / Université (une journée)\",\r\n        nbPeople: 10,\r\n        duration: 480,\r\n        wearMask: true,\r\n        nbMasked: 10,\r\n        location: \"indoors\",\r\n        distance: \"long\",\r\n        talking: 'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"File d'attente(30mn)\",\r\n        wearMask: true,\r\n        duration: 30,\r\n        nbPeople: 4,\r\n        nbMasked: 4,\r\n        location: \"indoors\",\r\n        talking: \"normal\",\r\n        distance: \"normal\",\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Nourriture à emporter (avec masque)\",\r\n        nbPeople:1,\r\n        duration:5,\r\n        wearMask: true,\r\n        nbMasked:1,\r\n        location: \"indoors\",\r\n        distance:\"long\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Promenade\",\r\n        nbPeople:3,\r\n        duration:60,\r\n        wearMask: false,\r\n        nbMasked:0.,\r\n        location: \"outdoors\",\r\n        distance:\"veryLong\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Repas à 2 en extérieur\",\r\n        nbPeople:1,\r\n        duration:90,\r\n        wearMask: false,\r\n        nbMasked:0.,\r\n        location: \"outdoors\",\r\n        distance:\"normal\",\r\n        talking:'normal',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Bibliothèque/musée (avec masque)\",\r\n        nbPeople:5,\r\n        duration:120,\r\n        wearMask:true,\r\n        nbMasked:5,\r\n        outdoors:false,\r\n        distance:\"long\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Faire ses courses\",\r\n        nbPeople:10,\r\n        duration:30,\r\n        wearMask:true,\r\n        nbMasked:10,\r\n        outdoors:false,\r\n        distance:\"normal\",\r\n        talking:'quiet',\r\n        riskProfile: \"worker\",\r\n    },\r\n    {\r\n        name:\"Pique-nique de 2h\",\r\n        nbPeople:5,\r\n        duration:120,\r\n        wearMask:false,\r\n        nbMasked:0,\r\n        location:\"outdoors\",\r\n        distance:\"normal\",\r\n        talking:'normal',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Travail en open space\",\r\n        nbPeople:10,\r\n        duration:480,\r\n        wearMask:true,\r\n        nbMasked:10,\r\n        outdoors:false,\r\n        distance:\"long\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Transports en commun (1h)\",\r\n        nbPeople:20,\r\n        duration:60,\r\n        wearMask:true,\r\n        nbMasked:20,\r\n        outdoors:false,\r\n        distance:\"normal\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Dîner entre amis de 2h\",\r\n        nbPeople:4,\r\n        duration:120,\r\n        wearMask:false,\r\n        nbMasked:0,\r\n        outdoors:false,\r\n        distance:\"normal\",\r\n        talking:'normal',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Cinema/Théâtre\",\r\n        nbPeople:50,\r\n        duration:120,\r\n        wearMask:true,\r\n        nbMasked:50,\r\n        outdoors:false,\r\n        distance:\"long\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Théâtre(1er rang)\",\r\n        nbPeople:8,\r\n        duration:120,\r\n        wearMask:true,\r\n        nbMasked:0,\r\n        outdoors:false,\r\n        distance:\"long\",\r\n        talking:'loud',\r\n        riskProfile: \"worker\",\r\n    },\r\n    {\r\n        name:\"Soirée jeux de 3h à 5 personnes\",\r\n        nbPeople:4,\r\n        duration:180,\r\n        wearMask:false,\r\n        nbMasked:0,\r\n        outdoors:false,\r\n        distance:\"normal\",\r\n        talking:'normal',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Uber (30mn)\",\r\n        nbPeople:1,\r\n        duration:30,\r\n        wearMask:true,\r\n        nbMasked:1,\r\n        location:\"car\",\r\n        distance:\"normal\",\r\n        talking:'normal',\r\n        riskProfile: \"normal\",\r\n    }\r\n  ]\r\n  ","D:\\Dev\\covinsights\\src\\css\\CardWrapper.js",[],"D:\\Dev\\covinsights\\src\\css\\BannerWrapper.js",[],"D:\\Dev\\covinsights\\src\\css\\PageContainerWrapper.js",[],"D:\\Dev\\covinsights\\src\\css\\PortfolioItemWrapper.js",[],"D:\\Dev\\covinsights\\src\\css\\FooterWrapper.js",[],["171","172"],"D:\\Dev\\covinsights\\src\\components\\Calculator\\NewMath.js",["173","174","175","176"],"class Universe{\r\n\t/*\r\n\tThe universe class contains the prevalence at time, as well as the\r\n\tprobabilities of changing state. There should be a common universe to\r\n\tall persons and activities in an experiment, for easy update.\r\n\t*/\r\n\tconstructor(prevalence){\r\n\t\tthis.prevalence = prevalence;\r\n\t}\r\n\t\r\n\tsetPrevalence(prevalence){\r\n\t\tthis.prevalence = prevalence;\r\n\t}\r\n\t/*\r\n\t- Probability of being hospitalized if infected;\r\n\t- Probability of needing ICU if hospitalized;\r\n\t- Probability of dying if hospitalized.\r\n\tAll the numbers come from the paper of Institut Pasteur :\r\n\t\"Estimating the burden of SARS-CoV-2 in France\"\r\n\thttps://hal-pasteur.archives-ouvertes.fr/pasteur-02548181/document\r\n\t*/\r\n\tageFactors(age=\"20\", gender=\"ND\"){\r\n\t\tvar hospAgeFactor, reaAgeFactor, deathAgeFactor;\r\n\t\tif(gender===\"M\"){\r\n\t\t\tif (age < 20){\r\n\t\t\t\thospAgeFactor = 0.1;\r\n\t\t\t\treaAgeFactor = 17.5;\r\n\t\t\t\tdeathAgeFactor = 1.2;\r\n\t\t\t}\r\n\t\t\telse if (age < 30){\r\n\t\t\t\thospAgeFactor = 0.6;\r\n\t\t\t\treaAgeFactor = 12.2;\r\n\t\t\t\tdeathAgeFactor = 1.3;\r\n\t\t\t}\r\n\t\t\telse if (age < 40){\r\n\t\t\t\thospAgeFactor = 1.2;\r\n\t\t\t\treaAgeFactor = 17.2;\r\n\t\t\t\tdeathAgeFactor = 2.5;\r\n\t\t\t}\r\n\t\t\telse if (age < 50){\r\n\t\t\t\thospAgeFactor = 1.6;\r\n\t\t\t\treaAgeFactor = 24.3;\r\n\t\t\t\tdeathAgeFactor = 3.9;\r\n\t\t\t}\r\n\t\t\telse if (age < 60){\r\n\t\t\t\thospAgeFactor = 3.2;\r\n\t\t\t\treaAgeFactor = 31.7;\r\n\t\t\t\tdeathAgeFactor = 7.5;\r\n\t\t\t}\r\n\t\t\telse if (age < 70){\r\n\t\t\t\thospAgeFactor = 7.0;\r\n\t\t\t\treaAgeFactor = 36.4;\r\n\t\t\t\tdeathAgeFactor = 14.2;\r\n\t\t\t}\r\n\t\t\telse if (age < 80){\r\n\t\t\t\thospAgeFactor = 11.4;\r\n\t\t\t\treaAgeFactor = 29.0;\r\n\t\t\t\tdeathAgeFactor = 25.3;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\thospAgeFactor = 31.4;\r\n\t\t\t\treaAgeFactor = 5.7;\r\n\t\t\t\tdeathAgeFactor = 42.0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(gender===\"F\"){\r\n\t\t\tif (age<20){\r\n\t\t\t\thospAgeFactor = 0.09;\r\n\t\t\t\treaAgeFactor = 8.5;\r\n\t\t\t\tdeathAgeFactor = 0.;\r\n\t\t\t}\r\n\t\t\telse if (age<30){\r\n\t\t\t\thospAgeFactor = 0.5;\r\n\t\t\t\treaAgeFactor = 6.8;\r\n\t\t\t\tdeathAgeFactor = 1.4;\r\n\t\t\t}\r\n\t\t\telse if (age<40){\r\n\t\t\t\thospAgeFactor = 0.9;\r\n\t\t\t\treaAgeFactor = 10.4;\r\n\t\t\t\tdeathAgeFactor = 1.6;\r\n\t\t\t}\r\n\t\t\telse if (age<50){\r\n\t\t\t\thospAgeFactor = 1.3;\r\n\t\t\t\treaAgeFactor = 14.3;\r\n\t\t\t\tdeathAgeFactor = 3.2;\r\n\t\t\t}\r\n\t\t\telse if (age<60){\r\n\t\t\t\thospAgeFactor = 2.5;\r\n\t\t\t\treaAgeFactor = 19.0;\r\n\t\t\t\tdeathAgeFactor = 6.4;\r\n\t\t\t}\r\n\t\t\telse if (age<70){\r\n\t\t\t\thospAgeFactor = 5.3;\r\n\t\t\t\treaAgeFactor = 21.6;\r\n\t\t\t\tdeathAgeFactor = 12.0;\r\n\t\t\t}\r\n\t\t\telse if (age<80){\r\n\t\t\t\thospAgeFactor = 8.0;\r\n\t\t\t\treaAgeFactor = 17.0;\r\n\t\t\t\tdeathAgeFactor = 20.7;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\thospAgeFactor = 15.9;\r\n\t\t\t\treaAgeFactor = 3.4;\r\n\t\t\t\tdeathAgeFactor = 34.0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// si gender non défini on met la moyenne\r\n\t\telse{\r\n\t\t\tif (age<20){\r\n\t\t\t\thospAgeFactor = 0.1;\r\n\t\t\t\treaAgeFactor = 13.5;\r\n\t\t\t\tdeathAgeFactor = 0.6;\r\n\t\t\t}\r\n\t\t\telse if (age<30){\r\n\t\t\t\thospAgeFactor = 0.5;\r\n\t\t\t\treaAgeFactor = 9.8;\r\n\t\t\t\tdeathAgeFactor = 1.4;\r\n\t\t\t}\r\n\t\t\telse if (age<40){\r\n\t\t\t\thospAgeFactor = 1.0;\r\n\t\t\t\treaAgeFactor = 14.1;\r\n\t\t\t\tdeathAgeFactor = 2.1;\r\n\t\t\t}\r\n\t\t\telse if (age<50){\r\n\t\t\t\thospAgeFactor = 1.5;\r\n\t\t\t\treaAgeFactor = 19.8;\r\n\t\t\t\tdeathAgeFactor = 3.6;\r\n\t\t\t}\r\n\t\t\telse if (age<60){\r\n\t\t\t\thospAgeFactor = 2.8;\r\n\t\t\t\treaAgeFactor = 25.9;\r\n\t\t\t\tdeathAgeFactor = 7.0;\r\n\t\t\t}\r\n\t\t\telse if (age<70){\r\n\t\t\t\thospAgeFactor = 6.1;\r\n\t\t\t\treaAgeFactor = 29.7;\r\n\t\t\t\tdeathAgeFactor = 13.2;\r\n\t\t\t}\r\n\t\t\telse if (age<80){\r\n\t\t\t\thospAgeFactor = 9.6;\r\n\t\t\t\treaAgeFactor = 23.5;\r\n\t\t\t\tdeathAgeFactor = 23.2;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\thospAgeFactor = 21.7;\r\n\t\t\t\treaAgeFactor = 4.6;\r\n\t\t\t\tdeathAgeFactor = 38.4;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [hospAgeFactor/100, reaAgeFactor/100, deathAgeFactor/100];\t\r\n\t}\r\n}\r\n\r\nclass BasicUniverse extends Universe{\r\n\tconstructor(){\r\n\t\tsuper(0.010); // Prevalence in early November in France.\r\n\t}\r\n}\r\n\r\nclass RiskProfile{\r\n\tconstructor(type=\"basic\"){\r\n\t\tthis.type = type;\r\n\t}\r\n\t\r\n\tgetProfileRisk(){\r\n\t\treturn 1.0;\r\n\t}\r\n}\r\n\r\nclass NonWorkerRiskProfile extends RiskProfile{\r\n\tconstructor(){\r\n\t\tsuper(\"nonWorker\");\r\n\t}\r\n\tgetProfileRisk(){\r\n\t\treturn 1.0 / 3.0;\r\n\t}\r\n}\r\n\r\nclass WorkerRiskProfile extends RiskProfile{\r\n\tconstructor(){\r\n\t\tsuper(\"worker\");\r\n\t}\r\n\tgetProfileRisk(){\r\n\t\treturn 3.0;\r\n\t}\r\n}\r\n\r\nclass CustomActivity{\r\n    constructor(name=\"an activity\", duration=60, nb_people=1, mask=false, maskProportion=0., talking=\"normal\", location=\"indoors\", distance=\"normal\", riskProfile=new RiskProfile()){\r\n\t\tthis.name = name;\r\n\t\tthis.duration=duration;\r\n\t\tthis.nb_people = nb_people;\r\n\t\tthis.mask = mask;\r\n\t\tthis.maskProportion = maskProportion;\r\n\t\tthis.talking = talking;\r\n\t\tthis.location=location;\r\n\t\tthis.distance=distance;\r\n\t\tthis.hours = Math.floor(duration/60);\r\n        this.minutes = duration % 60;\r\n        this.riskProfile=riskProfile;\r\n\t}\r\n    \r\n    getRisk(){\r\n\t\tvar risk = 0.06\r\n\t\tif (this.mask){\r\n\t\t\trisk = risk / 2;\r\n\t\t}\r\n\t\trisk = risk * (1 - 0.75 * this.maskProportion);\r\n\t\tif (this.location==\"outdoors\"){\r\n\t\t\trisk = risk / 20;\r\n        }\r\n        if (this.location==\"train\" || this.location==\"car\"){\r\n\t\t\trisk = risk / 4;\r\n        }\r\n        if (this.location==\"plane\"){\r\n\t\t\trisk = risk / 6;\r\n\t\t}\r\n\t\tif (this.talking === \"loud\"){\r\n\t\t\trisk = risk * 5;\r\n\t\t}\r\n\t\tif (this.talking === \"quiet\"){\r\n\t\t\trisk = risk / 5;\r\n\t\t}\r\n\t\tif (this.distance ===\"close\"){\r\n\t\t\trisk = risk * 2;\r\n\t\t}\r\n\t\tif (this.distance === \"long\"){\r\n\t\t\trisk = risk /2;\r\n\t\t}\r\n\t\tif (this.distance === \"veryLong\"){\r\n\t\t\trisk = risk /4;\r\n\t\t}\r\n        risk = risk * this.riskProfile.getProfileRisk();\r\n        // This, multiplied by the prevalence, gives the probability of getting covid from a 1h interaction with the person\r\n\t\treturn [risk, this.hours, this.minutes, this.nb_people];\r\n\t}\r\n}\r\n\r\nclass Person extends RiskProfile{\r\n\tconstructor(name, age, gender=\"ND\", activity_list=[], universe = new BasicUniverse()){\r\n\t\tsuper(universe);\r\n\t\tthis.name = name;\r\n\t\tthis.age = age;\r\n\t\tthis.gender = gender;\r\n\t\tthis.activityList = activity_list;\r\n\t\tthis.universe = universe;\r\n\t\tthis.ageFactors = this.universe.ageFactors(this.age, this.gender);\r\n\t}\r\n\t\r\n\taddActivity(activity){\r\n\t\tthis.activityList.push(activity);\r\n\t}\r\n\t\r\n\tclearActivityList(){\r\n\t\t// Javascript has a garbage collector so no need to care about memory release.\r\n\t\tthis.activityList = [];\r\n\t}\r\n\t\r\n\tgetRisk(){\r\n\t\t// Returns the probability of having the disease\r\n\t\tvar risk=1;\r\n\t\tif(this.activityList === undefined || this.activityList.length === 0)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar i=0;\r\n\t\tfor(i=0; i<this.activityList.length; i++)\r\n\t\t{\r\n            var myActi = this.activityList[i].getRisk(); // [risk, hours, minutes, nb_people]\r\n            var myRisk = myActi[0] * this.universe.prevalence;\r\n            // Handle duration\r\n\t\t\tvar composedRisk = 1 - Math.pow((1-myRisk),myActi[1])*(1-myRisk*myActi[2]/60);\r\n\t\t\t// We hardcap the risk from one single person to the household value, 0.5.\r\n\t\t\tif(composedRisk>0.5){\r\n\t\t\t\tcomposedRisk=0.5;\r\n\t\t\t}\r\n            // Handle nb people\r\n            var totalRisk = Math.pow((1-composedRisk), myActi[3]); // gives 1-the risk\r\n\r\n\t\t\trisk = risk*totalRisk;\r\n        }\r\n        risk=1-risk;\r\n\t\treturn risk;\r\n\t}\r\n\t\r\n\tcomputeAgeDangerProfile(){\r\n\t\t// Probability of catching the disease, being hospitalized, ICU, death.\r\n\t\tvar risk = this.getRisk();\r\n\t\tvar riskHosp = risk * this.ageFactors[0];\r\n\t\tvar riskRea = riskHosp * this.ageFactors[1];\r\n\t\tvar riskDeath = riskHosp * this.ageFactors[2];\r\n\t\treturn [risk, riskHosp, riskRea, riskDeath];\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass Interaction{\r\n\tconstructor(name){\r\n\t\tthis.name = name;\r\n\t}\r\n\t\r\n\tgetRisk(){\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\nclass InteractionOne extends Interaction{\r\n\tconstructor(name=\"an activity\", duration=60, maskA=false, maskB=false, talking=\"normal\", outdoors=false, distance=\"normal\"){\r\n\t\t/* A one on one interaction. Options are :\r\n\t\ttalking = \"normal\", \"loud\" (x3), \"quiet\" (/3)\r\n\t\toutdoors (/20)\r\n\t\tdistance = \"normal\", \"close\" (x2), \"long\" (/2) */\r\n\t\tsuper(name);\r\n\t\tthis.duration=duration;\r\n\t\tthis.maskA=maskA;\r\n\t\tthis.maskB=maskB;\r\n\t\tthis.talking = talking;\r\n\t\tthis.outdoors=outdoors;\r\n\t\tthis.distance=distance;\r\n\t\tthis.hours = Math.floor(duration/60);\r\n\t\tthis.minutes = duration % 60;\r\n\t}\r\n\t\r\n\tsetMask(maskA,maskB){\r\n\t\tthis.maskA = maskA;\r\n\t\tthis.maskB = maskB;\r\n\t}\r\n\t\r\n\t// Returns the risk of contamination if the other has the disease.\r\n\tgetActivityRisk(){\r\n\t\tvar risk = 0.06\r\n\t\tif (this.maskA){\r\n\t\t\trisk = risk / 2;\r\n\t\t}\r\n\t\tif (this.maskB){\r\n\t\t\trisk = risk / 4;\r\n\t\t}\r\n\t\tif (this.outdoors){\r\n\t\t\trisk = risk / 20;\r\n\t\t}\r\n\t\tif (this.talking === \"loud\"){\r\n\t\t\trisk = risk * 5;\r\n\t\t}\r\n\t\tif (this.talking === \"quiet\"){\r\n\t\t\trisk = risk / 5;\r\n\t\t}\r\n\t\tif (this.distance ===\"close\"){\r\n\t\t\trisk = risk * 2;\r\n\t\t}\r\n\t\tif (this.distance === \"long\"){\r\n\t\t\trisk = risk /2;\r\n\t\t}\r\n\t\tif (this.distance === \"veryLong\"){\r\n\t\t\trisk = risk /4;\r\n\t\t}\r\n\t\tvar finalRisk = 0\r\n\t\t// Adapting the risk to the duration. 6% chance of contamination per hour.\r\n\t\tvar i;\r\n\t\tfor (i=0; i< this.hours; i++){\r\n\t\t\tfinalRisk = finalRisk + (1-finalRisk)*risk;\r\n\t\t}\r\n\t\tfinalRisk = finalRisk + (1-finalRisk)*risk*this.minutes/60;\r\n\t\treturn finalRisk;\r\n\t}\r\n}\r\n\r\n// Recreating the defaultdict from python.\r\nclass DefaultDict {\r\n    constructor(defaultVal) {\r\n      return new Proxy({}, {\r\n        get: (target, name) => name in target ? target[name] : defaultVal\r\n      })\r\n    }\r\n  }\r\n\r\nclass GroupReunion{\r\n\t/*\r\n\tSimulating a family gathering. The mask policy can be \"none\", \"all\", or \"under50\".\r\n\tIn the latter, only the people younger than 50 wear a mask.\r\n\tOutput : the probability that at least one person is sick, hospitalized or dies,\r\n\tas well as the average number of hospitalizations, ICU or death.\r\n\tFinally, we estimate the number of family gatherings and compute the\r\n\tcount for the whole country, as the \"cost\" of christmas.\r\n\t*/\r\n\tconstructor(duration=60, maskPolicy=\"none\", distance=\"normal\", outdoors=false, talking=\"normal\", personList=[]){\r\n\t\tthis.duration = duration;\r\n\t\tthis.maskPolicy = maskPolicy;\r\n\t\tthis.distance = distance;\r\n\t\tthis.outdoors = outdoors;\r\n\t\tthis.talking = talking;\r\n\t\tthis.personList = personList;\r\n\t\tthis.generateMasked();\r\n\t\t// We use a one-on-one interaction to compute the various risks.\r\n        this.interaction = new InteractionOne(\"meeting\", this.duration, false, false, this.talking, this.outdoors, this.distance);\r\n\t\t// *** TODO *** Ajouter le calcul du profil de risque.\r\n\t}\r\n\t\r\n\tgenerateMasked(){\r\n\t\t// Compute who wears a mask according to the mask policy.\r\n\t\tthis.masked = new DefaultDict(false);\r\n\t\tif(this.maskPolicy===\"all\"){\r\n\t\t\tthis.masked = new DefaultDict(true);\r\n\t\t}\r\n\t\telse if(this.maskPolicy===\"under50\"){\r\n\t\t\tvar i = 0;\r\n\t\t\tfor(i=0; i<this.personList.length;i++){\r\n\t\t\t\tif(this.personList[i].age < 50){\r\n\t\t\t\t\tthis.masked[i] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\taddPerson(p){\r\n\t\tthis.personList.push(p);\r\n\t}\r\n\t\r\n\tupdate(){\r\n\t\tthis.generateMasked();\r\n\t\t// *** TODO *** Ajouter le calcul de this.riskProfile\r\n\t}\r\n\t\r\n\tcomputeRiskProfile(){\r\n\t\t/*\r\n\t\tFormulas :\r\n\t\t- Mean number of people hospitalized : sum(p_hosp)\r\n\t\t- Probability that at least one person is hospitalized : 1 - prod(1-p_hosp)\r\n\t\t*/\r\n\t\tvar risk = 1.0;\r\n\t\tvar hospRisk = 1.0;\r\n\t\tvar reaRisk = 1.0;\r\n\t\tvar deathRisk = 1.0;\r\n\t\tvar moyenneHosp = 0.0;\r\n\t\tvar moyenneRea = 0.0;\r\n\t\tvar moyenneDeaths = 0.0;\r\n\t\tvar i;\r\n\t\tfor(i=0; i<this.personList.length;i++){\r\n\t\t\tvar myRisk = this.personList[i].get_risk();\r\n\t\t\t// We update the probability that no-one has the disease\r\n\t\t\trisk = risk * (1-myRisk);\r\n\t\t\tvar j;\r\n\t\t\tfor(j=0; j<this.personList.length; j++){\r\n\t\t\t\tthis.interaction.setMask(this.masked[i], this.masked[j]);\r\n\t\t\t\t// Updating the risk for person i by taking into account the possible\r\n\t\t\t\t// contamination by person j.\r\n\t\t\t\tmyRisk = myRisk + (1-myRisk)*this.interaction.getActivityRisk()*this.personList[j].getRisk();\r\n\t\t\t}\r\n\t\t\tvar hospProba = this.personList[i].ageFactors[0];\r\n\t\t\tvar reaProba = this.personList[i].ageFactors[1];\r\n\t\t\tvar deathProba = this.personList[i].ageFactors[2];\r\n\t\t\t// Updating the proba that no-one gets hospitalized\r\n\t\t\thospRisk = hospRisk * (1 - myRisk*hospProba);\r\n\t\t\treaRisk = reaRisk * (1 - myRisk*hospProba*reaProba)\r\n\t\t\tdeathRisk = deathRisk  *(1 - myRisk*hospProba*deathProba)\r\n\t\t\t// Updating the average number of hospitalizations\r\n\t\t\tmoyenneHosp = moyenneHosp + myRisk*hospProba\r\n\t\t\tmoyenneRea = moyenneRea + myRisk*hospProba*reaProba\r\n\t\t\tmoyenneDeaths = moyenneDeaths + myRisk*hospProba*deathProba\r\n\t\t}\r\n\t\trisk = 1-risk;\r\n\t\thospRisk = 1-hospRisk;\r\n\t\treaRisk = 1-reaRisk;\r\n\t\tdeathRisk = 1-deathRisk;\r\n\t\treturn [risk, hospRisk, reaRisk, deathRisk, moyenneHosp, moyenneRea, moyenneDeaths];\r\n\t}\r\n}\r\n\r\nexport {BasicUniverse, CustomActivity, Person, Universe, GroupReunion, RiskProfile, NonWorkerRiskProfile, WorkerRiskProfile, InteractionOne};","D:\\Dev\\covinsights\\src\\css\\NavbarWrapper.js",[],"D:\\Dev\\covinsights\\src\\components\\constants\\profiles.js",["177"],"export default [\r\n    {\r\n        name: \"Safe Susie\",\r\n        age: 20,\r\n        gender: 'F',\r\n        risk: 0.06,\r\n    },\r\n    {\r\n        name: \"Risky Rufus\",\r\n        age: 18,\r\n        gender: 'M',\r\n        risk: 1.35,\r\n    },\r\n    {\r\n        name: \"Busy Bhagya\",\r\n        age: 75,\r\n        gender : 'F',\r\n        risk:0.1,\r\n    },\r\n    {\r\n        name: \"Family Farid\",\r\n        age:75,\r\n        gender: 'M',\r\n        risk:0,\r\n    },\r\n    {\r\n        name: \"Malevolent Marvin\",\r\n        age:30,\r\n        gender:\"M\",\r\n        risk:10.0,\r\n    },\r\n    {\r\n        name: \"Old Olga\",\r\n        age: 85,\r\n        gender: 'F',\r\n        risk:0.\r\n    },\r\n]","D:\\Dev\\covinsights\\src\\pages\\insights.js",[],"D:\\Dev\\covinsights\\src\\components\\Insights\\ComparisonRisks.js",["178","179","180","181"],"import React, {Component} from 'react';\r\nimport list_activities from '../constants/activities.js';\r\nimport { ScatterChart, CartesianGrid, XAxis, YAxis, Tooltip, Cell, Scatter} from 'recharts';\r\nimport { CustomActivity, NonWorkerRiskProfile, WorkerRiskProfile, RiskProfile, BasicUniverse} from '../Calculator/NewMath.js';\r\nimport { orange, red } from '@material-ui/core/colors';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nclass ComparisonRisk extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {actis:[], universe:new BasicUniverse()};\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        var myActis = this.state.actis;\r\n        for(var i=0; i<list_activities.length; i++){\r\n            var current = list_activities[i];\r\n            var profile = new RiskProfile();\r\n            if(current.riskProfile == \"worker\")\r\n            {\r\n                profile = new WorkerRiskProfile();\r\n            }\r\n            if(current.riskProfile == \"nonWorker\")\r\n            {\r\n                profile = new NonWorkerRiskProfile();\r\n            }\r\n            var a = new CustomActivity(current.name, current.duration, current.nbPeople, current.wearMask, current.nbMasked/current.nbPeople, current.talking, current.location, current.distance, profile);\r\n            var myActi = a.getRisk();\r\n            console.log(current.name);\r\n            console.log(myActi)\r\n            var myRisk = myActi[0] * this.state.universe.prevalence;\r\n            // Handle duration\r\n            var composedRisk = 1 - Math.pow((1-myRisk),myActi[1])*(1-myRisk*myActi[2]/60);\r\n            // We hardcap the risk from one single person to the household value, 0.5.\r\n\t\t\tif(composedRisk>0.5){\r\n\t\t\t\tcomposedRisk=0.5;\r\n\t\t\t}\r\n            // Handle nb people\r\n            var totalRisk = 1-Math.pow((1-composedRisk), myActi[3]);\r\n            // Do that for one year\r\n            totalRisk = 1-Math.pow((1-totalRisk),52);\r\n            myActis.push({name:current.name, risk:Math.round(totalRisk*10000000)/100000}); // En pourcentage\r\n        }\r\n        myActis.sort((a, b) => (a.risk > b.risk) ? 1 : -1);\r\n        this.setState({actis:myActis});\r\n        //console.log(myActis)\r\n    }\r\n\r\n    computeFill = (risk) => {\r\n        // Seuils de risque (1 an) : 0.5%, \r\n        if(risk<0.5)\r\n        {\r\n            return \"#82ca9d\"\r\n        }\r\n        if(risk>0.5 && risk<3)\r\n        {\r\n            return \"#F8E716\";\r\n        }\r\n        if(risk>3 && risk <10)\r\n        {\r\n            return 'orange';\r\n        }\r\n        else{\r\n            return 'red';\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div style={{textAlign:\"center\"}}>\r\n            <div className=\"recharts_wrapper\">\r\n            <ScatterChart width={630} height={600}\r\n                margin={{ top: 20, right:15, bottom: 10, left: 40 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"risk\" type=\"number\" domain={['dataMin', 'dataMax']} scale=\"log\" ticks={ [0.5, 3, 10] } />\r\n                <YAxis dataKey=\"name\" type='category' interval={5} />\r\n                <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n                <Scatter data={this.state.actis} fill={\"#82ca9d\"}>\r\n                {\r\n                    this.state.actis.map((entry, index) => {\r\n                        return <Cell key={`cell-${index}`} fill={this.computeFill(entry.risk)} />\r\n                    })\r\n                }\r\n                </Scatter>\r\n            </ScatterChart>\r\n            </div>         \r\n            <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <span class=\"green-dot\"></span> risque {\"< 0.5\"} % sur un an.\r\n                </Grid>\r\n                <Grid item>\r\n                    <span class=\"yellow-dot\"></span> entre {\"0.5\"} et {\"3\"}%\r\n                </Grid>\r\n                <Grid item>\r\n                    <span class=\"orange-dot\"></span> entre {\"3\"} et {\"10\"}%\r\n                </Grid>\r\n                <Grid item>\r\n                    <span class=\"red-dot\"></span> {\">10\"} \"%\r\n                </Grid>\r\n            </Grid>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComparisonRisk;","D:\\Dev\\covinsights\\src\\components\\Body.js",["182"],{"ruleId":"183","severity":1,"message":"184","line":10,"column":22,"nodeType":"185","messageId":"186","endLine":10,"endColumn":28},{"ruleId":"183","severity":1,"message":"187","line":73,"column":9,"nodeType":"185","messageId":"186","endLine":73,"endColumn":14},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":43,"column":123,"nodeType":"194","messageId":"195","endLine":43,"endColumn":133},{"ruleId":"183","severity":1,"message":"196","line":142,"column":13,"nodeType":"185","messageId":"186","endLine":142,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":156,"column":28,"nodeType":"199","messageId":"195","endLine":156,"endColumn":30},{"ruleId":"183","severity":1,"message":"200","line":180,"column":13,"nodeType":"185","messageId":"186","endLine":180,"endColumn":16},{"ruleId":"183","severity":1,"message":"201","line":400,"column":7,"nodeType":"185","messageId":"186","endLine":400,"endColumn":21},{"ruleId":"183","severity":1,"message":"202","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"203","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":16},{"ruleId":"183","severity":1,"message":"204","line":8,"column":8,"nodeType":"185","messageId":"186","endLine":8,"endColumn":24},{"ruleId":"183","severity":1,"message":"205","line":14,"column":9,"nodeType":"185","messageId":"186","endLine":14,"endColumn":25},{"ruleId":"183","severity":1,"message":"206","line":14,"column":27,"nodeType":"185","messageId":"186","endLine":14,"endColumn":35},{"ruleId":"183","severity":1,"message":"207","line":14,"column":52,"nodeType":"185","messageId":"186","endLine":14,"endColumn":63},{"ruleId":"183","severity":1,"message":"208","line":14,"column":65,"nodeType":"185","messageId":"186","endLine":14,"endColumn":82},{"ruleId":"183","severity":1,"message":"209","line":14,"column":84,"nodeType":"185","messageId":"186","endLine":14,"endColumn":104},{"ruleId":"188","replacedBy":"210"},{"ruleId":"190","replacedBy":"211"},{"ruleId":"183","severity":1,"message":"202","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"188","replacedBy":"212"},{"ruleId":"190","replacedBy":"213"},{"ruleId":"188","replacedBy":"214"},{"ruleId":"190","replacedBy":"215"},{"ruleId":"188","replacedBy":"216"},{"ruleId":"190","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":7,"column":5,"nodeType":"220","messageId":"221","endLine":9,"endColumn":6},{"ruleId":"188","replacedBy":"222"},{"ruleId":"190","replacedBy":"223"},{"ruleId":"183","severity":1,"message":"224","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":13},{"ruleId":"188","replacedBy":"225"},{"ruleId":"190","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":1,"column":1,"nodeType":"229","endLine":13,"endColumn":2},{"ruleId":"227","severity":1,"message":"230","line":1,"column":1,"nodeType":"229","endLine":222,"endColumn":4},{"ruleId":"188","replacedBy":"231"},{"ruleId":"190","replacedBy":"232"},{"ruleId":"197","severity":1,"message":"233","line":210,"column":20,"nodeType":"199","messageId":"195","endLine":210,"endColumn":22},{"ruleId":"197","severity":1,"message":"233","line":213,"column":26,"nodeType":"199","messageId":"195","endLine":213,"endColumn":28},{"ruleId":"197","severity":1,"message":"233","line":213,"column":52,"nodeType":"199","messageId":"195","endLine":213,"endColumn":54},{"ruleId":"197","severity":1,"message":"233","line":216,"column":26,"nodeType":"199","messageId":"195","endLine":216,"endColumn":28},{"ruleId":"227","severity":1,"message":"230","line":1,"column":1,"nodeType":"229","endLine":38,"endColumn":2},{"ruleId":"183","severity":1,"message":"234","line":5,"column":10,"nodeType":"185","messageId":"186","endLine":5,"endColumn":16},{"ruleId":"183","severity":1,"message":"235","line":5,"column":18,"nodeType":"185","messageId":"186","endLine":5,"endColumn":21},{"ruleId":"197","severity":1,"message":"233","line":19,"column":36,"nodeType":"199","messageId":"195","endLine":19,"endColumn":38},{"ruleId":"197","severity":1,"message":"233","line":23,"column":36,"nodeType":"199","messageId":"195","endLine":23,"endColumn":38},{"ruleId":"183","severity":1,"message":"236","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":17},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'mySum' is assigned a value but never used.","no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-dupe-keys","Duplicate key 'globalRisk'.","ObjectExpression","unexpected","'i' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'res' is assigned a value but never used.","'PersonWithRisk' is defined but never used.","'Children' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'InteractionCrowd' is defined but never used.","'Activity' is defined but never used.","'RiskProfile' is defined but never used.","'WorkerRiskProfile' is defined but never used.","'NonWorkerRiskProfile' is defined but never used.",["237"],["238"],["237"],["238"],["237"],["238"],["237"],["238"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["237"],["238"],"'Paper' is defined but never used.",["237"],["238"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign array to a variable before exporting as module default",["237"],["238"],"Expected '===' and instead saw '=='.","'orange' is defined but never used.","'red' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"D:\\Dev\\covinsights\\src\\components\\Insights\\ScenarioChristmas.js":"1","D:\\Dev\\covinsights\\src\\pages\\insights.js":"2","D:\\Dev\\covinsights\\src\\components\\Insights\\ProfileExamples.js":"3","D:\\Dev\\covinsights\\src\\css\\GlobalStyle.js":"4","D:\\Dev\\covinsights\\src\\index.js":"5","D:\\Dev\\covinsights\\src\\components\\Navbar.js":"6","D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskCalculatorEng.js":"7","D:\\Dev\\covinsights\\src\\components\\constants\\activities.js":"8","D:\\Dev\\covinsights\\src\\css\\ContactFormWrapper.js":"9","D:\\Dev\\covinsights\\src\\css\\NavbarWrapper.js":"10","D:\\Dev\\covinsights\\src\\pages\\familyGathering.js":"11","D:\\Dev\\covinsights\\src\\components\\Calculator\\Evolution.js":"12","D:\\Dev\\covinsights\\src\\components\\Calculator\\MyMath.js":"13","D:\\Dev\\covinsights\\src\\pages\\WhitePaperEng.js":"14","D:\\Dev\\covinsights\\src\\components\\Calculator\\NewMath.js":"15","D:\\Dev\\covinsights\\src\\components\\Insights\\SuzieCard.js":"16","D:\\Dev\\covinsights\\src\\components\\Insights\\DonaldCard.js":"17","D:\\Dev\\covinsights\\src\\components\\Insights\\MeiLinhCard.js":"18","D:\\Dev\\covinsights\\src\\components\\Calculator\\BasicEvolution.js":"19","D:\\Dev\\covinsights\\src\\pages\\home.js":"20","D:\\Dev\\covinsights\\src\\pages\\homeEng.js":"21","D:\\Dev\\covinsights\\src\\pages\\insightsEng.js":"22","D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\Gatherer.js":"23","D:\\Dev\\covinsights\\src\\pages\\WhitePaper.js":"24","D:\\Dev\\covinsights\\src\\components\\constants\\profiles.js":"25","D:\\Dev\\covinsights\\src\\css\\Theme.js":"26","D:\\Dev\\covinsights\\src\\css\\FooterWrapper.js":"27","D:\\Dev\\covinsights\\src\\components\\Layout.js":"28","D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskForm.js":"29","D:\\Dev\\covinsights\\src\\reportWebVitals.js":"30","D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\GathererEng.js":"31","D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskFormEng.js":"32","D:\\Dev\\covinsights\\src\\components\\Body.js":"33","D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskCalculator.js":"34"},{"size":7563,"mtime":1621948222112,"results":"35","hashOfConfig":"36"},{"size":1948,"mtime":1622123197916,"results":"37","hashOfConfig":"36"},{"size":927,"mtime":1622123135429,"results":"38","hashOfConfig":"36"},{"size":11070,"mtime":1622470733466,"results":"39","hashOfConfig":"36"},{"size":577,"mtime":1606848818546,"results":"40","hashOfConfig":"36"},{"size":7916,"mtime":1607956758851,"results":"41","hashOfConfig":"36"},{"size":11611,"mtime":1608481778243,"results":"42","hashOfConfig":"36"},{"size":5488,"mtime":1622129185902,"results":"43","hashOfConfig":"36"},{"size":785,"mtime":1606076399231,"results":"44","hashOfConfig":"36"},{"size":2098,"mtime":1606221424053,"results":"45","hashOfConfig":"36"},{"size":1323,"mtime":1607973650243,"results":"46","hashOfConfig":"36"},{"size":4327,"mtime":1607433371705,"results":"47","hashOfConfig":"36"},{"size":13387,"mtime":1606737295896,"results":"48","hashOfConfig":"36"},{"size":17328,"mtime":1622470886385,"results":"49","hashOfConfig":"36"},{"size":12614,"mtime":1622114859399,"results":"50","hashOfConfig":"36"},{"size":4349,"mtime":1622120996926,"results":"51","hashOfConfig":"36"},{"size":4246,"mtime":1622122997043,"results":"52","hashOfConfig":"36"},{"size":4269,"mtime":1622122989316,"results":"53","hashOfConfig":"36"},{"size":3211,"mtime":1622121028076,"results":"54","hashOfConfig":"36"},{"size":12694,"mtime":1622123381872,"results":"55","hashOfConfig":"36"},{"size":12410,"mtime":1622123440242,"results":"56","hashOfConfig":"36"},{"size":1940,"mtime":1622122904267,"results":"57","hashOfConfig":"36"},{"size":16335,"mtime":1622123313671,"results":"58","hashOfConfig":"36"},{"size":20618,"mtime":1622470812881,"results":"59","hashOfConfig":"36"},{"size":1598,"mtime":1607964743081,"results":"60","hashOfConfig":"36"},{"size":345,"mtime":1606076399382,"results":"61","hashOfConfig":"36"},{"size":1158,"mtime":1606076399253,"results":"62","hashOfConfig":"36"},{"size":411,"mtime":1606221119759,"results":"63","hashOfConfig":"36"},{"size":12401,"mtime":1607975977380,"results":"64","hashOfConfig":"36"},{"size":362,"mtime":1606158119788,"results":"65","hashOfConfig":"36"},{"size":16137,"mtime":1608481789905,"results":"66","hashOfConfig":"36"},{"size":12090,"mtime":1607973348727,"results":"67","hashOfConfig":"36"},{"size":597,"mtime":1606388632737,"results":"68","hashOfConfig":"36"},{"size":11651,"mtime":1608481745615,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"qm2kwn",{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Dev\\covinsights\\src\\components\\Insights\\ScenarioChristmas.js",["153","154","155","156","157","158","159","160","161","162","163","164"],"import React, {Component} from 'react';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass ScenarioChristmas extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={show:\"0\", showButton:true, showBilan:false}\r\n        this.bottomRef = React.createRef();\r\n    }\r\n\r\n    handleButton = () => {\r\n        if(this.state.show==\"0\"){\r\n            this.setState({show:\"1\"});\r\n        }\r\n        else if(this.state.show==\"1\"){\r\n            this.setState({show:\"2\"});\r\n        }\r\n        else if(this.state.show==\"2\"){\r\n            this.setState({show:\"3\", showButton:false});\r\n        }\r\n    }\r\n\r\n    goBack = () => {\r\n        if(this.state.show==\"1\"){\r\n            this.setState({show:\"0\"});\r\n        }\r\n        else if(this.state.show==\"2\"){\r\n            this.setState({show:\"1\"});\r\n        }\r\n        else if(this.state.show==\"3\"){\r\n            this.setState({show:\"2\", showBilan:false, showButton:true});\r\n        }\r\n    }\r\n\r\n    handleBilan = () => {\r\n        this.setState({showBilan:true});\r\n        this.bottomRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n    \r\n    box0 = () => {\r\n        return (\r\n            <div className=\"scenario_container\">\r\n                Dîners en famille de 5h, 6 personnes (2 âgées de 70+ ans)\r\n                <div className=\"arrow\">\r\n                    <ArrowDownwardIcon style={{ fontSize: 40 }}/>\r\n                </div>\r\n                <div className=\"scenario_bilan\" style={{color:\"#D82210\"}}>\r\n                2016 réanimations\r\n                </div>\r\n                <span style={{color:\"#D82210\"}}>(reconfinement inévitable)</span>\r\n            </div>       \r\n        )\r\n    }\r\n\r\n    box1 = () => {\r\n        return (\r\n            <div>\r\n            <div className=\"scenario_container\">\r\n                Dîners en famille de 5h, 6 personnes (2 âgées de 70+ ans).\r\n                <div style={{fontSize:\"1.5em\"}}>+</div>\r\n                <span className=\"boldOrBlue\">\r\n                Raccourcir le dîner à 3h maximum\r\n                </span>\r\n                <div className=\"arrow\">\r\n                    <ArrowDownwardIcon style={{ fontSize: 40 }}/>\r\n                </div>\r\n                <div className=\"scenario_bilan\" style={{color:\"orange\"}}>\r\n                1408 réanimations\r\n                </div>\r\n                (30% d'amélioration !)\r\n            </div>\r\n            </div>         \r\n        )\r\n    }\r\n\r\n    box2 = () => {\r\n        return (\r\n            <div>             \r\n            <div className=\"scenario_container\">\r\n                Dîners en famille de 5h, 6 personnes (2 âgées de 70+ ans).\r\n                <div style={{fontSize:\"1.5em\"}}>+</div>\r\n                Raccourcir le dîner à 3h maximum\r\n                <div style={{fontSize:\"1.5em\"}}>+</div>\r\n                <span className=\"boldOrBlue\">2/3 des gens font une quarantaine</span> <br/>\r\n                <span className=\"boldOrBlue\">de 3</span> (minimum) à <span className=\"boldOrBlue\">7 jours</span> (idéal) <br/>\r\n                <span className=\"boldOrBlue\">avant la soirée</span>\r\n                <div className=\"arrow\">\r\n                    <ArrowDownwardIcon style={{ fontSize: 40 }}/>\r\n                </div>\r\n                <div className=\"scenario_bilan\" style={{color:\"#F4CF02\"}}>\r\n                700 réanimations\r\n                </div>\r\n                (65% d'amélioration par rapport au scénario initial !)\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    box3 = () => {\r\n        return (\r\n            <div className=\"scenario_container\">\r\n                Dîners en famille de 5h, 6 personnes (2 âgées de 70+ ans).\r\n                <div style={{fontSize:\"1.5em\"}}>+</div>\r\n                Raccourcir le dîner à 3h maximum\r\n                <div style={{fontSize:\"1.5em\"}}>+</div>\r\n                2/3 des gens font une quarantaine <br/>\r\n                de 3 (minimum) à 7 jours (idéal) <br/>\r\n                avant la soirée\r\n\r\n                <div style={{fontSize:\"1.5em\"}}>+</div>\r\n                <span className=\"boldOrBlue\">\r\n                Ceux ne pouvant pas faire de quarantaine (travailleurs essentiels) <br/>\r\n                portent un masque\r\n                </span>\r\n                <div className=\"arrow\">\r\n                    <ArrowDownwardIcon style={{ fontSize: 40 }}/>\r\n                </div>\r\n                <div className=\"scenario_bilan\" style={{color:\"green\"}}>\r\n                200 réanimations\r\n                </div>\r\n                <span style={{color:\"green\"}}>(90% de réduction par rapport au scénario initial !)</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    bilan = () => {\r\n        return (\r\n            <div>\r\n            <div className=\"explanation_test\" style={{fontSize:\"1.2em\"}}>\r\n          De petits gestes peuvent sauver un grand nombre de vies, et éviter un reconfinement.\r\n          </div>\r\n          <div className=\"calculator_introduction\" style={{fontSize:\"1.2em\", textAlign:\"center\"}}>\r\n            <ul style={{listStylePosition: 'inside', margin:'15px'}}>\r\n                <li>Raccourcir la soirée</li>\r\n                <li>Faire une quarantaine de 3 à 7 jours avant la fête</li>\r\n                <li>Porter un masque pendant la soirée.</li>\r\n            </ul>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    backButton = () => {\r\n        return (\r\n        <div style={{display:'inline', marginLeft:\"15px\"}}>\r\n            <Button variant=\"contained\" onClick={this.goBack}>retour</Button>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    button = () => {\r\n        return (\r\n            <div style={{display:'inline'}}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleButton}>améliorer</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    bilanButton = () => {\r\n        return (\r\n            <div style={{display:'inline'}}>\r\n                <Button variant=\"contained\" onClick={this.handleBilan}>bilan</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n            <div className=\"calculator_presentation\">\r\n            <div className=\"calculator_introduction\">\r\n            <span style={{fontWeight:\"bold\", fontSize:'1.4em'}}>Noël : comment éviter un désastre sanitaire ?</span>\r\n                <br/>\r\n                <div style={{marginTop:\"1rem\", textAlign:\"center\"}} >\r\n                Nous estimons le bilan des fêtes de fin d'année 2020 (sur les semaines suivantes), avec la prévalence de Novembre, selon divers scénarios. <br/>\r\n                <span style={{color:\"green\"}}>Rétrospectivement, le scénario correspondant le mieux aux données observées est le numéro 3.</span>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            \r\n            {(this.state.show==\"0\") && this.box0()}\r\n            \r\n            {(this.state.show==\"1\") && this.box1()}\r\n\r\n            {(this.state.show==\"2\") && this.box2()}\r\n\r\n            {(this.state.show==\"3\") && this.box3()}\r\n            \r\n            <div style={{textAlign:\"center\", paddingTop:\"1em\"}}>\r\n                {this.state.showButton && this.button()}\r\n                {(!this.state.showBilan && this.state.show==\"3\") && this.bilanButton()}\r\n\r\n                {(this.state.show!=\"0\") && this.backButton()}\r\n            </div>\r\n\r\n            {this.state.showBilan && this.bilan()}\r\n\r\n            <div ref={this.bottomRef}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScenarioChristmas;",["165","166"],"D:\\Dev\\covinsights\\src\\pages\\insights.js",["167","168","169"],"import React, {Component, lazy, Suspense} from 'react';\r\nimport { Helmet } from 'react-helmet'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst load = (Component) => (props) => {\r\n  return (\r\n  <Suspense fallback={<CircularProgress />}>\r\n    <Component {...props}/>\r\n  </Suspense>\r\n  )\r\n}\r\n\r\nconst ComparisonRisks = load(lazy( () =>  import('../components/Insights/ComparisonRisks.js')));\r\nconst ScenarioChristmas = load(lazy( () =>  import('../components/Insights/ScenarioChristmas.js')));\r\nconst ProfileExamples = load(lazy( () =>  import('../components/Insights/ProfileExamples.js')));\r\n\r\nclass Insights extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={current:\"profiles\", page: ()=><ProfileExamples/>}\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({current:event.target.value});\r\n    if(event.target.value==\"graph\"){\r\n      this.setState({page:()=><ComparisonRisks/>});\r\n    }\r\n    if(event.target.value==\"scenario\"){\r\n      this.setState({page:()=><ScenarioChristmas/>})\r\n    }\r\n    if(event.target.value==\"profiles\"){\r\n      this.setState({page:()=><ProfileExamples/>})\r\n    }\r\n\r\n  }\r\n\r\n  render =() => {\r\n    return (\r\n      <div className=\"calculator_container\">\r\n      <Helmet>\r\n        <title>\r\n          Visualisation\r\n        </title>\r\n      </Helmet>        \r\n      <div className=\"calculator_presentation\">\r\n      <Select\r\n          value={this.state.current}\r\n          onChange={this.handleChange}\r\n        >\r\n          <MenuItem value=\"graph\">\r\n          Activités classées par risque\r\n          </MenuItem>\r\n          <MenuItem value=\"scenario\">Fêtes en famille</MenuItem>\r\n          <MenuItem value=\"profiles\">Exemples de profils</MenuItem>\r\n        </Select>\r\n      </div>\r\n      {this.state.page()}\r\n      </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default Insights;",["170","171"],"D:\\Dev\\covinsights\\src\\components\\Insights\\ProfileExamples.js",[],"D:\\Dev\\covinsights\\src\\css\\GlobalStyle.js",[],"D:\\Dev\\covinsights\\src\\index.js",[],"D:\\Dev\\covinsights\\src\\components\\Navbar.js",[],["172","173"],"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskCalculatorEng.js",["174","175","176"],"import React, { Component, lazy, Suspense } from \"react\"\r\nimport RiskFormEng from \"./RiskFormEng.js\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Chip from '@material-ui/core/Chip';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { IconButton, Button } from \"@material-ui/core\"\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport list_activities from '../constants/activitiesEng.js';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport { Person } from \"./NewMath.js\"\r\nimport { NavLink } from 'react-router-dom';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport * as Scroll from 'react-scroll';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst load = (Component) => (props) => {\r\n  return (\r\n  <Suspense fallback={<CircularProgress />}>\r\n    <Component {...props}/>\r\n  </Suspense>\r\n  )\r\n}\r\n\r\nconst Evolution = load(lazy( () =>  import('./Evolution.js')));\r\n\r\n\r\n/*\r\n***** TODO *****\r\nFaire que le globalRisk soit envoyé non pas au calcul, mais quand on appuie\r\nsur un bouton \"what does it mean for a family reunion\"\r\n(qui link du même coup au family reunion)\r\n\r\n***** END TODO *****\r\n*/\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n});\r\n\r\nclass RiskCalculatorEng extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {blockActivities: [], activities: {}, nextId:0, risk:0, toggleResult:false, person: new Person(),\r\n          evolution:()=><Evolution risk={0}/>, alpha:0.2, gamma:0.33}\r\n    this.defaultActivityArgs = {\r\n      name:\"Activité\",\r\n      wearMask: false,\r\n      duration:60,\r\n      nbPeople: 1,\r\n      nbMasked: 0,\r\n      location:\"indoors\",\r\n      talking: \"normal\",\r\n      distance: \"normal\",\r\n      riskProfile: \"average\",\r\n      showForm:false,\r\n    }\r\n    this.refResult = React.createRef();\r\n  }\r\n\r\n  updateRisk = (id, acti) => {\r\n    var tabActis = this.state.activities;\r\n    tabActis[id] =acti;\r\n    this.setState({activities:tabActis});\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if(this.state.toggleResult)\r\n    {\r\n      this.refResult.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }\r\n\r\n  getRisk = () => {\r\n    // Updates the risk, and resets and updates the Person\r\n    var p = this.state.person;\r\n    p.clearActivityList();\r\n    var result = 0;\r\n    var mySum=0;\r\n    for (var key in this.state.activities)\r\n    {\r\n      p.addActivity(this.state.activities[key]);\r\n    }\r\n    result = p.getRisk(); // The new risk\r\n\r\n    this.setState({risk:result, person:p, evolution:() => {return (<Evolution riskList={p.activityList} alpha={this.state.alpha} gamma={this.state.gamma} /> )}});\r\n    this.setState({toggleResult:true});\r\n    // Updating the global value of the risk in Navbar\r\n    // this.props.changeGlobalRisk(result);\r\n  }\r\n\r\n  toggleResult = () => {\r\n    this.setState({toggleResult:true});\r\n  }\r\n\r\n  toggleOffResult = () => {\r\n    this.setState({toggleResult:false});\r\n  }\r\n  \r\n  reset = (event) => {\r\n    this.setState({alpha:0.2, gamma:1/3});\r\n  }\r\n\r\n  // Affiche le résultat (appelé sur clic de calculer mon risque)\r\n  // Contient le lien vers le simulateur et lui transmet le risque.\r\n  showResult = () => {\r\n    const riskWeek = Math.round((this.state.risk * 10000 + Number.EPSILON)) / 100;\r\n    var riskYear = 1 - Math.pow((1-this.state.risk), 12); // Over three months\r\n    riskYear = Math.round((riskYear * 10000 + Number.EPSILON)) / 100;\r\n    return (\r\n      <div id=\"calculator_result\">\r\n      <div className=\"calculator_risk_display\" ref={this.refResult}>\r\n        <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n              <span style={{fontWeight:\"bold\"}}>Risk of catching the virus :</span> <br />\r\n              <div className=\"visible_except_mobile\">\r\n              <Grid container spacing={3} justify=\"center\">\r\n                  <Grid item xs={4}>\r\n                  <div className=\"result_cases\">\r\n                      <div className=\"result_cases_top\">\r\n                          {riskWeek}%\r\n                      </div>\r\n                      <div className=\"result_cases_bottom\">\r\n                          over a week\r\n                      </div>\r\n                  </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                  <div className=\"result_cases\">\r\n                      <div className=\"result_cases_top\">\r\n                      {riskYear}%\r\n                      </div>\r\n                      <div className=\"result_cases_bottom\">\r\n                      over three months\r\n                      </div>\r\n                  </div>\r\n                  </Grid>\r\n              </Grid>\r\n              </div>\r\n              <div className=\"visible_mobile_only\">\r\n              <Grid container spacing={1} justify=\"center\">\r\n                  <Grid item xs={6}>\r\n                  <div className=\"result_cases\">\r\n                      <div className=\"result_cases_top\">\r\n                          {riskWeek}%\r\n                      </div>\r\n                      <div className=\"result_cases_bottom\">\r\n                          over a week\r\n                      </div>\r\n                  </div>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                  <div className=\"result_cases\">\r\n                      <div className=\"result_cases_top\">\r\n                      {riskYear}%\r\n                      </div>\r\n                      <div className=\"result_cases_bottom\">\r\n                      over three months\r\n                      </div>\r\n                  </div>\r\n                  </Grid>\r\n              </Grid>\r\n              </div>\r\n          </Box>\r\n        </div>\r\n    <div id=\"text_graph_result\">\r\n    Evolution of the epidemy over one month if everyone had the same risk profile each week (numbers in thousands) :\r\n    </div>\r\n    {/* On suppose que les activités correspondent environ à la durée d'incubation (1 semaine en l'occurence) */}\r\n    <div id='graph_result'>{this.state.evolution()}</div>\r\n    <div id=\"button_to_family\" >\r\n      <NavLink to=\"/familyGathering/\">\r\n      <Fab\r\n      onClick={() => {this.props.changeGlobalRisk(this.state.risk);}}\r\n      variant=\"extended\"\r\n      color=\"primary\"\r\n    >\r\n      <GroupAddIcon />\r\n      <Box p={2}>Compute the risk <br/>of a family gathering</Box>\r\n    </Fab>\r\n    </NavLink>\r\n    </div>\r\n    <div className=\"explanation_test\">\r\n      Numbers are computed on average for France, and may not correspond to your local situation. The details can be found in the \"About\" section.\r\n    </div>\r\n  </div>\r\n    )\r\n  }\r\n\r\n  addActivity = (args) => {\r\n    const myId = [this.state.nextId]\r\n    const widget = (\r\n      <Grid item className=\"activity_list\">\r\n          <RiskFormEng id={myId} updateRisk={this.updateRisk} edit={this.toggleOffResult} {...args}>\r\n              <div className=\"delete_button\">\r\n              <Tooltip title=\"Deleter\">\r\n              <IconButton aria-label=\"delete\" size=\"small\" onClick={() => this.clear(myId[0])}>\r\n              <DeleteIcon />\r\n              </IconButton>\r\n              </Tooltip>\r\n              </div>\r\n          </RiskFormEng>\r\n      </Grid>\r\n    )\r\n    this.setState({ nextId: this.state.nextId + 1 })\r\n    var widgets = this.state.blockActivities.slice()\r\n    widgets.push(widget)\r\n    this.setState({ blockActivities: widgets })\r\n  }\r\n\r\n  // Premade activities are already filled.\r\n  addPremadeActivity = (args) => {\r\n    const myId = [this.state.nextId]\r\n    const widget = (\r\n      <Grid item className=\"activity_list\">\r\n          <RiskFormEng id={myId} showForm={false} updateRisk={this.updateRisk} edit={this.toggleOffResult} {...args}>\r\n              <div className=\"delete_button\">\r\n              <Tooltip title=\"Supprimer\">\r\n              <IconButton z-index={5000} aria-label=\"delete\" size=\"small\" onClick={() => {this.clear(myId[0]); this.toggleOffResult()}}>\r\n              <DeleteIcon />\r\n              </IconButton>\r\n              </Tooltip>\r\n              </div>\r\n          </RiskFormEng>\r\n      </Grid>\r\n    )\r\n    this.setState({ nextId: this.state.nextId + 1 })\r\n    var widgets = this.state.blockActivities.slice()\r\n    widgets.push(widget)\r\n    this.setState({ blockActivities: widgets })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    //this.addActivity(this.defaultActivityArgs);\r\n  }\r\n\r\n  clearAll = () => {\r\n    this.setState({ nextId: 0, blockActivities: [], activities: {}, risk:0, toggleResult:false});\r\n    var p = this.state.person;\r\n    p.clearActivityList();\r\n    this.setState({person:p});\r\n  }\r\n\r\n  clear = id => {\r\n    var widgets = this.state.blockActivities.slice();\r\n    var myActis = this.state.activities;\r\n    widgets[id] = <div />\r\n    delete myActis[id];\r\n    this.setState({ blockActivities: widgets, activities:myActis})\r\n  }\r\n\r\n  generatePremadeCards = () => {\r\n    const { classes } = this.props;\r\n    // sort premade cards\r\n    list_activities.sort((a, b) => (a.name > b.name) ? 1 : -1);\r\n\r\n    return (\r\n      <div id=\"premade_cards\" className={classes.root}>\r\n          {list_activities.map((item, index) => {\r\n            return (\r\n                  <Chip icon={<FaceIcon />} label={item.name} clickable onClick={() => {this.addPremadeActivity(item); this.toggleOffResult()}} />\r\n            )\r\n          })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"risk_calculator\">\r\n        <Grid container spacing={1} justify=\"center\" alignitems=\"center\">\r\n          {this.state.blockActivities}\r\n        </Grid>\r\n        <div className=\"addActivity_buttons\">\r\n        <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n          <Grid container spacing={1}   alignItems=\"center\" justify=\"center\">\r\n            <Grid item>\r\n              <Fab\r\n                onClick={() => {this.addActivity(this.defaultActivityArgs); this.toggleOffResult();}}\r\n                color=\"primary\"\r\n                variant=\"extended\"\r\n              >\r\n                <AddIcon />\r\n                <Box p=\"0.5rem\">New activity</Box>\r\n              </Fab>\r\n            </Grid>\r\n            <Grid item>\r\n              <Fab onClick={() => {this.clearAll(); this.toggleOffResult();}} color=\"secondary\" variant=\"extended\">\r\n                <CachedIcon />\r\n                <Box p=\"0.5rem\">Reset</Box>\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        </div>\r\n        <div className=\"addActivity_buttons\">\r\n        <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n          <Grid container spacing={1}   alignItems=\"center\" justify=\"center\">\r\n            <Grid item>\r\n              <Fab\r\n                onClick={() => {this.getRisk(); this.toggleResult();}}\r\n                variant=\"extended\"\r\n              >\r\n                <TouchAppIcon />\r\n                <Box p=\"0.5rem\">Compute my risk</Box>\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        </div>\r\n        <div id=\"premade_activities\">\r\n          <h4>Sample activities (click to add):</h4>\r\n            {this.generatePremadeCards()}\r\n        </div>\r\n\r\n        <div id=\"calculator-result\" ref={this.refResult}>\r\n        {this.state.toggleResult && this.showResult()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RiskCalculatorEng);\r\n",["177","178"],"D:\\Dev\\covinsights\\src\\components\\constants\\activities.js",["179"],"D:\\Dev\\covinsights\\src\\css\\ContactFormWrapper.js",[],"D:\\Dev\\covinsights\\src\\css\\NavbarWrapper.js",[],"D:\\Dev\\covinsights\\src\\pages\\familyGathering.js",[],"D:\\Dev\\covinsights\\src\\components\\Calculator\\Evolution.js",[],["180","181"],"D:\\Dev\\covinsights\\src\\components\\Calculator\\MyMath.js",["182"],"D:\\Dev\\covinsights\\src\\pages\\WhitePaperEng.js",["183"],"import React, {Component} from \"react\"\r\nimport { Helmet } from 'react-helmet'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport seir_image from '../images/SEIR.png';\r\nimport List from '@material-ui/core/List';\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport logo_shyrka from '../images/logo_shyrka.png'\r\n\r\nfunction createData(name, risk) {\r\n  return { name, risk };\r\n}\r\n\r\nconst rows = [\r\n  createData('I am wearing a surgical mask', '/2'),\r\n  createData('The other person is wearing a surgical mask', '/4'),\r\n  createData('Being outdoors', '/20'),\r\n  createData('Being 2m apart', '/2'),\r\n  createData('Every additional 1m', '/2'),\r\n  createData('Loud talking (singing, talking above music)', 'x5'),\r\n  createData('Nobody is talking (for example in a train)', '/5'),\r\n  createData('Being in a train with air filtration, or a moving car with windows opened', '/4'),\r\n];\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nclass WhitePaperEng extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.refRisque = React.createRef();\r\n    this.refImpact = React.createRef();\r\n    this.refFamily = React.createRef();\r\n  }\r\n\r\n  goToRisk = () => {\r\n    this.refRisque.current.scrollIntoView({behavior: \"smooth\"});\r\n  }\r\n\r\n  goToImpact = () => {\r\n    this.refImpact.current.scrollIntoView({behavior: \"smooth\"});\r\n  }\r\n\r\n  goToFamily = () => {\r\n    this.refFamily.current.scrollIntoView({behavior: \"smooth\"});\r\n  }\r\n\r\n  render =() => {\r\n    return (\r\n    <div className=\"calculator_container\">\r\n        <Helmet>\r\n        <title>\r\n            Covinsights\r\n        </title>\r\n        </Helmet>        \r\n    <div className=\"whitepaper\">\r\n        <h2>Presentation</h2>\r\n        <p>\r\n          With Christmas drawing near, we all want to spend quality time with our family, without there being a sanitary catastrophe. How can we plan\r\n          our gatherings to limit the risk as much as we can, given the activities that are imposed to us such as work, public transportation, or others ?\r\n        </p>\r\n            It is to answer that question that we built this website. It contains several tools :\r\n            <ul style={{listStylePosition: 'inside', margin:'15px'}}>\r\n            <li>A <span style={{fontWeight:\"500\"}}>risk calculator</span>, to evaluate the probability of catching the virus depending on the activities one did;</li>\r\n            <li style={{marginTop:'7px'}}>A<span style={{fontWeight:\"500\"}}> simulator</span>, showing how the epidemy would advance if everyone had the same risk as oneself;</li>\r\n            <li style={{marginTop:'7px'}}>A<span style={{fontWeight:\"500\"}}> family gathering evaluator</span>, calculating the risk it represents given the age and risk profile of the participants.</li>\r\n            </ul>\r\n        <p>\r\n            We believe that information is the key to success in the fight against a pandemic. By giving everyone the means to adjust their behavior to the\r\n            virus circulation, it is possible to maintain the epidemic under control, so that extreme sanitary measures will only be a last resort, instead of a regular\r\n            necessity as it is right now.\r\n        </p>\r\n        <div className=\"disclaimer\">\r\n            <h3>Disclaimer</h3>\r\n            This website was not peer-reviewed. It only represents the author's best estimations given the knowledge at hand, some of which are not enough to guarantee the\r\n            precision and fiability of the numbers.\r\n            <br/> <br />\r\n            A small probability does not mean the absence of risk. The authors recommend precaution above all, and cannot be held responsible for any consequence of actions\r\n            made by users of this website.\r\n            <br/> <br/>\r\n            The probabilities are computed for the whole countrie, and so are very general. They must be carefully adjusted to each situation before being applied to\r\n            a particular case.\r\n            <br/><br/>\r\n            This website is not a primary information source about COVID.\r\n            Do not use the tools from this website to take medical decisions. Keep following government recommendation.\r\n            </div>\r\n        <br />\r\n        <h2>Table of content</h2>\r\n        <List disablePadding={true}>\r\n          <ListItem button={true} onClick={() => this.goToRisk()}>1. Risk computation</ListItem>\r\n          <ListItem button={true} onClick={() => this.goToImpact()}>2. Impact on the epidemic</ListItem>\r\n          <ListItem button={true} onClick={() => this.goToFamily()}>3. Family gathering</ListItem>\r\n        </List>\r\n        <br />\r\n        <h2 ref={this.refRisque}>1. Risk computation</h2>\r\n        <p>\r\n            We use the algorithm for risk computation that was developed by the team of <a href=\"http://microcovid.org/paper/\">Microcovid</a> as the basis for the rest of our work.\r\n            For more details and links to the scientific sources on which their numbers are based, we highly encourage you to visit their website. They have accomplished some\r\n            truly amazing work by compiling a lot of existing literature on the topic. In this section, we will summarize the computation method and the numbers used?\r\n        </p>\r\n        We can divide the risk of an activity in two pieces : the transmission risk during the activity, and the risk profile of the person with whom we practice it:\r\n        <div className=\"visible_except_mobile\">\r\n          <div className=\"Math\">\r\n            P(B contaminates A) = P(B contaminates A | B has covid) x P(B has covid)\r\n          </div>\r\n        </div>\r\n        <div className=\"visible_mobile_only\">\r\n        <div className=\"Math\">\r\n          P(B contaminates A) = P(B contaminates A | B has covid) x P(B has covid)\r\n          </div>\r\n        </div>\r\n        <h3>Transmission risk</h3>\r\n        We start with an estimation in the simplest case :\r\n        <div className=\"center_gray\">\r\n          Risk of transmission during a 1h, unmasked and indoors conversation with someone having covid : 6%\r\n        </div>\r\n        We then multiply this probability by several modifiers (see <a href=\"http://microcovid.org/paper/\">Microcovid</a> for more details as well as the sources ) :\r\n        <br /> <br />\r\n          <TableContainer component={Paper}>\r\n          <Table size=\"small\" aria-label=\"a dense table\">\r\n            <TableHead>\r\n              <StyledTableRow>\r\n                <StyledTableCell>Activity modification</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Risk modification</StyledTableCell>\r\n              </StyledTableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <StyledTableRow key={row.name}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{row.risk}</StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n      <br />\r\n\r\n    <h3>Risk profile of the person</h3>\r\n    To get the total risk, we then need to multiply the transmission risk by the probability that the other person has covid.\r\n    To compute this, we use the prevalence of the virus (i.e. the proportion of the population that is currently infected) as a probability that a random person\r\n    has covid. We then adjust this probability by defining several risk profiles : frontline workers and people who socialize a lot (x3), and people who work from home\r\n    and do not socialize much (/3).\r\n    <p>\r\n      To compute the prevalence, we use\r\n      <a href=\"https://www.data.gouv.fr/en/datasets/donnees-hospitalieres-relatives-a-lepidemie-de-covid-19/\"> government data</a> for the number of hospitalizations and ICUs.\r\n      We then use <a href='https://hal-pasteur.archives-ouvertes.fr/pasteur-02548181'>the analysis from Institut Pasteur</a> (which give\r\n      for each age class the probability of being hospitalized or going in ICU), to estimate the number of current cases. We then just need to divide by the total population.\r\n      An example of calculation can be found <a href=\"https://colab.research.google.com/drive/1P5Ua-gSNlUFDnI_7GjwCN0ZT-kxcWlpL?usp=sharing\"> here</a>.\r\n    </p>\r\n    To sum up, the risk over 1h with 1 person is :\r\n    <div className=\"visible_except_mobile\">\r\n        <div className=\"Math\">\r\n            [Base risk] x [modification factors] x [B's risk profile] x [Prevalence] \r\n        </div>\r\n    </div>\r\n    <div className=\"visible_mobile_only\">\r\n        <div className=\"Math\">\r\n          [Base risk] x [modification factors] x [B's risk profile] x [Prevalence] \r\n        </div>\r\n    </div>\r\n\r\n    <br/>\r\n    <h3>Duration and number of people</h3>\r\n    All of this gives the transmission risk for 1h of the activity. To get the risk over several hours, we compute the probability of being contaminated during\r\n    at least one of these hours. That means the opposite of not being contaminated in any of these hours. If the risk over 1h is p, then the one over n hours will be :\r\n    <div className=\"visible_except_mobile\">\r\n        <div className=\"Math\">\r\n            P(contamination during n hours) = 1 - (1-p)<sup>n</sup>\r\n        </div>\r\n    </div>\r\n    <div className=\"visible_mobile_only\">\r\n        <div className=\"Math\">\r\n        P(contamination during n hours) = 1 - (1-p)<sup>n</sup>\r\n        </div>\r\n    </div>\r\n    <p>\r\n    We cap the risk for a given person over a single week to 50%, which corresponds to the risk of being contaminated by a household partner having covid in this duration.\r\n    </p>\r\n    <p>\r\n    When several people take part to an activity, we compute the probability of tranmission for each one, then the probability of being contaminated by at least one of \r\n    these people, following the same calculation as above. If the probability of contamination by one person is P, then for N people :\r\n    </p>\r\n    <div className=\"visible_except_mobile\">\r\n        <div className=\"Math\">\r\n            P(contamination with N people) = 1 - (1-P)<sup>N</sup>\r\n        </div>\r\n    </div>\r\n    <div className=\"visible_mobile_only\">\r\n        <div className=\"Math\">\r\n            P(contamination with N people) = 1 - (1-P)<sup>N</sup>\r\n        </div>\r\n    </div>\r\n    <p>\r\n    Note that this is the major difference between our algorithm and Microcovid's, which add up the risks related to each hour and person. It is an approximation\r\n    that work well for small risks, but usually overestimate the result otherwise.\r\n    </p>\r\n    <br />\r\n    <h2 ref={this.refImpact}>2. Impact on the epidemic</h2>\r\n    <p>\r\n    The computation above allows us to estimate the individual risk, which is the probability of being contaminated given one's activities over the week.\r\n    However, this does not indicate the impact over the epidemic as a whole : do we contribute to accelerate, or slow down, the circulation of the virus ?\r\n    </p>\r\n    <p>\r\n    It is extremely hard to make predictions about the evolution of the epidemic in a real scenario (some of us worked on that topic, and can confirm that), because of the number\r\n    of parameters to take into account, as well as the uncertainty, that lead to large confidence intervals.\r\n    </p>\r\n    <p>\r\n    However, it is possible to answer the question above by making the following simplification :\r\n    </p>\r\n    <div className=\"center_gray\">\r\n        How would the epidemic advance if everyone had the same risk profile as me ?\r\n    </div>\r\n    This simplification allows us to compute the evolution of the epidemic quite easily, by using a variant of\r\n    the <a href=\"https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology\">SEIR</a> model. We assume that there are\r\n    no multiple infections (or a negligeable number), and we pose :\r\n    <ul style={{listStylePosition: 'inside', margin:'15px'}}>\r\n      <li> S(t) the number of susceptible people at time t (meaning that can be infected, and are not immune);\r\n      </li>\r\n      <li style={{marginTop:'5px'}}>E(t) the number of exposed people at time t (infected but not yet contagious);</li>\r\n      <li style={{marginTop:'5px'}}>I(t) the number of infected people;</li>\r\n      <li style={{marginTop:'5px'}}>R(t) the number of people having recovered and being immune.</li>\r\n    </ul>\r\n    <img src={seir_image} alt=\"SEIR\" className=\"seir_image\" />\r\n    <p>\r\n    As in the SEIR model, the transitions from the E to I State happen at a constant rate (respectively alpha and gamma, whose inverse are\r\n    the incubation period and how long a person remains contagious). We estimated the incubation period to 5 days\r\n    (source : <a href=\"https://www.acpjournals.org/doi/full/10.7326/M20-0504\">[Lauer et Al]</a>,\r\n    <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7157951/\">[Saghazadeh et Al.]</a>), and the infection window (average time between contamination and isolation) \r\n    to 2.9 days (source : <a href=\"https://www.sciencedirect.com/science/article/pii/S1473309920301444#bib15\">[Kucharski et Al.]</a>).\r\n\r\n     However, we compute the number of contaminated in a different way :\r\n    </p>\r\n    <div className=\"visible_except_mobile\">\r\n        <div className=\"Math\">\r\n            E(t+1)-E(t) = P(S<sub>1</sub> contaminé) + ... + P(S<sub>m</sub> contaminé)\r\n        </div>\r\n    </div>\r\n    <div className=\"visible_mobile_only\">\r\n        <div className=\"Math\">\r\n            E(t+1)-E(t) = P(S<sub>1</sub> contaminé) + ... + P(S<sub>m</sub> contaminé)\r\n        </div>\r\n    </div>\r\n    Where the probability of contamination for each person is calculated following the formula from last section, using a prevalence of I(t)/N, meaning the probability that\r\n    any random person has the virus at time t.\r\n    <br/>\r\n    Note that contrary to the SEIR model, as soon as an activity involves more than one person or a duration of more than one hour, the risk of each individual is not proportional\r\n    to the prevalence.\r\n\r\n    <br /><br/>\r\n    <h2 ref={this.refFamily}>3. Family gatherings</h2>\r\n    <p>\r\n    One of the most important stakes of the epidemic is Christmas. Old people are especially vulnerable and are the most susceptible to be hospitalized and dying of the virus,\r\n    whereas young adults are the one that socialize the most, and so take the most risks. Hence, family gathering, where by natures different age groups meet, may have\r\n    catastrophic consequences if they are not carefully planned.\r\n    </p>\r\n    <p>\r\n    We used the risk computation algorithm to create a simulator for family gatherings. By entering some activities in the calculator, as well as participants to the reunion,\r\n    it estimates the probability that one of them develops a grave form, and computes the outcome for the whole country.\r\n    </p>\r\n    <p>\r\n      We used the  <a href='https://hal-pasteur.archives-ouvertes.fr/pasteur-02548181'>estimations from Institut Pasteur</a> to compute the probability\r\n      of hospitalization, ICU and death once contaminated, for each person in the reunion according to their age.\r\n    </p>\r\n    <p>\r\n      We then estimated the number of family reunion. We start with the french population (66 millions), subtract the percentage of already immune people (we computed\r\n      that to be around 10 to 14% from the number of ICUs, and this is confirmed by Institut Pasteur), to get around 56 Millions. Among these, around three third will\r\n      attend at least one family gathering, which gives 42 millions.\r\n    </p>\r\n    <p>\r\n      Finally, we estimate the size of a family gathering to 6 (following government rule), which gives 7 million gatherings.\r\n      This allows us to compute the outcome for the whole country.\r\n    </p>\r\n    <h3>About</h3>\r\n    Website created under the direction of <a href=\"https://www.linkedin.com/in/raphaelettedgui/\">Raphaël Ettedgui</a> (Ecole Polytechnique, PhD at University Paris-Dauphine). The source code is available on\r\n    <a href=\"https://github.com/RaphaelEttedgui/covinsights-website\">GitHub</a>\r\n    <br /><br />\r\n\r\n    Illustrations by <a href=\"https://shyrka-animation-2d.jimdosite.com/\">Shyrka</a>. Find out more by visiting her page !\r\n    <div style={{width:\"100%\", marginTop:'1em', alignItems:\"center\"}}>\r\n      <div className=\"centered\">\r\n      <a href=\"https://shyrka-animation-2d.jimdosite.com/\"><img src={logo_shyrka} alt=\"logo shyrka\" style={{height:'100%', width:'100%'}}/> </a>\r\n      </div>\r\n    </div>\r\n\r\n    </div>\r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default WhitePaperEng;","D:\\Dev\\covinsights\\src\\components\\Calculator\\NewMath.js",["184","185","186","187"],"D:\\Dev\\covinsights\\src\\components\\Insights\\SuzieCard.js",["188","189"],"import React, {Component } from \"react\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Listitem from \"@material-ui/core/ListItem\"\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {ReactComponent as Suzy} from \"../../images/safe_suzy.svg\"\r\nimport Evolution from \"../Calculator/BasicEvolution.js\"\r\nimport { BasicUniverse } from \"../Calculator/NewMath\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst styles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 80,\r\n  },\r\n    root: {\r\n    display: 'flex',\r\n    pt: \"3rem\",\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n});\r\n\r\nconst propsForDisplay = {\r\n  bgcolor: \"#F6F6F6\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"80%\", height: \"100%\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  p: \"1rem\",\r\n  position:\"relative\",\r\n  bottom:\"2rem\"\r\n}\r\n\r\nclass ProfileCard extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            show: \"activités\",\r\n            value: 0,\r\n            universe: new BasicUniverse(),\r\n            riskFactor: 0.174,\r\n            evolution:()=><Evolution risk={0.04}/>\r\n          }\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n      if(newValue==0){\r\n        this.setState({show:\"activités\", value:newValue});\r\n      }\r\n      else{\r\n        this.setState({show:\"impact\", value:newValue})\r\n      }\r\n    }\r\n\r\n    generateActivities = () => {\r\n      return(\r\n        <div>\r\n        <List>\r\n          <Listitem>Balade dans le parc (x4)</Listitem>\r\n          <Listitem>Déjeuner à 2 (extérieur, avec masques, 1h) (x3)</Listitem>\r\n          <Listitem>Dîner à 2 (intérieur, sans masque, 2h, ami prudent)</Listitem>\r\n          <Listitem>Danse solo (extérieur, avec masques, 1h) avec 5 personnes</Listitem>\r\n          <Listitem>Visite au musée (avec masques, 2h)</Listitem>\r\n          <Listitem>Faire ses courses (30mn, avec masque)</Listitem>\r\n          <Listitem>Nourriture à emporter (x2)</Listitem>\r\n      </List>\r\n      </div>\r\n      )\r\n    }\r\n\r\n    generateImpact = () => {\r\n      return(\r\n        <div style={{marginTop:\"1em\"}}>\r\n          <Evolution riskFactor={this.state.riskFactor}/>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  showProfile = () => {\r\n    var risk = this.state.riskFactor * this.state.universe.prevalence;\r\n    return (\r\n      <div className=\"profile_container\">\r\n      <Box borderRadius={16} {...propsForDisplay}>\r\n      <div style={{textAlign:\"center\", marginBottom:'0.5em', fontSize:'1.5em', fontWeight:\"500\", borderStyle:\"solid\", borderWidth:\"thin\", padding:\"0.5em\"}}>\r\n        Safe Suzie\r\n        </div>\r\n          <Grid container spacing={1} justify=\"center\" style={{height:\"70\"}}>\r\n            <Grid item xs={12} sm={4}>\r\n            <div className=\"svg_container\">\r\n                <svg style={{width:\"100%\", height:\"100%\",display:\"block\", margin:\"auto\"}}>\r\n                  <Suzy style={{display:\"block\", margin:\"auto\", height:\"90%\"}}/>\r\n                </svg>\r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n                <div style={{textAlign:\"center\", fontWeight:\"500\"}}>\r\n                <Tabs value={this.state.value} onChange={this.handleChange} indicatorColor=\"primary\" aria-label=\"simple tabs example\">\r\n                  <Tab label=\"activités\" />\r\n                  <Tab label=\"impact\" />\r\n                </Tabs>\r\n                </div>\r\n               {(this.state.show==\"activités\") ? this.generateActivities() : this.generateImpact()}\r\n            </Grid>\r\n          </Grid>\r\n\r\n        <div style={{marginTop:\"1em\", fontSize:\"1.4em\", fontWeight:\"500\", textAlign:\"center\", width:\"100%\"}}>\r\n        Risque total : {Math.round((risk * 10000 + Number.EPSILON)) / 100} % par semaine, {Math.round(((1-Math.pow(1-risk, 12)) * 10000 + Number.EPSILON)) / 100} % sur 3 mois.\r\n        </div>\r\n\r\n        \r\n      </Box>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"risk_calculator\">\r\n          {this.showProfile()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ProfileCard);\r\n","D:\\Dev\\covinsights\\src\\components\\Insights\\DonaldCard.js",["190","191"],"D:\\Dev\\covinsights\\src\\components\\Insights\\MeiLinhCard.js",["192","193"],"import React, {Component } from \"react\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport List from \"@material-ui/core/List\"\r\nimport Listitem from \"@material-ui/core/ListItem\"\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {ReactComponent as ML} from \"../../images/limit_mai_linh.svg\"\r\nimport Evolution from \"../Calculator/BasicEvolution.js\"\r\nimport { BasicUniverse } from \"../Calculator/NewMath\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 80,\r\n  },\r\n    root: {\r\n    display: 'flex',\r\n    pt: \"3rem\",\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n});\r\n\r\nconst propsForDisplay = {\r\n  bgcolor: \"#F6F6F6\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"80%\", height: \"100%\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  p: \"1rem\",\r\n  position:\"relative\",\r\n  bottom:\"2rem\"\r\n}\r\n\r\nclass ProfileCard extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n          show: \"activités\",\r\n          value: 0,\r\n          universe: new BasicUniverse(),\r\n          riskFactor: 0.435,\r\n          evolution:()=><Evolution risk={0.04}/>\r\n          }\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n      if(newValue==0){\r\n        this.setState({show:\"activités\", value:newValue});\r\n      }\r\n      else{\r\n        this.setState({show:\"impact\", value:newValue})\r\n      }\r\n    }\r\n\r\n  generateActivities = () => {\r\n    return(\r\n      <div>\r\n      <List>\r\n        <Listitem>Théâtre (intérieur, avec masque) (x1)</Listitem>\r\n        <Listitem>Repas à 5 avec ses collègues (intérieur, avec masques) (x1)</Listitem>\r\n        <Listitem>Dîner à 2 (intérieur, sans masque, 2h, ami prudent)</Listitem>\r\n        <Listitem>Travail en open space (avec masque, 5 jours)</Listitem>\r\n        <Listitem>Faire ses courses (30mn, avec masque) (x2)</Listitem>\r\n        <Listitem>Transports en commun (1h, avec masque) (x5)</Listitem>\r\n      </List>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  generateImpact = () => {\r\n    return(\r\n      <div style={{marginTop:\"1em\"}}>\r\n        <Evolution riskFactor={this.state.riskFactor}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showProfile = () => {\r\n    var risk = this.state.riskFactor * this.state.universe.prevalence;\r\n    return (\r\n      <div className=\"profile_container\">\r\n      <Box borderRadius={16} {...propsForDisplay}>\r\n      <div style={{textAlign:\"center\", marginBottom:'0.5em', fontSize:'1.5em', fontWeight:\"500\", borderStyle:\"solid\", borderWidth:\"thin\", padding:\"0.5em\"}}>\r\n        Limit Linh\r\n        </div>\r\n          <Grid container spacing={1} justify=\"center\" style={{height:\"70\"}}>\r\n            <Grid item xs={12} sm={4}>\r\n            <div className=\"svg_container\">\r\n                <svg style={{width:\"100%\", height:\"100%\",display:\"block\", margin:\"auto\"}}>\r\n                  <ML style={{display:\"block\", margin:\"auto\", height:\"90%\"}}/>\r\n                </svg>\r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n            <div style={{textAlign:\"center\", fontWeight:\"500\"}}>\r\n                <Tabs value={this.state.value} onChange={this.handleChange} indicatorColor=\"primary\" aria-label=\"simple tabs example\">\r\n                  <Tab label=\"activités\" />\r\n                  <Tab label=\"impact\" />\r\n                </Tabs>\r\n                </div>\r\n               {(this.state.show==\"activités\") ? this.generateActivities() : this.generateImpact()}\r\n\r\n            </Grid>\r\n          </Grid>\r\n\r\n        <div style={{marginTop:\"1em\", fontSize:\"1.4em\", fontWeight:\"500\", textAlign:\"center\", width:\"100%\"}}>\r\n        Risque total : {Math.round((risk * 10000 + Number.EPSILON)) / 100} % par semaine, {Math.round(((1-Math.pow(1-risk, 12)) * 10000 + Number.EPSILON)) / 100} % sur 3 mois.\r\n        </div>\r\n\r\n        \r\n      </Box>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"risk_calculator\">\r\n          {this.showProfile()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ProfileCard);\r\n","D:\\Dev\\covinsights\\src\\components\\Calculator\\BasicEvolution.js",["194","195"],"import React, { Component } from \"react\"\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Label} from 'recharts';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nvar rk4 = require('ode-rk4');   \r\n\r\nclass EpidemySimulator{\r\n\t// Estimation of the incubation period to 5days : \r\n\t// https://www.acpjournals.org/doi/full/10.7326/M20-0504\r\n\t// Estimation of the infectious period to 3 days\r\n\t// https://www.medrxiv.org/content/medrxiv/early/2020/01/28/2020.01.23.20018549.full.pdf\r\n\t// https://gabgoh.github.io/COVID/index.html\r\n\tconstructor(prevalenceFactor, gamma=0.333, alpha=0.2, N=66000000, E0 = 20000, I0=20000, tmax=30, R0=15000000){\r\n\t\tthis.prevalenceFactor = prevalenceFactor;\r\n\t\tthis.gamma = gamma;\r\n\t\tthis.number_people = N;\r\n\t\tthis.I0 = I0;\r\n\t\tthis.tmax = tmax;\r\n\t\tthis.R0 = R0;\r\n\t\tthis.alpha = alpha;\r\n\t}\r\n\t\r\n\tcopy(x) {\r\n\t\treturn Object.assign({},x)\r\n\t}\r\n\t\r\n\tsir(dydt, y, t){\r\n\t\tvar prevalence = y[2] / this.number_people; // Proportion d'infectés\r\n        var riskPerson = prevalence * this.prevalenceFactor;\r\n\t\tdydt[0] = -1.0 * y[0] * riskPerson; // S\r\n\t\tdydt[1] = y[0] * riskPerson - this.alpha * y[1]; // E\r\n\t\tdydt[2] = this.alpha * y[1] - this.gamma * y[2]; // I\r\n\t\tdydt[3] = this.gamma * y[2]; // R\r\n\t}\r\n\t\r\n\tintegrate(f,t0,y0,step,tmax) {\r\n\t\tvar integrator = rk4(y0, f, t0, step);\r\n\t\tvar t = t0;\r\n\t\tvar y = y0;\r\n\t\tvar ta = [];\r\n\t\tvar ya = [];\r\n\t\tta.push(t0);\r\n\t\tya.push({x:t, infections:Math.round(y[2])/1000}); //, hosp:Math.round((y[1]* 2.6 / 100) * 1000)/1000, rea: Math.round((y[1]* (2.6 / 100) * (18.2 / 100)) * 1000) / 1000});\r\n\t\tfor(t=t0+step;t<tmax; t=t+step){\r\n\t\t\tintegrator=integrator.step();\r\n\t\t\tya.push({x:t, infections:Math.round(integrator.y[2]*1000)/1000000});\r\n\t\t\tta.push(t);\r\n\t\t}\r\n\t  return {t:ta,y:ya};\r\n\t}\r\n\t\r\n\tsimulate(){\r\n\t\t// we estimate E0=I0.\r\n\t\treturn this.integrate(this.sir.bind(this), 0, [this.number_people-this.I0-this.R0,this.I0, this.I0,this.R0], 1, this.tmax);\r\n\t}\r\n\t\t\r\n}\r\n\r\nclass Evolution extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {alpha:props.alpha, gamma:props.gamma, riskFactor:props.riskFactor, sim: new EpidemySimulator(props.riskFactor, props.gamma, props.alpha)};\r\n\t}\r\n\r\n\thandleGamma = (event) => {\r\n\t\tthis.setState({gamma:event.target.value, sim : new EpidemySimulator(this.state.riskFactor, event.target.value, this.state.alpha)});\r\n\t  }\r\n\t\r\n\thandleAlpha = (event) => {\r\n\t\tthis.setState({alpha: event.target.value, sim : new EpidemySimulator(this.state.riskFactor, this.state.gamma, event.target.value)});\r\n\t  }\r\n\t\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t<div id=\"graph_container\">\r\n\t\t<div className=\"recharts_graph\">\r\n\t\t\t<LineChart width={350} height={250} data={this.state.sim.simulate().y}>\r\n\t\t\t\t<Line type=\"monotone\" yAxisId=\"left\" dataKey=\"infections\" dot={false} stroke=\"red\" />\r\n\t\t\t\t<CartesianGrid stroke=\"#ccc\" />\r\n\t\t\t\t<XAxis dataKey=\"x\" interval={5}>\r\n\t\t\t\t\t<Label value=\"(jours)\" position='right' offset={-15} />\r\n\t\t\t\t</XAxis>\r\n\t\t\t\t<YAxis yAxisId=\"left\" />\r\n\t\t\t\t<YAxis width={80} yAxisId=\"right\" orientation=\"right\" tick={{ fontSize: 10, }}>\r\n\t\t\t\t</YAxis>\r\n\t\t\t\t<Tooltip />\r\n\t\t\t</LineChart>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Evolution;",["196","197"],"D:\\Dev\\covinsights\\src\\pages\\home.js",[],"D:\\Dev\\covinsights\\src\\pages\\homeEng.js",[],"D:\\Dev\\covinsights\\src\\pages\\insightsEng.js",["198","199","200"],"import React, {Component, lazy, Suspense} from \"react\"\r\nimport { Helmet } from 'react-helmet'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst load = (Component) => (props) => {\r\n  return (\r\n  <Suspense fallback={<CircularProgress />}>\r\n    <Component {...props}/>\r\n  </Suspense>\r\n  )\r\n}\r\n\r\nconst ComparisonRisks = load(lazy( () =>  import('../components/Insights/ComparisonRisks.js')));\r\nconst ScenarioChristmas = load(lazy( () =>  import('../components/Insights/ScenarioChristmas.js')));\r\nconst ProfileExamples = load(lazy( () =>  import('../components/Insights/ProfileExamples.js')));\r\n\r\nclass Insights extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={current:\"scenario\", page: ()=><ScenarioChristmas/>}\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({current:event.target.value});\r\n    if(event.target.value==\"graph\"){\r\n      this.setState({page:()=><ComparisonRisks/>});\r\n    }\r\n    if(event.target.value==\"scenario\"){\r\n      this.setState({page:()=><ScenarioChristmas/>})\r\n    }\r\n    if(event.target.value==\"profiles\"){\r\n      this.setState({page:()=><ProfileExamples/>})\r\n    }\r\n\r\n  }\r\n\r\n  render =() => {\r\n    return (\r\n      <div className=\"calculator_container\">\r\n      <Helmet>\r\n        <title>\r\n          Visualization\r\n        </title>\r\n      </Helmet>        \r\n      <div className=\"calculator_presentation\">\r\n      <Select\r\n          value={this.state.current}\r\n          onChange={this.handleChange}\r\n        >\r\n          <MenuItem value=\"graph\">\r\n          Activities sorted by risk\r\n          </MenuItem>\r\n          <MenuItem value=\"scenario\">Family gatherings</MenuItem>\r\n          <MenuItem value=\"profiles\">Profile examples</MenuItem>\r\n        </Select>\r\n      </div>\r\n      {this.state.page()}\r\n      </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default Insights;","D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\Gatherer.js",["201","202","203"],"import React, { Component } from \"react\"\r\nimport PersonCard from \"./PersonCard.js\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Chip from '@material-ui/core/Chip';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport profiles from '../constants/profiles.js';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport {InteractionOne, BasicUniverse} from '../Calculator/NewMath.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { IconButton} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n/*\r\n**********\r\n** TODO **\r\n**********\r\n\r\nAjouter des cases pour le type de réunion familiale (une ligne en bas)\r\n-> masque ou non, intérieur/extérieur, \r\n*/\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  });\r\n\r\nclass Gathering extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        // globalRisk contains the person Risk derived from the calculator.\r\n        this.state={people:{}, peopleCards:[], nextId:0, toggleResult:false, result:[],\r\n        masks:false, location:\"indoors\", duration:300, hours:5, minutes:0, talking:\"normal\", distance:\"normal\", universe:new BasicUniverse(), \r\n        globalRisk:(isNaN(this.props.globalRisk)? 0:this.props.globalRisk)}\r\n        this.defaultPersonArgs = {\r\n            name:\"Personne lambda\",\r\n            age: 35,\r\n            gender: \"ND\",\r\n            risk:this.state.universe.prevalence*100,\r\n        };\r\n        this.refResult = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if(this.state.toggleResult){\r\n            this.refResult.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }\r\n\r\n    // We only add the card, the person is added on submit.\r\n    addPerson = (args) => {\r\n        const myId = this.state.nextId;\r\n        const myNewCard = (\r\n            <Grid item className=\"activity_list\">\r\n                <PersonCard id={myId} showForm={false} updatePerson={this.updatePerson} delete={() => {this.clear(myId); this.toggleOffResult()}} {...args}>\r\n                    <div className=\"delete_button\">\r\n                    <Tooltip title=\"Supprimer\">\r\n                    <IconButton aria-label=\"delete\" size=\"small\" onClick={() => {this.clear(myId); this.toggleOffResult()}}>\r\n                    <DeleteIcon />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                    </div>\r\n                </PersonCard>\r\n            </Grid>\r\n          )\r\n        this.setState({ nextId: this.state.nextId + 1 });\r\n        var myCards = this.state.peopleCards.slice();\r\n        myCards.push(myNewCard);\r\n        this.setState({ peopleCards:myCards });\r\n    }\r\n\r\n    // For a premade, we directly enter the person\r\n    addPremadePerson = (args) => {\r\n        const myId = this.state.nextId;\r\n        const myNewCard = (\r\n            <Grid item className=\"activity_list\">\r\n                <PersonCard id={myId} showForm={false} updatePerson={this.updatePerson} delete={() => {this.clear(myId); this.toggleOffResult()}} {...args}>\r\n                    <div className=\"delete_button\">\r\n                    <Tooltip title=\"Supprimer\">\r\n                    <IconButton aria-label=\"delete\" size=\"small\" onClick={() => {this.clear(myId); this.toggleOffResult()}}>\r\n                    <DeleteIcon />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                    </div>\r\n                </PersonCard>\r\n            </Grid>\r\n          )\r\n        this.setState({ nextId: this.state.nextId + 1 });\r\n        var myCards = this.state.peopleCards.slice();\r\n        var myPeople = this.state.people;\r\n        var ageFactors = this.state.universe.ageFactors(args.age, args.gender);\r\n        myPeople[myId] = [ageFactors, args.risk];\r\n        myCards.push(myNewCard);\r\n        this.setState({ peopleCards:myCards });\r\n    }\r\n\r\n    clear = id => {\r\n        // Updating the cards and the people.\r\n        var myCards = this.state.peopleCards.slice();\r\n        var myPeople = this.state.people;\r\n        myCards[id] = <div />\r\n        delete myPeople[id];\r\n        this.setState({ peopleCards: myCards, people:myPeople})\r\n    }\r\n\r\n    clearAll = () => {\r\n        this.setState({ nextId: 0, peopleCards: [], people:{}, toggleResult:false });\r\n    }\r\n\r\n    // Called by the children on mount and submit\r\n    updatePerson = (id, age, gender, risk) => {\r\n        var myPeople = this.state.people;\r\n        var ageFactors = this.state.universe.ageFactors(age, gender);\r\n        myPeople[id] = [ageFactors, risk];\r\n        this.setState({people:myPeople});\r\n        this.toggleOffResult();\r\n      }\r\n\r\n    generatePremadeCards = () => {\r\n    profiles.sort((a, b) => (a.name > b.name) ? 1 : -1);\r\n    const { classes } = this.props;\r\n    return (\r\n        <div id=\"premade_cards\" className={classes.root}>\r\n            {profiles.map((item, index) => {\r\n            return (\r\n                    <Chip icon={<FaceIcon />} label={item.name} clickable onClick={() => {this.addPremadePerson(item); this.toggleOffResult()}} />\r\n            )\r\n            })}\r\n        </div>\r\n    )\r\n    }\r\n\r\n    toggleResult = () => {\r\n        this.setState({toggleResult:true});\r\n    }\r\n\r\n    toggleOffResult = () => {\r\n        this.setState({toggleResult:false});\r\n    }\r\n\r\n    // Compute the probability that someone is hospitalized, goes to ICU, and dies.\r\n    computeResult = () => {\r\n        /*\r\n\t\tFormulas :\r\n\t\t- Mean number of people hospitalized : sum(p_hosp)\r\n        - Probability that at least one person is hospitalized : 1 - prod(1-p_hosp)\r\n        - Attention, les risques sont entrés par les gens sous forme de pourcentages !!\r\n\t\t*/\r\n\t\tvar risk = 1.0;\r\n\t\tvar hospRisk = 1.0;\r\n\t\tvar reaRisk = 1.0;\r\n\t\tvar deathRisk = 1.0;\r\n\t\tvar moyenneHosp = 0.0;\r\n\t\tvar moyenneRea = 0.0;\r\n\t\tvar moyenneDeaths = 0.0;\r\n        var i;\r\n\r\n        var myDuration = 60*this.state.hours + this.state.minutes;\r\n        this.setState({duration:myDuration});\r\n        var interaction = new InteractionOne(\"Family gathering\", myDuration, this.state.masks, this.state.masks,\r\n            this.state.talking, this.state.outdoors, this.state.distance);\r\n        var interactionRisk = interaction.getActivityRisk();\r\n        // Using the risk from the calculator.\r\n        // We only compute the risk for his family.\r\n        risk = risk *(1-this.state.globalRisk);\r\n\t\tfor(var key in this.state.people){\r\n            // The risk passed by the person via the simulator.\r\n\t\t\tvar myRisk = this.state.people[key][1] / 100\r\n\t\t\t// We update the probability that no-one has the disease\r\n            risk = risk * (1-myRisk);\r\n\t\t\tfor(var current in this.state.people){\r\n                if(current != key){\r\n                    // Updating the risk for person i by taking into account the possible\r\n\t\t\t\t    // contamination by person j.\r\n\t\t\t\t    myRisk = myRisk + (1-myRisk)*interactionRisk*this.state.people[current][1]/100;\r\n                }\r\n            }\r\n            myRisk = myRisk + (1-myRisk)*interactionRisk*this.state.globalRisk;\r\n\t\t\tvar hospProba = this.state.people[key][0][0]\r\n\t\t\tvar reaProba = this.state.people[key][0][1]\r\n\t\t\tvar deathProba = this.state.people[key][0][2]\r\n\t\t\t// Updating the proba that no-one gets hospitalized\r\n\t\t\thospRisk = hospRisk * (1 - myRisk*hospProba);\r\n\t\t\treaRisk = reaRisk * (1 - myRisk*hospProba*reaProba)\r\n\t\t\tdeathRisk = deathRisk  *(1 - myRisk*hospProba*deathProba)\r\n\t\t\t// Updating the average number of hospitalizations\r\n\t\t\tmoyenneHosp = moyenneHosp + myRisk*hospProba\r\n\t\t\tmoyenneRea = moyenneRea + myRisk*hospProba*reaProba\r\n\t\t\tmoyenneDeaths = moyenneDeaths + myRisk*hospProba*deathProba\r\n\t\t}\r\n\t\trisk = 1-risk;\r\n\t\thospRisk = 1-hospRisk;\r\n\t\treaRisk = 1-reaRisk;\r\n        deathRisk = 1-deathRisk;\r\n        var res = \r\n        this.setState({result:[risk, hospRisk, reaRisk, deathRisk, moyenneHosp, moyenneRea, moyenneDeaths]});\r\n    }\r\n\r\n    showResult = () => {\r\n        const result = this.state.result;\r\n        var nb_christmas = 7000000; // Voir white paper\r\n        return (\r\n        <div>\r\n        <div id =\"family_result\" ref={this.refResult}>\r\n        <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n            <span style={{fontWeight:\"bold\"}}>Bilan sur la France si toutes les réunions sont semblables :</span> <br /> <br/>\r\n            <div className=\"visible_except_mobile\">\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={4}>\r\n                <div className=\"result_cases\">\r\n                    <div className=\"result_cases_top\">\r\n                        {Math.round(result[4]*nb_christmas)}\r\n                    </div>\r\n                    <div className=\"result_cases_bottom\">\r\n                        hospitalisations\r\n                    </div>\r\n                </div>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <div className=\"result_cases\">\r\n                    <div className=\"result_cases_top\">\r\n                    {Math.round(result[5]*nb_christmas)}\r\n                    </div>\r\n                    <div className=\"result_cases_bottom\">\r\n                    réanimations\r\n                    </div>\r\n                </div>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <div className=\"result_cases\">\r\n                    <div className=\"result_cases_top\">\r\n                    {Math.round(result[6]*nb_christmas)}\r\n                    </div>\r\n                    <div className=\"result_cases_bottom\">\r\n                    morts\r\n                    </div>\r\n                </div>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n            <div className=\"visible_mobile_only\">\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                <div className=\"result_cases\">\r\n                    <div className=\"result_cases_top\">\r\n                        {Math.round(result[4]*nb_christmas)}\r\n                    </div>\r\n                    <div className=\"result_cases_bottom\">\r\n                        hospitalisations\r\n                    </div>\r\n                </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <div className=\"result_cases\">\r\n                    <div className=\"result_cases_top\">\r\n                    {Math.round(result[5]*nb_christmas)}\r\n                    </div>\r\n                    <div className=\"result_cases_bottom\">\r\n                    réas\r\n                    </div>\r\n                </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <div className=\"result_cases\">\r\n                    <div className=\"result_cases_top\">\r\n                    {Math.round(result[6]*nb_christmas)}\r\n                    </div>\r\n                    <div className=\"result_cases_bottom\">\r\n                    morts\r\n                    </div>\r\n                </div>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n        </Box>\r\n      </div>\r\n        <div className=\"explanation_test\">\r\n        Ces estimations sont génériques et ne prennent pas en compte d'éventuels problèmes de santé chez des membres de votre famille. <br/>\r\n        Pour alléger le bilan, vous pouvez effectuer des jours de quarantaine avant les fêtes, raccourcir les réunions, et réduire les activités à risque.\r\n        </div>\r\n    </div>\r\n      )\r\n\r\n    }\r\n\r\n    handleGlobalRisk = (event) => {\r\n        this.setState({globalRisk: Number(event.target.value)/100});\r\n    }\r\n\r\n    handleHours = (event) => {\r\n        this.setState({hours: Number(event.target.value)});\r\n    }\r\n    \r\n    handleMinutes = (event) => {\r\n        this.setState({minutes:Number(event.target.value)});\r\n    }\r\n\r\n    handleMasks = (event) => {\r\n        this.setState({masks:event.target.checked});\r\n    }\r\n\r\n    showMyRisk = () => {\r\n        return (\r\n            <div className=\"showMyRisk\">\r\n            <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n            <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n                <Grid item>\r\n                Entrez votre risque :\r\n                </Grid>\r\n                <Grid item><TextField id=\"outlined-basic\" style={{width: 70}} type=\"number\"\r\n\t\t\tInputLabelProps={{shrink: true,}} label=\"Risque\" variant=\"outlined\" defaultValue={Math.round(this.state.globalRisk*10000)/100} onChange={this.handleGlobalRisk} />\r\n                </Grid>\r\n                <Grid item>\r\n                %. (Prévalence actuelle : {Math.round(this.state.universe.prevalence * 100000)/1000}%)\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n                <Grid item>\r\n                Durée:\r\n                </Grid>\r\n                <Grid item><TextField id=\"outlined-basic\" style={{width: 70}} type=\"number\"\r\n\t\t\tInputLabelProps={{shrink: true,}} InputProps={{inputProps: { \r\n                max: 100, min: 0 }}} label=\"\"  defaultValue={this.state.hours} onChange={this.handleHours} />\r\n                </Grid>\r\n                <Grid item>\r\n                 heures \r\n                </Grid>\r\n                <Grid item><TextField id=\"outlined-basic\" style={{width: 70}} type=\"number\"\r\n\t\t\tInputLabelProps={{shrink: true,}} InputProps={{inputProps: { \r\n                max: 100, min: 0 }}} label=\"\"  defaultValue={this.state.minutes} onChange={this.handleMinutes} />\r\n                </Grid>\r\n                <Grid item>\r\n                minutes.\r\n                </Grid>\r\n                <Grid item>\r\n                    Masques :\r\n                </Grid>\r\n                <Grid item>\r\n                    <Checkbox checked={this.state.masks} onChange={this.handleMasks} />\r\n                </Grid>\r\n            </Grid>\r\n            </Box>\r\n            </div>            \r\n        )\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n        <div className=\"risk_calculator\">\r\n         <Grid container spacing={1} justify=\"center\" alignitems=\"center\">\r\n                {this.state.peopleCards}\r\n        </Grid>\r\n            <div className=\"addActivity_buttons\">\r\n            <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n            <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n                <Grid item>\r\n                <Fab\r\n                    onClick={() => {this.addPerson(this.defaultPersonArgs)}}\r\n                    color=\"primary\"\r\n                    variant=\"extended\"\r\n                >\r\n                    <AddIcon />\r\n                    <Box p=\"0.5rem\">Personne</Box>\r\n                </Fab>\r\n                </Grid>\r\n                <Grid item>\r\n                <Fab onClick={() => {this.clearAll(); this.toggleOffResult();}} color=\"secondary\" variant=\"extended\">\r\n                    <CachedIcon />\r\n                    <Box p=\"0.5rem\">Reset</Box>\r\n                </Fab>\r\n                </Grid>\r\n            </Grid>\r\n            </Box>\r\n            </div>\r\n            <div className=\"addActivity_buttons\">\r\n            <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n            <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\r\n                <Grid item>\r\n                <Fab\r\n                    onClick={() => {this.toggleResult(); this.computeResult()}}\r\n                    variant=\"extended\"\r\n                >\r\n                    <TouchAppIcon />\r\n                    <Box p=\"0.5rem\">Calculer le bilan</Box>\r\n                </Fab>\r\n                </Grid>\r\n            </Grid>\r\n            </Box>\r\n            </div>\r\n            {this.showMyRisk()}\r\n            <div id=\"premade_activities\">\r\n            <h4>Exemples de profils (cliquez pour ajouter):</h4>\r\n                {this.generatePremadeCards()}\r\n            </div>  \r\n            <div ref={this.refResult}>\r\n            {this.state.toggleResult && this.showResult()}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Gathering);","D:\\Dev\\covinsights\\src\\pages\\WhitePaper.js",["204"],"D:\\Dev\\covinsights\\src\\components\\constants\\profiles.js",["205","206"],"D:\\Dev\\covinsights\\src\\css\\Theme.js",["207"],"D:\\Dev\\covinsights\\src\\css\\FooterWrapper.js",[],"D:\\Dev\\covinsights\\src\\components\\Layout.js",["208"],"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskForm.js",["209"],"D:\\Dev\\covinsights\\src\\reportWebVitals.js",[],"D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\GathererEng.js",["210","211","212"],"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskFormEng.js",["213"],"D:\\Dev\\covinsights\\src\\components\\Body.js",["214"],"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskCalculator.js",["215","216"],{"ruleId":"217","severity":1,"message":"218","line":14,"column":27,"nodeType":"219","messageId":"220","endLine":14,"endColumn":29},{"ruleId":"217","severity":1,"message":"218","line":17,"column":32,"nodeType":"219","messageId":"220","endLine":17,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":20,"column":32,"nodeType":"219","messageId":"220","endLine":20,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":26,"column":27,"nodeType":"219","messageId":"220","endLine":26,"endColumn":29},{"ruleId":"217","severity":1,"message":"218","line":29,"column":32,"nodeType":"219","messageId":"220","endLine":29,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":32,"column":32,"nodeType":"219","messageId":"220","endLine":32,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":183,"column":30,"nodeType":"219","messageId":"220","endLine":183,"endColumn":32},{"ruleId":"217","severity":1,"message":"218","line":185,"column":30,"nodeType":"219","messageId":"220","endLine":185,"endColumn":32},{"ruleId":"217","severity":1,"message":"218","line":187,"column":30,"nodeType":"219","messageId":"220","endLine":187,"endColumn":32},{"ruleId":"217","severity":1,"message":"218","line":189,"column":30,"nodeType":"219","messageId":"220","endLine":189,"endColumn":32},{"ruleId":"217","severity":1,"message":"218","line":193,"column":59,"nodeType":"219","messageId":"220","endLine":193,"endColumn":61},{"ruleId":"217","severity":1,"message":"221","line":195,"column":34,"nodeType":"219","messageId":"220","endLine":195,"endColumn":36},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"217","severity":1,"message":"218","line":28,"column":26,"nodeType":"219","messageId":"220","endLine":28,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":31,"column":26,"nodeType":"219","messageId":"220","endLine":31,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":34,"column":26,"nodeType":"219","messageId":"220","endLine":34,"endColumn":28},{"ruleId":"222","replacedBy":"226"},{"ruleId":"224","replacedBy":"227"},{"ruleId":"222","replacedBy":"228"},{"ruleId":"224","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":10,"column":22,"nodeType":"232","messageId":"233","endLine":10,"endColumn":28},{"ruleId":"230","severity":1,"message":"234","line":19,"column":13,"nodeType":"232","messageId":"233","endLine":19,"endColumn":19},{"ruleId":"230","severity":1,"message":"235","line":92,"column":9,"nodeType":"232","messageId":"233","endLine":92,"endColumn":14},{"ruleId":"222","replacedBy":"236"},{"ruleId":"224","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":1,"column":1,"nodeType":"240","endLine":233,"endColumn":4},{"ruleId":"222","replacedBy":"241"},{"ruleId":"224","replacedBy":"242"},{"ruleId":"230","severity":1,"message":"243","line":400,"column":7,"nodeType":"232","messageId":"233","endLine":400,"endColumn":21},{"ruleId":"230","severity":1,"message":"244","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":211,"column":20,"nodeType":"219","messageId":"220","endLine":211,"endColumn":22},{"ruleId":"217","severity":1,"message":"218","line":214,"column":26,"nodeType":"219","messageId":"220","endLine":214,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":214,"column":52,"nodeType":"219","messageId":"220","endLine":214,"endColumn":54},{"ruleId":"217","severity":1,"message":"218","line":217,"column":26,"nodeType":"219","messageId":"220","endLine":217,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":57,"column":18,"nodeType":"219","messageId":"220","endLine":57,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":112,"column":33,"nodeType":"219","messageId":"220","endLine":112,"endColumn":35},{"ruleId":"217","severity":1,"message":"218","line":80,"column":18,"nodeType":"219","messageId":"220","endLine":80,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":111,"column":33,"nodeType":"219","messageId":"220","endLine":111,"endColumn":35},{"ruleId":"217","severity":1,"message":"218","line":58,"column":18,"nodeType":"219","messageId":"220","endLine":58,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":112,"column":33,"nodeType":"219","messageId":"220","endLine":112,"endColumn":35},{"ruleId":"230","severity":1,"message":"245","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":17},{"ruleId":"230","severity":1,"message":"246","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":12},{"ruleId":"222","replacedBy":"247"},{"ruleId":"224","replacedBy":"248"},{"ruleId":"217","severity":1,"message":"218","line":28,"column":26,"nodeType":"219","messageId":"220","endLine":28,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":31,"column":26,"nodeType":"219","messageId":"220","endLine":31,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":34,"column":26,"nodeType":"219","messageId":"220","endLine":34,"endColumn":28},{"ruleId":"230","severity":1,"message":"249","line":168,"column":13,"nodeType":"232","messageId":"233","endLine":168,"endColumn":14},{"ruleId":"217","severity":1,"message":"221","line":184,"column":28,"nodeType":"219","messageId":"220","endLine":184,"endColumn":30},{"ruleId":"230","severity":1,"message":"250","line":207,"column":13,"nodeType":"232","messageId":"233","endLine":207,"endColumn":16},{"ruleId":"230","severity":1,"message":"244","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":15},{"ruleId":"238","severity":1,"message":"239","line":5,"column":1,"nodeType":"240","endLine":72,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":16,"column":15,"nodeType":"253","messageId":"254","endLine":16,"endColumn":35,"fix":"255"},{"ruleId":"238","severity":1,"message":"256","line":1,"column":1,"nodeType":"240","endLine":13,"endColumn":2},{"ruleId":"230","severity":1,"message":"257","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":13},{"ruleId":"230","severity":1,"message":"258","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"249","line":168,"column":13,"nodeType":"232","messageId":"233","endLine":168,"endColumn":14},{"ruleId":"217","severity":1,"message":"221","line":181,"column":28,"nodeType":"219","messageId":"220","endLine":181,"endColumn":30},{"ruleId":"230","severity":1,"message":"250","line":204,"column":13,"nodeType":"232","messageId":"233","endLine":204,"endColumn":16},{"ruleId":"230","severity":1,"message":"258","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"259","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":17},{"ruleId":"230","severity":1,"message":"234","line":19,"column":13,"nodeType":"232","messageId":"233","endLine":19,"endColumn":19},{"ruleId":"230","severity":1,"message":"235","line":91,"column":9,"nodeType":"232","messageId":"233","endLine":91,"endColumn":14},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-native-reassign",["260"],"no-negated-in-lhs",["261"],["260"],["261"],["260"],["261"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Scroll' is defined but never used.","'mySum' is assigned a value but never used.",["260"],["261"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["260"],["261"],"'PersonWithRisk' is defined but never used.","'Divider' is defined but never used.","'TextField' is defined but never used.","'Grid' is defined but never used.",["260"],["261"],"'i' is defined but never used.","'res' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property prevalence.","MemberExpression","unexpectedWhitespace",{"range":"262","text":"263"},"Assign object to a variable before exporting as module default","'Paper' is defined but never used.","'Children' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",[385,387],"."]
[{"D:\\Dev\\covinsights\\src\\components\\Body.js":"1","D:\\Dev\\covinsights\\src\\pages\\insights.js":"2","D:\\Dev\\covinsights\\src\\components\\Insights\\ComparisonRisks.js":"3","D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskForm.js":"4","D:\\Dev\\covinsights\\src\\css\\ContactFormWrapper.js":"5","D:\\Dev\\covinsights\\src\\css\\CardWrapper.js":"6","D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskFormEng.js":"7","D:\\Dev\\covinsights\\src\\components\\Calculator\\NewMath.js":"8","D:\\Dev\\covinsights\\src\\css\\NavbarWrapper.js":"9","D:\\Dev\\covinsights\\src\\components\\Navbar.js":"10","D:\\Dev\\covinsights\\src\\index.js":"11","D:\\Dev\\covinsights\\src\\pages\\familyGathering.js":"12","D:\\Dev\\covinsights\\src\\pages\\familyGatheringEng.js":"13","D:\\Dev\\covinsights\\src\\pages\\Error.js":"14","D:\\Dev\\covinsights\\src\\pages\\insightsEng.js":"15","D:\\Dev\\covinsights\\src\\pages\\WhitePaper.js":"16","D:\\Dev\\covinsights\\src\\pages\\WhitePaperEng.js":"17","D:\\Dev\\covinsights\\src\\components\\constants\\activitiesEng.js":"18","D:\\Dev\\covinsights\\src\\css\\PortfolioItemWrapper.js":"19","D:\\Dev\\covinsights\\src\\components\\Layout.js":"20","D:\\Dev\\covinsights\\src\\pages\\calculator.js":"21","D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\PersonCard.js":"22","D:\\Dev\\covinsights\\src\\css\\BannerWrapper.js":"23","D:\\Dev\\covinsights\\src\\css\\GlobalStyle.js":"24","D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskCalculator.js":"25","D:\\Dev\\covinsights\\src\\pages\\calculatorEng.js":"26","D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskCalculatorEng.js":"27","D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\Gatherer.js":"28","D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\GathererEng.js":"29","D:\\Dev\\covinsights\\src\\components\\constants\\profiles.js":"30","D:\\Dev\\covinsights\\src\\components\\Calculator\\Evolution.js":"31","D:\\Dev\\covinsights\\src\\components\\constants\\profilesEng.js":"32","D:\\Dev\\covinsights\\src\\css\\FooterWrapper.js":"33","D:\\Dev\\covinsights\\src\\components\\Insights\\ComparisonRisksEng.js":"34","D:\\Dev\\covinsights\\src\\components\\constants\\activities.js":"35","D:\\Dev\\covinsights\\src\\css\\Theme.js":"36","D:\\Dev\\covinsights\\src\\css\\PageContainerWrapper.js":"37","D:\\Dev\\covinsights\\src\\reportWebVitals.js":"38"},{"size":597,"mtime":1606388632737,"results":"39","hashOfConfig":"40"},{"size":984,"mtime":1607617235197,"results":"41","hashOfConfig":"40"},{"size":5783,"mtime":1607617274509,"results":"42","hashOfConfig":"40"},{"size":12314,"mtime":1607514592260,"results":"43","hashOfConfig":"40"},{"size":785,"mtime":1606076399231,"results":"44","hashOfConfig":"40"},{"size":1729,"mtime":1606076399209,"results":"45","hashOfConfig":"40"},{"size":12071,"mtime":1607514608979,"results":"46","hashOfConfig":"40"},{"size":12501,"mtime":1607080412104,"results":"47","hashOfConfig":"40"},{"size":2098,"mtime":1606221424053,"results":"48","hashOfConfig":"40"},{"size":7548,"mtime":1607613885253,"results":"49","hashOfConfig":"40"},{"size":577,"mtime":1606848818546,"results":"50","hashOfConfig":"40"},{"size":1663,"mtime":1607614357848,"results":"51","hashOfConfig":"40"},{"size":1540,"mtime":1607614354375,"results":"52","hashOfConfig":"40"},{"size":331,"mtime":1606586654735,"results":"53","hashOfConfig":"40"},{"size":953,"mtime":1607617114405,"results":"54","hashOfConfig":"40"},{"size":20397,"mtime":1607612471447,"results":"55","hashOfConfig":"40"},{"size":16814,"mtime":1607449367530,"results":"56","hashOfConfig":"40"},{"size":5187,"mtime":1607010977919,"results":"57","hashOfConfig":"40"},{"size":1368,"mtime":1606076399371,"results":"58","hashOfConfig":"40"},{"size":411,"mtime":1606221119759,"results":"59","hashOfConfig":"40"},{"size":1453,"mtime":1607614749347,"results":"60","hashOfConfig":"40"},{"size":5422,"mtime":1607117750169,"results":"61","hashOfConfig":"40"},{"size":745,"mtime":1606076399185,"results":"62","hashOfConfig":"40"},{"size":8786,"mtime":1607613056344,"results":"63","hashOfConfig":"40"},{"size":12572,"mtime":1607611466928,"results":"64","hashOfConfig":"40"},{"size":1396,"mtime":1607614755285,"results":"65","hashOfConfig":"40"},{"size":12371,"mtime":1607615196850,"results":"66","hashOfConfig":"40"},{"size":17675,"mtime":1607614405832,"results":"67","hashOfConfig":"40"},{"size":17380,"mtime":1607614397757,"results":"68","hashOfConfig":"40"},{"size":1337,"mtime":1607101210751,"results":"69","hashOfConfig":"40"},{"size":4327,"mtime":1607433371705,"results":"70","hashOfConfig":"40"},{"size":1285,"mtime":1607101277013,"results":"71","hashOfConfig":"40"},{"size":1158,"mtime":1606076399253,"results":"72","hashOfConfig":"40"},{"size":5569,"mtime":1607616819641,"results":"73","hashOfConfig":"40"},{"size":5240,"mtime":1607613573585,"results":"74","hashOfConfig":"40"},{"size":345,"mtime":1606076399382,"results":"75","hashOfConfig":"40"},{"size":1375,"mtime":1606076399346,"results":"76","hashOfConfig":"40"},{"size":362,"mtime":1606158119788,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"qm2kwn",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"123"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"123"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"123"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\covinsights\\src\\components\\Body.js",["168"],"import React from \"react\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n/*\r\nThe Paper will be hidden on mobile, and serves to contrast\r\nwith the background in a blog-like style.\r\n*/\r\n\r\nconst Body = ({ children }) => {\r\n        return (\r\n            <div className=\"behind_body\">\r\n                    <Paper elevation={3} className=\"paper_body\">\r\n                    <div className=\"inside_body\">\r\n                {children}\r\n                    </div>\r\n                    </Paper>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Body;",["169","170"],"D:\\Dev\\covinsights\\src\\pages\\insights.js",[],"D:\\Dev\\covinsights\\src\\components\\Insights\\ComparisonRisks.js",["171","172"],"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskForm.js",["173"],"D:\\Dev\\covinsights\\src\\css\\ContactFormWrapper.js",[],["174","175"],"D:\\Dev\\covinsights\\src\\css\\CardWrapper.js",[],"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskFormEng.js",["176"],"import React, { Children, Component } from \"react\"\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from \"@material-ui/core/Box\"\r\nimport { IconButton, Button } from \"@material-ui/core\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {CustomActivity, BasicUniverse, RiskProfile, WorkerRiskProfile, NonWorkerRiskProfile} from './NewMath.js';\r\n\r\nconst styles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 80,\r\n  },\r\n    root: {\r\n    display: 'flex',\r\n    pt: \"3rem\",\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n});\r\n\r\nconst propsForForm = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"17rem\", height: \"35rem\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  px: \"1rem\",\r\n  pt: \"2rem\",\r\n}\r\n\r\nconst propsForDisplay = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"16rem\", height: \"5rem\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  px: \"1rem\",\r\n  position:\"relative\",\r\n  bottom:\"2rem\"\r\n}\r\n\r\nclass RiskFormEng extends Component {\r\n  state = {\r\n    showForm: this.props.showForm,\r\n    id: this.props.id,\r\n    name: this.props.name,\r\n    duration: this.props.duration,\r\n    wearMask: this.props.wearMask,\r\n    nbPeople: this.props.nbPeople,\r\n    nbMasked:this.props.nbMasked,\r\n    location:this.props.location,\r\n    talking: this.props.talking,\r\n    distance: this.props.distance,\r\n    riskProfile: this.props.riskProfile,\r\n    heures:Math.floor(this.props.duration/60),\r\n    minutes:this.props.duration % 60,\r\n    activity:{},\r\n    universe: new BasicUniverse(),\r\n  }\r\n\r\n  setActivityRisk = () => {\r\n    // setting the duration.\r\n    var newDuration = 60*this.state.heures + this.state.minutes;\r\n    this.setState({duration:newDuration})\r\n    var maskProportion = 0;\r\n    if(this.state.nbMasked === 0)\r\n    {\r\n      maskProportion = 0;\r\n    }\r\n    else{\r\n      maskProportion = this.state.nbPeople / this.state.nbMasked;\r\n    }\r\n    var profile = new RiskProfile();\r\n    // Note that the cap at 50% is before applying the profile.\r\n    // The risk profile represents a variation in the prevalence, not the\r\n    // activity itself.\r\n    if(this.state.riskProfile === \"worker\")\r\n    {\r\n      profile = new WorkerRiskProfile();\r\n    }\r\n   if(this.state.riskProfile === \"nonWorker\")\r\n    {\r\n      profile = new NonWorkerRiskProfile();\r\n    }\r\n    var myActivity = new CustomActivity(this.state.name, newDuration, this.state.nbPeople,\r\n        this.state.wearMask, maskProportion, this.state.talking, this.state.location, this.state.distance, profile);\r\n    this.setState({activity:myActivity});\r\n    this.props.updateRisk(this.props.id[0], myActivity);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setActivityRisk();\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.checked })\r\n  }\r\n\r\n  handleNameField = (e) => {\r\n    this.setState({\r\n      name: e.target.value\r\n  });\r\n  }\r\n\r\n  handleNbPeople = (event) => {\r\n    this.setState({nbPeople:Number(event.target.value)});\r\n  };\r\n\r\n  handleNbMasked = (event) => {\r\n    this.setState({nbMasked:Number(event.target.value)});\r\n  };\r\n\r\n  handleHours = (event) => {\r\n    this.setState({heures:Number(event.target.value)})\r\n  }\r\n\r\n  handleMinutes = (event) => {\r\n    this.setState({minutes:Number(event.target.value)});\r\n  }\r\n\r\n  handleTalking = (event) => {\r\n    this.setState({talking:event.target.value});\r\n  };\r\n\r\n  handleDistance = (event) => {\r\n    this.setState({distance:event.target.value});\r\n  };\r\n\r\n  handleRiskProfile = (event) => {\r\n    this.setState({riskProfile:event.target.value});\r\n  };\r\n\r\n  handleLocation = (event) => {\r\n    this.setState({location: event.target.value});\r\n  }\r\n\r\n  generateNbPeople1 = (i) => {\r\n    return (\r\n    <option value={i}>{i}</option>\r\n    );\r\n  }\r\n\r\n  generateNbPeople = () => {\r\n    const numbers = [0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n    return numbers.map((number) => this.generateNbPeople1(number));\r\n  }\r\n\r\n  showForm = () => {\r\n    return (\r\n      <div className=\"risk_form\">\r\n      <Tooltip title=\"Edit\">\r\n      <IconButton className=\"edit_button\" aria-label=\"delete\" size=\"small\" onClick={() => {this.setState({ showForm: false }); this.props.edit()}}>\r\n        <EditIcon />\r\n      </IconButton>\r\n      </Tooltip>\r\n      <Box borderRadius={16} {...propsForDisplay}>\r\n          {this.props.children}\r\n          <div className=\"show_activity\">\r\n            {this.state.name}. {/*Risque : {this.state.risk} */}\r\n          </div>\r\n      </Box>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showCreator = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"risk_form_creator\">\r\n      <Box borderRadius={16} {...propsForForm}>\r\n            <Grid container spacing={1} justify=\"center\" className=\"form_activity_grid\">\r\n                  <Grid item className=\"grid_name_activity\">\r\n                      <TextField id=\"outlined-basic\" size=\"small\" style={{width: 180}} label=\"Activity name\" variant=\"outlined\" defaultValue={this.state.name} onChange={this.handleNameField} />\r\n                  </Grid>\r\n                  <Grid container spacing={1} justify=\"center\" className=\"form_inner_grid\">\r\n                      <Grid item>\r\n                          <TextField id=\"outlined-basic\" style={{width: 90}} type=\"number\" InputLabelProps={{shrink: true,}} \r\n                          InputProps={{inputProps: { \r\n                            max: 100, min: 0 }}} label=\"hours\" variant=\"outlined\" defaultValue={this.state.heures} onChange={this.handleHours} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                          <TextField id=\"outlined-basic\" style={{width: 90}} type=\"number\" InputLabelProps={{shrink: true,}} \r\n                          InputProps={{inputProps: { \r\n                            max: 100, min: 0 }}} label=\"minutes\" variant=\"outlined\" defaultValue={this.state.minutes} onChange={this.handleMinutes} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"demo-simple-select-label\">Location</InputLabel>\r\n                          <Select\r\n                            native \r\n                            id=\"demo-simple-select\"\r\n                            value={this.state.location}\r\n                            onChange={this.handleLocation}\r\n                            label=\"Endroit\"\r\n                          >\r\n                            <option value=\"indoors\">Indoors</option>\r\n                            <option value=\"outdoors\">Outdoors</option>\r\n                            <option value=\"train\">Train with air filtration</option>\r\n                            <option value=\"car\">Moving car, windows opened</option>\r\n                            <option value=\"plane\">Avion</option>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormControlLabel\r\n                          control={<Checkbox color=\"primary\" checked={this.state.wearMask}\r\n                            onChange={this.handleChange}\r\n                            name=\"wearMask\"\r\n                            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                          />} label=\"Are you wearing a mask ?\" />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField id=\"outlined-basic\" style={{width: 90}} type=\"number\" InputLabelProps={{shrink: true,}} \r\n                       InputProps={{inputProps: { \r\n                        max: 100, min: 0 }}} label=\"other people\" variant=\"outlined\" defaultValue={this.state.nbPeople} onChange={this.handleNbPeople} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField id=\"outlined-basic\" style={{width: 90}} type=\"number\" InputLabelProps={{shrink: true,}}\r\n                        InputProps={{inputProps: { \r\n                          max: this.state.nbPeople, min: 0 }}} label=\"other masks\" variant=\"outlined\" defaultValue={this.state.nbMasked} onChange={this.handleNbMasked} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"demo-simple-select-label\">Conversation</InputLabel>\r\n                          <Select\r\n                            native \r\n                            id=\"demo-simple-select\"\r\n                            value={this.state.talking}\r\n                            onChange={this.handleTalking}\r\n                            label=\"Nb people\"\r\n                          >\r\n                            <option value=\"quiet\">No talking</option>\r\n                            <option value=\"normal\">Normal</option>\r\n                            <option value=\"loud\">Loud</option>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"demo-simple-select-label\">Distance</InputLabel>\r\n                          <Select\r\n                            native \r\n                            style={{width: 90}}\r\n                            id=\"demo-simple-select\"\r\n                            value={this.state.distance}\r\n                            onChange={this.handleDistance}\r\n                            label=\"Nb people\"\r\n                          >\r\n                            <option value=\"close\">Close (&le;30cm)</option>\r\n                            <option value=\"normal\">Normal (1m)</option>\r\n                            <option value=\"long\">Long (2m)</option>\r\n                            <option value=\"veryLong\">Very long (&ge;3m)</option>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"demo-simple-select-label\">Risk profile</InputLabel>\r\n                          <Select\r\n                            native \r\n                            id=\"demo-simple-select\"\r\n                            value={this.state.riskProfile}\r\n                            onChange={this.handleRiskProfile}\r\n                          >\r\n                            <option value=\"average\">Standard</option>\r\n                            <option value=\"worker\">Frontline worker / active social life</option>\r\n                            <option value=\"nonWorker\">Work from home</option>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                  </Grid>\r\n            </Grid>\r\n            <br/>\r\n            <div className={classes.root}>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => {this.setState({ showForm: true }); this.setActivityRisk()}}\r\n              >\r\n                {\" \"}\r\n                Submit\r\n              </Button>\r\n            </div>\r\n      </Box>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"riskForm_container\">\r\n          {this.state.showForm ? this.showForm() : this.showCreator()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RiskFormEng);\r\n",["177","178"],"D:\\Dev\\covinsights\\src\\components\\Calculator\\NewMath.js",["179","180","181","182"],"class Universe{\r\n\t/*\r\n\tThe universe class contains the prevalence at time, as well as the\r\n\tprobabilities of changing state. There should be a common universe to\r\n\tall persons and activities in an experiment, for easy update.\r\n\t*/\r\n\tconstructor(prevalence){\r\n\t\tthis.prevalence = prevalence;\r\n\t}\r\n\t\r\n\tsetPrevalence(prevalence){\r\n\t\tthis.prevalence = prevalence;\r\n\t}\r\n\t/*\r\n\t- Probability of being hospitalized if infected;\r\n\t- Probability of needing ICU if hospitalized;\r\n\t- Probability of dying if hospitalized.\r\n\tAll the numbers come from the paper of Institut Pasteur :\r\n\t\"Estimating the burden of SARS-CoV-2 in France\"\r\n\thttps://hal-pasteur.archives-ouvertes.fr/pasteur-02548181/document\r\n\t*/\r\n\tageFactors(age=\"20\", gender=\"ND\"){\r\n\t\tvar hospAgeFactor, reaAgeFactor, deathAgeFactor;\r\n\t\tif(gender===\"M\"){\r\n\t\t\tif (age < 20){\r\n\t\t\t\thospAgeFactor = 0.1;\r\n\t\t\t\treaAgeFactor = 17.5;\r\n\t\t\t\tdeathAgeFactor = 1.2;\r\n\t\t\t}\r\n\t\t\telse if (age < 30){\r\n\t\t\t\thospAgeFactor = 0.6;\r\n\t\t\t\treaAgeFactor = 12.2;\r\n\t\t\t\tdeathAgeFactor = 1.3;\r\n\t\t\t}\r\n\t\t\telse if (age < 40){\r\n\t\t\t\thospAgeFactor = 1.2;\r\n\t\t\t\treaAgeFactor = 17.2;\r\n\t\t\t\tdeathAgeFactor = 2.5;\r\n\t\t\t}\r\n\t\t\telse if (age < 50){\r\n\t\t\t\thospAgeFactor = 1.6;\r\n\t\t\t\treaAgeFactor = 24.3;\r\n\t\t\t\tdeathAgeFactor = 3.9;\r\n\t\t\t}\r\n\t\t\telse if (age < 60){\r\n\t\t\t\thospAgeFactor = 3.2;\r\n\t\t\t\treaAgeFactor = 31.7;\r\n\t\t\t\tdeathAgeFactor = 7.5;\r\n\t\t\t}\r\n\t\t\telse if (age < 70){\r\n\t\t\t\thospAgeFactor = 7.0;\r\n\t\t\t\treaAgeFactor = 36.4;\r\n\t\t\t\tdeathAgeFactor = 14.2;\r\n\t\t\t}\r\n\t\t\telse if (age < 80){\r\n\t\t\t\thospAgeFactor = 11.4;\r\n\t\t\t\treaAgeFactor = 29.0;\r\n\t\t\t\tdeathAgeFactor = 25.3;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\thospAgeFactor = 31.4;\r\n\t\t\t\treaAgeFactor = 5.7;\r\n\t\t\t\tdeathAgeFactor = 42.0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(gender===\"F\"){\r\n\t\t\tif (age<20){\r\n\t\t\t\thospAgeFactor = 0.09;\r\n\t\t\t\treaAgeFactor = 8.5;\r\n\t\t\t\tdeathAgeFactor = 0.;\r\n\t\t\t}\r\n\t\t\telse if (age<30){\r\n\t\t\t\thospAgeFactor = 0.5;\r\n\t\t\t\treaAgeFactor = 6.8;\r\n\t\t\t\tdeathAgeFactor = 1.4;\r\n\t\t\t}\r\n\t\t\telse if (age<40){\r\n\t\t\t\thospAgeFactor = 0.9;\r\n\t\t\t\treaAgeFactor = 10.4;\r\n\t\t\t\tdeathAgeFactor = 1.6;\r\n\t\t\t}\r\n\t\t\telse if (age<50){\r\n\t\t\t\thospAgeFactor = 1.3;\r\n\t\t\t\treaAgeFactor = 14.3;\r\n\t\t\t\tdeathAgeFactor = 3.2;\r\n\t\t\t}\r\n\t\t\telse if (age<60){\r\n\t\t\t\thospAgeFactor = 2.5;\r\n\t\t\t\treaAgeFactor = 19.0;\r\n\t\t\t\tdeathAgeFactor = 6.4;\r\n\t\t\t}\r\n\t\t\telse if (age<70){\r\n\t\t\t\thospAgeFactor = 5.3;\r\n\t\t\t\treaAgeFactor = 21.6;\r\n\t\t\t\tdeathAgeFactor = 12.0;\r\n\t\t\t}\r\n\t\t\telse if (age<80){\r\n\t\t\t\thospAgeFactor = 8.0;\r\n\t\t\t\treaAgeFactor = 17.0;\r\n\t\t\t\tdeathAgeFactor = 20.7;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\thospAgeFactor = 15.9;\r\n\t\t\t\treaAgeFactor = 3.4;\r\n\t\t\t\tdeathAgeFactor = 34.0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// si gender non défini on met la moyenne\r\n\t\telse{\r\n\t\t\tif (age<20){\r\n\t\t\t\thospAgeFactor = 0.1;\r\n\t\t\t\treaAgeFactor = 13.5;\r\n\t\t\t\tdeathAgeFactor = 0.6;\r\n\t\t\t}\r\n\t\t\telse if (age<30){\r\n\t\t\t\thospAgeFactor = 0.5;\r\n\t\t\t\treaAgeFactor = 9.8;\r\n\t\t\t\tdeathAgeFactor = 1.4;\r\n\t\t\t}\r\n\t\t\telse if (age<40){\r\n\t\t\t\thospAgeFactor = 1.0;\r\n\t\t\t\treaAgeFactor = 14.1;\r\n\t\t\t\tdeathAgeFactor = 2.1;\r\n\t\t\t}\r\n\t\t\telse if (age<50){\r\n\t\t\t\thospAgeFactor = 1.5;\r\n\t\t\t\treaAgeFactor = 19.8;\r\n\t\t\t\tdeathAgeFactor = 3.6;\r\n\t\t\t}\r\n\t\t\telse if (age<60){\r\n\t\t\t\thospAgeFactor = 2.8;\r\n\t\t\t\treaAgeFactor = 25.9;\r\n\t\t\t\tdeathAgeFactor = 7.0;\r\n\t\t\t}\r\n\t\t\telse if (age<70){\r\n\t\t\t\thospAgeFactor = 6.1;\r\n\t\t\t\treaAgeFactor = 29.7;\r\n\t\t\t\tdeathAgeFactor = 13.2;\r\n\t\t\t}\r\n\t\t\telse if (age<80){\r\n\t\t\t\thospAgeFactor = 9.6;\r\n\t\t\t\treaAgeFactor = 23.5;\r\n\t\t\t\tdeathAgeFactor = 23.2;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\thospAgeFactor = 21.7;\r\n\t\t\t\treaAgeFactor = 4.6;\r\n\t\t\t\tdeathAgeFactor = 38.4;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [hospAgeFactor/100, reaAgeFactor/100, deathAgeFactor/100];\t\r\n\t}\r\n}\r\n\r\nclass BasicUniverse extends Universe{\r\n\tconstructor(){\r\n\t\tsuper(0.008); // Prevalence in early December in France.\r\n\t}\r\n}\r\n\r\nclass RiskProfile{\r\n\tconstructor(type=\"basic\"){\r\n\t\tthis.type = type;\r\n\t}\r\n\t\r\n\tgetProfileRisk(){\r\n\t\treturn 1.0;\r\n\t}\r\n}\r\n\r\nclass NonWorkerRiskProfile extends RiskProfile{\r\n\tconstructor(){\r\n\t\tsuper(\"nonWorker\");\r\n\t}\r\n\tgetProfileRisk(){\r\n\t\treturn 1.0 / 3.0;\r\n\t}\r\n}\r\n\r\nclass WorkerRiskProfile extends RiskProfile{\r\n\tconstructor(){\r\n\t\tsuper(\"worker\");\r\n\t}\r\n\tgetProfileRisk(){\r\n\t\treturn 3.0;\r\n\t}\r\n}\r\n\r\nclass CustomActivity{\r\n    constructor(name=\"an activity\", duration=60, nb_people=1, mask=false, maskProportion=0., talking=\"normal\", location=\"indoors\", distance=\"normal\", riskProfile=new RiskProfile()){\r\n\t\tthis.name = name;\r\n\t\tthis.duration=duration;\r\n\t\tthis.nb_people = nb_people;\r\n\t\tthis.mask = mask;\r\n\t\tthis.maskProportion = maskProportion;\r\n\t\tthis.talking = talking;\r\n\t\tthis.location=location;\r\n\t\tthis.distance=distance;\r\n\t\tthis.hours = Math.floor(duration/60);\r\n        this.minutes = duration % 60;\r\n        this.riskProfile=riskProfile;\r\n\t}\r\n    \r\n    getRisk(){\r\n\t\tvar risk = 0.06\r\n\t\tif (this.mask){\r\n\t\t\trisk = risk / 2;\r\n\t\t}\r\n\t\trisk = risk * (1 - 0.75 * this.maskProportion);\r\n\t\tif (this.location==\"outdoors\"){\r\n\t\t\trisk = risk / 20;\r\n        }\r\n        if (this.location==\"train\" || this.location==\"car\"){\r\n\t\t\trisk = risk / 4;\r\n        }\r\n        if (this.location==\"plane\"){\r\n\t\t\trisk = risk / 6;\r\n\t\t}\r\n\t\tif (this.talking === \"loud\"){\r\n\t\t\trisk = risk * 5;\r\n\t\t}\r\n\t\tif (this.talking === \"quiet\"){\r\n\t\t\trisk = risk / 5;\r\n\t\t}\r\n\t\tif (this.distance ===\"close\"){\r\n\t\t\trisk = risk * 2;\r\n\t\t}\r\n\t\tif (this.distance === \"long\"){\r\n\t\t\trisk = risk /2;\r\n\t\t}\r\n\t\tif (this.distance === \"veryLong\"){\r\n\t\t\trisk = risk /4;\r\n\t\t}\r\n        risk = risk * this.riskProfile.getProfileRisk();\r\n        // This, multiplied by the prevalence, gives the probability of getting covid from a 1h interaction with the person\r\n\t\treturn [risk, this.hours, this.minutes, this.nb_people];\r\n\t}\r\n}\r\n\r\nclass Person extends RiskProfile{\r\n\tconstructor(name, age, gender=\"ND\", activity_list=[], universe = new BasicUniverse()){\r\n\t\tsuper(universe);\r\n\t\tthis.name = name;\r\n\t\tthis.age = age;\r\n\t\tthis.gender = gender;\r\n\t\tthis.activityList = activity_list;\r\n\t\tthis.universe = universe;\r\n\t\tthis.ageFactors = this.universe.ageFactors(this.age, this.gender);\r\n\t}\r\n\t\r\n\taddActivity(activity){\r\n\t\tthis.activityList.push(activity);\r\n\t}\r\n\t\r\n\tclearActivityList(){\r\n\t\t// Javascript has a garbage collector so no need to care about memory release.\r\n\t\tthis.activityList = [];\r\n\t}\r\n\t\r\n\tgetRisk(){\r\n\t\t// Returns the probability of having the disease\r\n\t\tvar risk=1;\r\n\t\tif(this.activityList === undefined || this.activityList.length === 0)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar i=0;\r\n\t\tfor(i=0; i<this.activityList.length; i++)\r\n\t\t{\r\n            var myActi = this.activityList[i].getRisk(); // [risk, hours, minutes, nb_people]\r\n            var myRisk = myActi[0] * this.universe.prevalence;\r\n            // Handle duration\r\n\t\t\tvar composedRisk = 1 - Math.pow((1-myRisk),myActi[1])*(1-myRisk*myActi[2]/60);\r\n\t\t\t// We hardcap the risk from one single person to the household value, 0.5.\r\n\t\t\tif(composedRisk>0.5){\r\n\t\t\t\tcomposedRisk=0.5;\r\n\t\t\t}\r\n            // Handle nb people\r\n            var totalRisk = Math.pow((1-composedRisk), myActi[3]); // gives 1-the risk\r\n\r\n\t\t\trisk = risk*totalRisk;\r\n        }\r\n        risk=1-risk;\r\n\t\treturn risk;\r\n\t}\r\n\t\r\n\tcomputeAgeDangerProfile(){\r\n\t\t// Probability of catching the disease, being hospitalized, ICU, death.\r\n\t\tvar risk = this.getRisk();\r\n\t\tvar riskHosp = risk * this.ageFactors[0];\r\n\t\tvar riskRea = riskHosp * this.ageFactors[1];\r\n\t\tvar riskDeath = riskHosp * this.ageFactors[2];\r\n\t\treturn [risk, riskHosp, riskRea, riskDeath];\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass Interaction{\r\n\tconstructor(name){\r\n\t\tthis.name = name;\r\n\t}\r\n\t\r\n\tgetRisk(){\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\nclass InteractionOne extends Interaction{\r\n\tconstructor(name=\"an activity\", duration=60, maskA=false, maskB=false, talking=\"normal\", outdoors=false, distance=\"normal\"){\r\n\t\t/* A one on one interaction. Options are :\r\n\t\ttalking = \"normal\", \"loud\" (x3), \"quiet\" (/3)\r\n\t\toutdoors (/20)\r\n\t\tdistance = \"normal\", \"close\" (x2), \"long\" (/2) */\r\n\t\tsuper(name);\r\n\t\tthis.duration=duration;\r\n\t\tthis.maskA=maskA;\r\n\t\tthis.maskB=maskB;\r\n\t\tthis.talking = talking;\r\n\t\tthis.outdoors=outdoors;\r\n\t\tthis.distance=distance;\r\n\t\tthis.hours = Math.floor(duration/60);\r\n\t\tthis.minutes = duration % 60;\r\n\t}\r\n\t\r\n\tsetMask(maskA,maskB){\r\n\t\tthis.maskA = maskA;\r\n\t\tthis.maskB = maskB;\r\n\t}\r\n\t\r\n\t// Returns the risk of contamination if the other has the disease.\r\n\tgetActivityRisk(){\r\n\t\tvar risk = 0.06\r\n\t\tif (this.maskA){\r\n\t\t\trisk = risk / 2;\r\n\t\t}\r\n\t\tif (this.maskB){\r\n\t\t\trisk = risk / 4;\r\n\t\t}\r\n\t\tif (this.outdoors){\r\n\t\t\trisk = risk / 20;\r\n\t\t}\r\n\t\tif (this.talking === \"loud\"){\r\n\t\t\trisk = risk * 5;\r\n\t\t}\r\n\t\tif (this.talking === \"quiet\"){\r\n\t\t\trisk = risk / 5;\r\n\t\t}\r\n\t\tif (this.distance ===\"close\"){\r\n\t\t\trisk = risk * 2;\r\n\t\t}\r\n\t\tif (this.distance === \"long\"){\r\n\t\t\trisk = risk /2;\r\n\t\t}\r\n\t\tif (this.distance === \"veryLong\"){\r\n\t\t\trisk = risk /4;\r\n\t\t}\r\n\t\tvar finalRisk = 0\r\n\t\t// Adapting the risk to the duration. 6% chance of contamination per hour.\r\n\t\tvar i;\r\n\t\tfor (i=0; i< this.hours; i++){\r\n\t\t\tfinalRisk = finalRisk + (1-finalRisk)*risk;\r\n\t\t}\r\n\t\tfinalRisk = finalRisk + (1-finalRisk)*risk*this.minutes/60;\r\n\t\treturn finalRisk;\r\n\t}\r\n}\r\n\r\n// Recreating the defaultdict from python.\r\nclass DefaultDict {\r\n    constructor(defaultVal) {\r\n      return new Proxy({}, {\r\n        get: (target, name) => name in target ? target[name] : defaultVal\r\n      })\r\n    }\r\n  }\r\n\r\nclass GroupReunion{\r\n\t/*\r\n\tSimulating a family gathering. The mask policy can be \"none\", \"all\", or \"under50\".\r\n\tIn the latter, only the people younger than 50 wear a mask.\r\n\tOutput : the probability that at least one person is sick, hospitalized or dies,\r\n\tas well as the average number of hospitalizations, ICU or death.\r\n\tFinally, we estimate the number of family gatherings and compute the\r\n\tcount for the whole country, as the \"cost\" of christmas.\r\n\t*/\r\n\tconstructor(duration=60, maskPolicy=\"none\", distance=\"normal\", outdoors=false, talking=\"normal\", personList=[]){\r\n\t\tthis.duration = duration;\r\n\t\tthis.maskPolicy = maskPolicy;\r\n\t\tthis.distance = distance;\r\n\t\tthis.outdoors = outdoors;\r\n\t\tthis.talking = talking;\r\n\t\tthis.personList = personList;\r\n\t\tthis.generateMasked();\r\n\t\t// We use a one-on-one interaction to compute the various risks.\r\n        this.interaction = new InteractionOne(\"meeting\", this.duration, false, false, this.talking, this.outdoors, this.distance);\r\n\t\t// *** TODO *** Ajouter le calcul du profil de risque.\r\n\t}\r\n\t\r\n\tgenerateMasked(){\r\n\t\t// Compute who wears a mask according to the mask policy.\r\n\t\tthis.masked = new DefaultDict(false);\r\n\t\tif(this.maskPolicy===\"all\"){\r\n\t\t\tthis.masked = new DefaultDict(true);\r\n\t\t}\r\n\t\telse if(this.maskPolicy===\"under50\"){\r\n\t\t\tvar i = 0;\r\n\t\t\tfor(i=0; i<this.personList.length;i++){\r\n\t\t\t\tif(this.personList[i].age < 50){\r\n\t\t\t\t\tthis.masked[i] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\taddPerson(p){\r\n\t\tthis.personList.push(p);\r\n\t}\r\n\t\r\n\tupdate(){\r\n\t\tthis.generateMasked();\r\n\t\t// *** TODO *** Ajouter le calcul de this.riskProfile\r\n\t}\r\n\t\r\n\tcomputeRiskProfile(){\r\n\t\t/*\r\n\t\tFormulas :\r\n\t\t- Mean number of people hospitalized : sum(p_hosp)\r\n\t\t- Probability that at least one person is hospitalized : 1 - prod(1-p_hosp)\r\n\t\t*/\r\n\t\tvar risk = 1.0;\r\n\t\tvar hospRisk = 1.0;\r\n\t\tvar reaRisk = 1.0;\r\n\t\tvar deathRisk = 1.0;\r\n\t\tvar moyenneHosp = 0.0;\r\n\t\tvar moyenneRea = 0.0;\r\n\t\tvar moyenneDeaths = 0.0;\r\n\t\tvar i;\r\n\t\tfor(i=0; i<this.personList.length;i++){\r\n\t\t\tvar myRisk = this.personList[i].get_risk();\r\n\t\t\t// We update the probability that no-one has the disease\r\n\t\t\trisk = risk * (1-myRisk);\r\n\t\t\tvar j;\r\n\t\t\tfor(j=0; j<this.personList.length; j++){\r\n\t\t\t\tthis.interaction.setMask(this.masked[i], this.masked[j]);\r\n\t\t\t\t// Updating the risk for person i by taking into account the possible\r\n\t\t\t\t// contamination by person j.\r\n\t\t\t\tmyRisk = myRisk + (1-myRisk)*this.interaction.getActivityRisk()*this.personList[j].getRisk();\r\n\t\t\t}\r\n\t\t\tvar hospProba = this.personList[i].ageFactors[0];\r\n\t\t\tvar reaProba = this.personList[i].ageFactors[1];\r\n\t\t\tvar deathProba = this.personList[i].ageFactors[2];\r\n\t\t\t// Updating the proba that no-one gets hospitalized\r\n\t\t\thospRisk = hospRisk * (1 - myRisk*hospProba);\r\n\t\t\treaRisk = reaRisk * (1 - myRisk*hospProba*reaProba)\r\n\t\t\tdeathRisk = deathRisk  *(1 - myRisk*hospProba*deathProba)\r\n\t\t\t// Updating the average number of hospitalizations\r\n\t\t\tmoyenneHosp = moyenneHosp + myRisk*hospProba\r\n\t\t\tmoyenneRea = moyenneRea + myRisk*hospProba*reaProba\r\n\t\t\tmoyenneDeaths = moyenneDeaths + myRisk*hospProba*deathProba\r\n\t\t}\r\n\t\trisk = 1-risk;\r\n\t\thospRisk = 1-hospRisk;\r\n\t\treaRisk = 1-reaRisk;\r\n\t\tdeathRisk = 1-deathRisk;\r\n\t\treturn [risk, hospRisk, reaRisk, deathRisk, moyenneHosp, moyenneRea, moyenneDeaths];\r\n\t}\r\n}\r\n\r\nexport {BasicUniverse, CustomActivity, Person, Universe, GroupReunion, RiskProfile, NonWorkerRiskProfile, WorkerRiskProfile, InteractionOne};",["183","184"],"D:\\Dev\\covinsights\\src\\css\\NavbarWrapper.js",[],"D:\\Dev\\covinsights\\src\\components\\Navbar.js",[],"D:\\Dev\\covinsights\\src\\index.js",[],"D:\\Dev\\covinsights\\src\\pages\\familyGathering.js",[],"D:\\Dev\\covinsights\\src\\pages\\familyGatheringEng.js",[],"D:\\Dev\\covinsights\\src\\pages\\Error.js",[],"D:\\Dev\\covinsights\\src\\pages\\insightsEng.js",[],"D:\\Dev\\covinsights\\src\\pages\\WhitePaper.js",[],"D:\\Dev\\covinsights\\src\\pages\\WhitePaperEng.js",[],["185","186"],"D:\\Dev\\covinsights\\src\\components\\constants\\activitiesEng.js",["187"],"export default [\r\n    {\r\n      name: \"2 people indoors dinner\",\r\n      wearMask: false,\r\n      duration:90,\r\n      nbPeople: 1,\r\n      nbMasked: 0,\r\n      location: \"indoors\",\r\n      talking: \"normal\",\r\n      distance: \"normal\",\r\n      riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name: \"One night stand\",\r\n        wearMask:false,\r\n        duration:300,\r\n        nbPeople:1,\r\n        nbMasked:0,\r\n        outdoors:false,\r\n        talking:\"normal\",\r\n        distance:\"close\",\r\n        riskProfile:\"worker\",\r\n    },\r\n    {\r\n        name: \"Dance lesson (with fixed partner)\",\r\n        wearMask: true,\r\n        duration:60,\r\n        nbPeople: 20,\r\n        nbMasked: 20,\r\n        location: \"indoors\",\r\n        talking: \"normal\",\r\n        distance: \"normal\",\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name: \"Concert (seated, with mask)\",\r\n        wearMask: true,\r\n        duration:120,\r\n        nbPeople: 10,\r\n        nbMasked: 10,\r\n        location: \"indoors\",\r\n        talking: \"loud\",\r\n        distance: \"normal\",\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Concert (pit, no mask)\",\r\n        wearMask: true,\r\n        duration: 120,\r\n        nbPeople: 100,\r\n        nbMasked: 100,\r\n        location: \"indoors\",\r\n        talking: \"loud\",\r\n        distance: \"normal\",\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"School/University (one day)\",\r\n        nbPeople: 10,\r\n        duration: 480,\r\n        wearMask: true,\r\n        nbMasked: 10,\r\n        location: \"indoors\",\r\n        distance: \"long\",\r\n        talking: 'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Queue (30mn)\",\r\n        wearMask: true,\r\n        duration: 30,\r\n        nbPeople: 4,\r\n        nbMasked: 4,\r\n        location: \"indoors\",\r\n        talking: \"normal\",\r\n        distance: \"normal\",\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Delivery food (with mask)\",\r\n        nbPeople:1,\r\n        duration:5,\r\n        wearMask: true,\r\n        nbMasked:1,\r\n        location: \"indoors\",\r\n        distance:\"long\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Walk in the park\",\r\n        nbPeople:3,\r\n        duration:60,\r\n        wearMask: false,\r\n        nbMasked:0.,\r\n        location: \"outdoors\",\r\n        distance:\"veryLong\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"2 people outdoors lunch\",\r\n        nbPeople:1,\r\n        duration:90,\r\n        wearMask: false,\r\n        nbMasked:0.,\r\n        location: \"outdoors\",\r\n        distance:\"normal\",\r\n        talking:'normal',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Library/Museum (with mask)\",\r\n        nbPeople:5,\r\n        duration:120,\r\n        wearMask:true,\r\n        nbMasked:5,\r\n        outdoors:false,\r\n        distance:\"long\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Grocery shopping\",\r\n        nbPeople:10,\r\n        duration:30,\r\n        wearMask:true,\r\n        nbMasked:10,\r\n        outdoors:false,\r\n        distance:\"normal\",\r\n        talking:'quiet',\r\n        riskProfile: \"worker\",\r\n    },\r\n    {\r\n        name:\"2h picnic\",\r\n        nbPeople:5,\r\n        duration:120,\r\n        wearMask:false,\r\n        nbMasked:0,\r\n        location:\"outdoors\",\r\n        distance:\"normal\",\r\n        talking:'normal',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Working in an open space\",\r\n        nbPeople:10,\r\n        duration:480,\r\n        wearMask:true,\r\n        nbMasked:10,\r\n        outdoors:false,\r\n        distance:\"long\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Public transportation (1h)\",\r\n        nbPeople:20,\r\n        duration:60,\r\n        wearMask:true,\r\n        nbMasked:20,\r\n        outdoors:false,\r\n        distance:\"normal\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"2h indoors group dinner\",\r\n        nbPeople:4,\r\n        duration:120,\r\n        wearMask:false,\r\n        nbMasked:0,\r\n        outdoors:false,\r\n        distance:\"normal\",\r\n        talking:'normal',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Cinema/Theater\",\r\n        nbPeople:50,\r\n        duration:120,\r\n        wearMask:true,\r\n        nbMasked:50,\r\n        outdoors:false,\r\n        distance:\"long\",\r\n        talking:'quiet',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Theater (1st rank)\",\r\n        nbPeople:8,\r\n        duration:120,\r\n        wearMask:true,\r\n        nbMasked:0,\r\n        outdoors:false,\r\n        distance:\"long\",\r\n        talking:'loud',\r\n        riskProfile: \"worker\",\r\n    },\r\n    {\r\n        name:\"3h game night with 4 friends\",\r\n        nbPeople:4,\r\n        duration:180,\r\n        wearMask:false,\r\n        nbMasked:0,\r\n        outdoors:false,\r\n        distance:\"normal\",\r\n        talking:'normal',\r\n        riskProfile: \"normal\",\r\n    },\r\n    {\r\n        name:\"Uber (30mn)\",\r\n        nbPeople:1,\r\n        duration:30,\r\n        wearMask:true,\r\n        nbMasked:1,\r\n        location:\"car\",\r\n        distance:\"normal\",\r\n        talking:'normal',\r\n        riskProfile: \"normal\",\r\n    }\r\n  ]\r\n  ",["188","189"],"D:\\Dev\\covinsights\\src\\css\\PortfolioItemWrapper.js",[],"D:\\Dev\\covinsights\\src\\components\\Layout.js",["190"],"import React from \"react\"\r\nimport { ThemeProvider } from \"styled-components\"\r\nimport { Theme, GlobalStyle } from \"../css\"\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <main>\r\n      <ThemeProvider theme={Theme}>\r\n        <GlobalStyle />\r\n        {children}\r\n        {/* <Footer /> */}\r\n      </ThemeProvider>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","D:\\Dev\\covinsights\\src\\pages\\calculator.js",[],"D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\PersonCard.js",["191","192","193","194","195","196","197","198"],"import React, { Children, Component } from \"react\"\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from \"@material-ui/core/Box\"\r\nimport { IconButton, Button } from \"@material-ui/core\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport {InteractionCrowd, Activity, BasicUniverse, RiskProfile, WorkerRiskProfile, NonWorkerRiskProfile} from '../Calculator/MyMath.js';\r\n\r\nconst propsForForm = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"18rem\", height: \"13rem\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  pl: \"1rem\",\r\n  pr: \"2rem\",\r\n  pt: \"0rem\",\r\n}\r\n\r\nconst propsForDisplay = {\r\n  bgcolor: \"background.paper\",\r\n  borderColor: \"text.primary\",\r\n  m: \"auto\",\r\n  border: 0,\r\n  style: { width: \"16rem\", height: \"5rem\" },\r\n  boxShadow: 3,\r\n  mx: \"auto\",\r\n  px: \"1rem\",\r\n  position:\"relative\",\r\n  bottom:\"2rem\"\r\n}\r\n\r\nclass PersonCard extends Component {\r\n  state = {\r\n    showForm: this.props.showForm,\r\n    id: this.props.id,\r\n    name: this.props.name,\r\n    gender: this.props.gender,\r\n    age: this.props.age,\r\n    risk : this.props.risk,\r\n    activityRisk : 0,\r\n    universe: new BasicUniverse(),\r\n  }\r\n\r\n  handleNameField = (e) => {\r\n    this.setState({name: e.target.value});\r\n  }\r\n\r\n  handleGender = (e) => {\r\n      this.setState({gender:e.target.value});\r\n  }\r\n\r\n  handleAge = (e) => {\r\n      this.setState({age:Number(e.target.value)});\r\n  }\r\n\r\n  handleRisk = (e) => {\r\n      this.setState({risk:Number(e.target.value)});\r\n  }\r\n\r\n  showForm = () => {\r\n    return (\r\n        <div className=\"risk_form\">\r\n            <Tooltip title=\"Modifier\">\r\n            <IconButton className=\"edit_button\" aria-label=\"modify\" size=\"small\" onClick={() => this.setState({ showForm: false })}>\r\n            <EditIcon />\r\n            </IconButton>\r\n            </Tooltip>          \r\n        <Box borderRadius={16} {...propsForDisplay}>\r\n          {this.props.children}\r\n            <div className=\"show_activity\">\r\n                    {this.state.name}.\r\n            </div>\r\n        </Box>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  showCreator = () => {\r\n    return (\r\n        <Box borderRadius={16} {...propsForForm}>\r\n        <div className=\"person_delete_button_creator\">\r\n                <Tooltip title=\"Supprimer\">\r\n                <IconButton z-index={5000} aria-label=\"delete\" size=\"small\" onClick={() => this.props.delete()}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n        </div>\r\n        <Grid container spacing={1} justify=\"center\" className=\"form_activity_grid\">\r\n                <Grid item className=\"grid_name_activity\">\r\n                  <TextField id=\"outlined-basic\" size=\"small\" style={{width: 180}} label=\"Nom\" variant=\"outlined\" defaultValue={this.state.name} onChange={this.handleNameField} />\r\n                </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} justify=\"center\" className=\"form_inner_grid\">\r\n                <Grid item>\r\n                          <TextField id=\"outlined-basic\" style={{width: 70}} type=\"number\" InputLabelProps={{shrink: true,}} label=\"Age\" variant=\"outlined\" defaultValue={this.state.age} onChange={this.handleAge} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <FormControl variant=\"outlined\">\r\n                        <InputLabel id=\"sexe-label\" left='5px'>Sexe</InputLabel>\r\n                        <Select\r\n                        native \r\n                        labelId=\"sexe-label\"\r\n                        label=\"Sexe\"\r\n                        variant=\"outlined\"\r\n                        id=\"demo-simple-select\"\r\n                        value={this.state.gender}\r\n                        onChange={this.handleGender}\r\n                        >\r\n                        <option value=\"F\">F</option>\r\n                        <option value=\"M\">M</option>\r\n                        <option value=\"ND\">ND</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                          <TextField id=\"outlined-basic\" style={{width: 70}} type=\"number\" label=\"Risque(%)\" variant=\"outlined\" defaultValue={this.state.risk} onChange={this.handleRisk} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={() => {this.setState({ showForm: true });\r\n                        this.props.updatePerson(this.state.id, this.state.age, this.state.gender, this.state.risk)}}\r\n                    >\r\n                        {\" \"}\r\n                        Submit\r\n                    </Button>\r\n                </Grid>\r\n        </Grid>\r\n  </Box>\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"personCard_container\">\r\n          {this.state.showForm ? this.showForm() : this.showCreator()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default PersonCard;\r\n","D:\\Dev\\covinsights\\src\\css\\BannerWrapper.js",[],"D:\\Dev\\covinsights\\src\\css\\GlobalStyle.js",[],"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskCalculator.js",["199","200"],"import React, { Component, lazy, Suspense } from \"react\"\r\nimport RiskForm from \"./RiskForm.js\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Chip from '@material-ui/core/Chip';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { IconButton} from \"@material-ui/core\"\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport list_activities from '../constants/activities.js';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport { Person } from \"./NewMath.js\"\r\nimport { NavLink } from 'react-router-dom';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport * as Scroll from 'react-scroll';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst load = (Component) => (props) => {\r\n  return (\r\n  <Suspense fallback={<CircularProgress />}>\r\n    <Component {...props}/>\r\n  </Suspense>\r\n  )\r\n}\r\n\r\nconst Evolution = load(lazy( () =>  import('./Evolution.js')));\r\n\r\n/*\r\n***** TODO *****\r\nFaire que le globalRisk soit envoyé non pas au calcul, mais quand on appuie\r\nsur un bouton \"what does it mean for a family reunion\"\r\n(qui link du même coup au family reunion)\r\n\r\n***** END TODO *****\r\n*/\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n});\r\n\r\nclass RiskCalculator extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {blockActivities: [], activities: {}, nextId:0, risk:0, toggleResult:false, person: new Person(),\r\n          evolution:()=><Evolution risk={0}/>, alpha:0.2, gamma:0.33}\r\n    this.defaultActivityArgs = {\r\n      name:\"Activité\",\r\n      wearMask: false,\r\n      duration:60,\r\n      nbPeople: 1,\r\n      nbMasked: 0,\r\n      location:\"indoors\",\r\n      talking: \"normal\",\r\n      distance: \"normal\",\r\n      riskProfile: \"normal\",\r\n      showForm:false,\r\n    }\r\n    this.refResult = React.createRef();\r\n  }\r\n\r\n  updateRisk = (id, acti) => {\r\n    var tabActis = this.state.activities;\r\n    tabActis[id] =acti;\r\n    this.setState({activities:tabActis});\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if(this.state.toggleResult)\r\n    {\r\n      this.refResult.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }\r\n\r\n  getRisk = () => {\r\n    // Updates the risk, and resets and updates the Person\r\n    var p = this.state.person;\r\n    p.clearActivityList();\r\n    var result = 0;\r\n    var mySum=0;\r\n    for (var key in this.state.activities)\r\n    {\r\n      p.addActivity(this.state.activities[key]);\r\n    }\r\n    result = p.getRisk(); // The new risk\r\n\r\n    this.setState({risk:result, person:p, evolution:() => {return (<Evolution riskList={p.activityList} alpha={this.state.alpha} gamma={this.state.gamma} /> )}});\r\n    this.setState({toggleResult:true});\r\n    // Updating the global value of the risk in Navbar\r\n    // this.props.changeGlobalRisk(result);\r\n  }\r\n\r\n  toggleResult = () => {\r\n    this.setState({toggleResult:true});\r\n  }\r\n\r\n  toggleOffResult = () => {\r\n    this.setState({toggleResult:false});\r\n  }\r\n  \r\n  reset = (event) => {\r\n    this.setState({alpha:0.2, gamma:1/3});\r\n  }\r\n\r\n  // Affiche le résultat (appelé sur clic de calculer mon risque)\r\n  // Contient le lien vers le simulateur et lui transmet le risque.\r\n  showResult = () => {\r\n    const riskWeek = Math.round((this.state.risk * 10000 + Number.EPSILON)) / 100;\r\n    var riskYear = 1 - Math.pow((1-this.state.risk), 12); // Risque sur 3 mois\r\n    riskYear = Math.round((riskYear * 10000 + Number.EPSILON)) / 100;\r\n    return (\r\n      <div id=\"calculator_result\">\r\n      <div className=\"calculator_risk_display\" ref={this.refResult}>\r\n        <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n              <span style={{fontWeight:\"bold\"}}>Probabilité d'attraper le virus :</span> <br />\r\n              <div className=\"visible_except_mobile\">\r\n              <Grid container spacing={3} justify=\"center\">\r\n                  <Grid item xs={4}>\r\n                  <div className=\"result_cases\">\r\n                      <div className=\"result_cases_top\">\r\n                          {riskWeek} %\r\n                      </div>\r\n                      <div className=\"result_cases_bottom\">\r\n                          sur une semaine\r\n                      </div>\r\n                  </div>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                  <div className=\"result_cases\">\r\n                      <div className=\"result_cases_top\">\r\n                      {riskYear}%\r\n                      </div>\r\n                      <div className=\"result_cases_bottom\">\r\n                      sur trois mois\r\n                      </div>\r\n                  </div>\r\n                  </Grid>\r\n              </Grid>\r\n              </div>\r\n              <div className=\"visible_mobile_only\">\r\n              <Grid container spacing={1} justify=\"center\">\r\n                  <Grid item xs={5}>\r\n                  <div className=\"result_cases\">\r\n                      <div className=\"result_cases_top\">\r\n                          {riskWeek}%\r\n                      </div>\r\n                      <div className=\"result_cases_bottom\">\r\n                          sur une semaine\r\n                      </div>\r\n                  </div>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                  <div className=\"result_cases\">\r\n                      <div className=\"result_cases_top\">\r\n                      {riskYear} %\r\n                      </div>\r\n                      <div className=\"result_cases_bottom\">\r\n                      sur un an\r\n                      </div>\r\n                  </div>\r\n                  </Grid>\r\n              </Grid>\r\n              </div>\r\n          </Box>\r\n        </div>\r\n      <div id=\"button_to_family\" >\r\n      <NavLink to=\"/familyGathering/\">\r\n      <Fab\r\n      onClick={() => {this.props.changeGlobalRisk(this.state.risk);}}\r\n      variant=\"extended\"\r\n    >\r\n      <GroupAddIcon />\r\n      <Box p=\"0.5rem\">Importer dans le simulateur de réunion familiale</Box>\r\n    </Fab>\r\n    </NavLink>\r\n    </div>\r\n    <div id=\"text_graph_result\">\r\n    Evolution de l'épidémie sur un mois si tout le monde avait le même profil de risque chaque semaine (chiffres en milliers) :\r\n    </div>\r\n    {/* On suppose que les activités correspondent environ à la durée d'incubation (1 semaine en l'occurence) */}\r\n    <div id='graph_result'>{this.state.evolution()}</div>\r\n  </div>\r\n    )\r\n  }\r\n\r\n  addActivity = (args) => {\r\n    const myId = [this.state.nextId]\r\n    const widget = (\r\n      <Grid item className=\"activity_list\">\r\n          <RiskForm id={myId} updateRisk={this.updateRisk} edit={this.toggleOffResult} {...args}>\r\n              <div className=\"delete_button\">\r\n              <Tooltip title=\"Supprimer\">\r\n              <IconButton aria-label=\"delete\" size=\"small\" onClick={() => this.clear(myId[0])}>\r\n              <DeleteIcon />\r\n              </IconButton>\r\n              </Tooltip>\r\n              </div>\r\n          </RiskForm>\r\n      </Grid>\r\n    )\r\n    this.setState({ nextId: this.state.nextId + 1 })\r\n    var widgets = this.state.blockActivities.slice()\r\n    widgets.push(widget)\r\n    this.setState({ blockActivities: widgets })\r\n  }\r\n\r\n  // Premade activities are already filled.\r\n  addPremadeActivity = (args) => {\r\n    const myId = [this.state.nextId]\r\n    const widget = (\r\n      <Grid item className=\"activity_list\">\r\n          <RiskForm id={myId} showForm={false} updateRisk={this.updateRisk} edit={this.toggleOffResult} {...args}>\r\n              <div className=\"delete_button\">\r\n              <Tooltip title=\"Supprimer\">\r\n              <IconButton z-index={5000} aria-label=\"delete\" size=\"small\" onClick={() => {this.clear(myId[0]); this.toggleOffResult()}}>\r\n              <DeleteIcon />\r\n              </IconButton>\r\n              </Tooltip>\r\n              </div>\r\n          </RiskForm>\r\n      </Grid>\r\n    )\r\n    this.setState({ nextId: this.state.nextId + 1 })\r\n    var widgets = this.state.blockActivities.slice()\r\n    widgets.push(widget)\r\n    this.setState({ blockActivities: widgets })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    //this.addActivity(this.defaultActivityArgs);\r\n  }\r\n\r\n  clearAll = () => {\r\n    this.setState({ nextId: 0, blockActivities: [], activities: {}, risk:0, toggleResult:false});\r\n    var p = this.state.person;\r\n    p.clearActivityList();\r\n    this.setState({person:p});\r\n  }\r\n\r\n  clear = id => {\r\n    var widgets = this.state.blockActivities.slice();\r\n    var myActis = this.state.activities;\r\n    widgets[id] = <div />\r\n    delete myActis[id];\r\n    this.setState({ blockActivities: widgets, activities:myActis})\r\n  }\r\n\r\n  generatePremadeCards = () => {\r\n    const { classes } = this.props;\r\n    // sort premade cards\r\n    list_activities.sort((a, b) => (a.name > b.name) ? 1 : -1);\r\n\r\n    return (\r\n      <div id=\"premade_cards\" className={classes.root}>\r\n          {list_activities.map((item, index) => {\r\n            return (\r\n                  <Chip icon={<FaceIcon />} label={item.name} clickable onClick={() => {this.addPremadeActivity(item); this.toggleOffResult()}} />\r\n            )\r\n          })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"risk_calculator\">\r\n        <Grid container spacing={1} justify=\"center\" alignitems=\"center\">\r\n          {this.state.blockActivities}\r\n        </Grid>\r\n        <div className=\"addActivity_buttons\">\r\n        <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n          <Grid container spacing={1}   alignItems=\"center\" justify=\"center\">\r\n            <Grid item>\r\n              <Fab\r\n                onClick={() => {this.addActivity(this.defaultActivityArgs); this.toggleOffResult();}}\r\n                color=\"primary\"\r\n                variant=\"extended\"\r\n              >\r\n                <AddIcon />\r\n                <Box p=\"0.5rem\">Nouvelle activité</Box>\r\n              </Fab>\r\n            </Grid>\r\n            <Grid item>\r\n              <Fab onClick={() => {this.clearAll(); this.toggleOffResult();}} color=\"secondary\" variant=\"extended\">\r\n                <CachedIcon />\r\n                <Box p=\"0.5rem\">Reset</Box>\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        </div>\r\n        <div className=\"addActivity_buttons\">\r\n        <Box pt=\"1rem\" justify=\"right\" m=\"auto\">\r\n          <Grid container spacing={1}   alignItems=\"center\" justify=\"center\">\r\n            <Grid item>\r\n              <Fab\r\n                onClick={() => {this.getRisk(); this.toggleResult();}}\r\n                variant=\"extended\"\r\n              >\r\n                <TouchAppIcon />\r\n                <Box p=\"0.5rem\">Calculer mon risque</Box>\r\n              </Fab>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        </div>\r\n        <div id=\"premade_activities\">\r\n          <h4>Exemples d'activités (à ajuster pour votre cas):</h4>\r\n            {this.generatePremadeCards()}\r\n        </div>\r\n\r\n        <div id=\"calculator-result\" ref={this.refResult}>\r\n        {this.state.toggleResult && this.showResult()}\r\n        </div>\r\n        <br/><br/>\r\n        <div className=\"disclaimer\">\r\n          <h3>Disclaimer</h3>\r\n          Ce site n'a pas fait l'objet d'un processus de revue par des pairs. Il représente donc\r\n          uniquement les estimations des auteurs étant donné les connaissances à leur disposition, qui ne sont pour certaines pas suffisantes pour garantir la précision et la fiabilité\r\n          des chiffres proposés.\r\n          <br/><br/>\r\n          Une faible probabilité n'entraîne pas une absence de risque. Les auteurs recommandent la précaution avant tout, et ne peuvent être tenus responsables\r\n          d'éventuelles conséquences d'actions effectuées par des utilisateurs du site.\r\n\r\n          <br/> <br/>Les probabilités sont calculées dans\r\n          un cadre très général, à l'échelle du pays, et doivent être soigneusement ajustées avant de les appliquer à un cas particulier.\r\n          <br/><br/>\r\n           Ceci n'est pas une source primaire d'information sur le COVID. N'utilisez pas les outils de ce site pour prendre des décisions médicales.\r\n           Continuez à suivre les recommandations du gouvernement.\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RiskCalculator);\r\n","D:\\Dev\\covinsights\\src\\pages\\calculatorEng.js",[],"D:\\Dev\\covinsights\\src\\components\\Calculator\\RiskCalculatorEng.js",["201","202","203"],"D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\Gatherer.js",["204","205","206","207","208"],"D:\\Dev\\covinsights\\src\\components\\FamilyGathering\\GathererEng.js",["209","210","211","212","213"],"D:\\Dev\\covinsights\\src\\components\\constants\\profiles.js",["214"],"import {BasicUniverse} from '../Calculator/NewMath.js';\r\n\r\nconst universe = new BasicUniverse();\r\n\r\nexport default [\r\n    {\r\n        name: \"Père\",\r\n        age: '50',\r\n        gender:'M',\r\n        risk:'0',\r\n    },\r\n    {\r\n        name: \"Mère\",\r\n        age : '50',\r\n        gender:'M',\r\n        risk:'0',\r\n    },\r\n    {\r\n        name: 'Grand-père',\r\n        age: '70',\r\n        gender: 'M',\r\n        risk:'0',\r\n    },\r\n    {\r\n        name: 'Grand-mère',\r\n        age: '70',\r\n        gender : 'F',\r\n        risk:0,\r\n    },\r\n    {\r\n        name : 'Etudiant fêtard',\r\n        age : '20',\r\n        gender:'ND',\r\n        risk: 10,\r\n    },\r\n    {\r\n        name: 'Etudiant qui socialise',\r\n        age : '20',\r\n        gender:'ND',\r\n        risk: 1,\r\n    },\r\n    {\r\n        name: 'Etudiant allant uniquement à l\\'école',\r\n        age: '20',\r\n        gender: 'ND',\r\n        risk: 0.25,\r\n    },\r\n    {\r\n        name: 'Travailleur de première ligne',\r\n        age: '30',\r\n        gender: 'ND',\r\n        risk: universe.prevalence * 3,\r\n    },\r\n    {\r\n        name : 'Personne surveillant son risque',\r\n        age: '30',\r\n        gender: 'ND',\r\n        risk: universe.prevalence / 3,\r\n    },\r\n    {\r\n        name : 'Personne ayant fait une quarantaine (zéro-risque)',\r\n        age: '30',\r\n        gender : 'ND',\r\n        risk:0,\r\n    }\r\n]","D:\\Dev\\covinsights\\src\\components\\Calculator\\Evolution.js",[],"D:\\Dev\\covinsights\\src\\components\\constants\\profilesEng.js",["215"],"D:\\Dev\\covinsights\\src\\css\\FooterWrapper.js",[],"D:\\Dev\\covinsights\\src\\components\\Insights\\ComparisonRisksEng.js",["216","217"],"D:\\Dev\\covinsights\\src\\components\\constants\\activities.js",["218"],"D:\\Dev\\covinsights\\src\\css\\Theme.js",["219"],"D:\\Dev\\covinsights\\src\\css\\PageContainerWrapper.js",[],"D:\\Dev\\covinsights\\src\\reportWebVitals.js",[],{"ruleId":"220","severity":1,"message":"221","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":17},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":18,"column":36,"nodeType":"230","messageId":"231","endLine":18,"endColumn":38},{"ruleId":"228","severity":1,"message":"229","line":22,"column":36,"nodeType":"230","messageId":"231","endLine":22,"endColumn":38},{"ruleId":"220","severity":1,"message":"232","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"224","replacedBy":"233"},{"ruleId":"226","replacedBy":"234"},{"ruleId":"220","severity":1,"message":"232","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"224","replacedBy":"235"},{"ruleId":"226","replacedBy":"236"},{"ruleId":"228","severity":1,"message":"229","line":210,"column":20,"nodeType":"230","messageId":"231","endLine":210,"endColumn":22},{"ruleId":"228","severity":1,"message":"229","line":213,"column":26,"nodeType":"230","messageId":"231","endLine":213,"endColumn":28},{"ruleId":"228","severity":1,"message":"229","line":213,"column":52,"nodeType":"230","messageId":"231","endLine":213,"endColumn":54},{"ruleId":"228","severity":1,"message":"229","line":216,"column":26,"nodeType":"230","messageId":"231","endLine":216,"endColumn":28},{"ruleId":"224","replacedBy":"237"},{"ruleId":"226","replacedBy":"238"},{"ruleId":"224","replacedBy":"239"},{"ruleId":"226","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","endLine":222,"endColumn":4},{"ruleId":"224","replacedBy":"244"},{"ruleId":"226","replacedBy":"245"},{"ruleId":"220","severity":1,"message":"246","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":13},{"ruleId":"220","severity":1,"message":"232","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"247","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":16},{"ruleId":"220","severity":1,"message":"248","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":24},{"ruleId":"220","severity":1,"message":"249","line":14,"column":9,"nodeType":"222","messageId":"223","endLine":14,"endColumn":25},{"ruleId":"220","severity":1,"message":"250","line":14,"column":27,"nodeType":"222","messageId":"223","endLine":14,"endColumn":35},{"ruleId":"220","severity":1,"message":"251","line":14,"column":52,"nodeType":"222","messageId":"223","endLine":14,"endColumn":63},{"ruleId":"220","severity":1,"message":"252","line":14,"column":65,"nodeType":"222","messageId":"223","endLine":14,"endColumn":82},{"ruleId":"220","severity":1,"message":"253","line":14,"column":84,"nodeType":"222","messageId":"223","endLine":14,"endColumn":104},{"ruleId":"220","severity":1,"message":"254","line":19,"column":13,"nodeType":"222","messageId":"223","endLine":19,"endColumn":19},{"ruleId":"220","severity":1,"message":"255","line":91,"column":9,"nodeType":"222","messageId":"223","endLine":91,"endColumn":14},{"ruleId":"220","severity":1,"message":"256","line":10,"column":22,"nodeType":"222","messageId":"223","endLine":10,"endColumn":28},{"ruleId":"220","severity":1,"message":"254","line":19,"column":13,"nodeType":"222","messageId":"223","endLine":19,"endColumn":19},{"ruleId":"220","severity":1,"message":"255","line":92,"column":9,"nodeType":"222","messageId":"223","endLine":92,"endColumn":14},{"ruleId":"220","severity":1,"message":"257","line":168,"column":13,"nodeType":"222","messageId":"223","endLine":168,"endColumn":14},{"ruleId":"228","severity":1,"message":"258","line":184,"column":28,"nodeType":"230","messageId":"231","endLine":184,"endColumn":30},{"ruleId":"220","severity":1,"message":"259","line":207,"column":13,"nodeType":"222","messageId":"223","endLine":207,"endColumn":16},{"ruleId":"228","severity":1,"message":"258","line":217,"column":34,"nodeType":"230","messageId":"231","endLine":217,"endColumn":36},{"ruleId":"228","severity":1,"message":"229","line":221,"column":18,"nodeType":"230","messageId":"231","endLine":221,"endColumn":20},{"ruleId":"220","severity":1,"message":"257","line":168,"column":13,"nodeType":"222","messageId":"223","endLine":168,"endColumn":14},{"ruleId":"228","severity":1,"message":"258","line":181,"column":28,"nodeType":"230","messageId":"231","endLine":181,"endColumn":30},{"ruleId":"220","severity":1,"message":"259","line":204,"column":13,"nodeType":"222","messageId":"223","endLine":204,"endColumn":16},{"ruleId":"228","severity":1,"message":"258","line":214,"column":34,"nodeType":"230","messageId":"231","endLine":214,"endColumn":36},{"ruleId":"228","severity":1,"message":"229","line":218,"column":18,"nodeType":"230","messageId":"231","endLine":218,"endColumn":20},{"ruleId":"241","severity":1,"message":"242","line":5,"column":1,"nodeType":"243","endLine":66,"endColumn":2},{"ruleId":"241","severity":1,"message":"242","line":5,"column":1,"nodeType":"243","endLine":66,"endColumn":2},{"ruleId":"228","severity":1,"message":"229","line":18,"column":36,"nodeType":"230","messageId":"231","endLine":18,"endColumn":38},{"ruleId":"228","severity":1,"message":"229","line":22,"column":36,"nodeType":"230","messageId":"231","endLine":22,"endColumn":38},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","endLine":222,"endColumn":4},{"ruleId":"241","severity":1,"message":"260","line":1,"column":1,"nodeType":"243","endLine":13,"endColumn":2},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","no-native-reassign",["261"],"no-negated-in-lhs",["262"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Children' is defined but never used.",["261"],["262"],["261"],["262"],["261"],["262"],["261"],["262"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["261"],["262"],"'Paper' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'InteractionCrowd' is defined but never used.","'Activity' is defined but never used.","'RiskProfile' is defined but never used.","'WorkerRiskProfile' is defined but never used.","'NonWorkerRiskProfile' is defined but never used.","'Scroll' is defined but never used.","'mySum' is assigned a value but never used.","'Button' is defined but never used.","'i' is defined but never used.","Expected '!==' and instead saw '!='.","'res' is assigned a value but never used.","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]